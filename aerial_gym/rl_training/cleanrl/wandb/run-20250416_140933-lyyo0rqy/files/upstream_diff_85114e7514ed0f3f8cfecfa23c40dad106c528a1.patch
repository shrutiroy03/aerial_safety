diff --git a/aerial_gym/config/robot_config/base_quad_config.py b/aerial_gym/config/robot_config/base_quad_config.py
index d9de4e1..5af9b0a 100644
--- a/aerial_gym/config/robot_config/base_quad_config.py
+++ b/aerial_gym/config/robot_config/base_quad_config.py
@@ -59,7 +59,7 @@ class BaseQuadCfg:
         ]
 
     class sensor_config:
-        enable_camera = False
+        enable_camera = True
         camera_config = BaseDepthCameraConfig  # BaseNormalFaceIDCameraConfig
 
         enable_lidar = False
diff --git a/aerial_gym/config/task_config/navigation_task_config.py b/aerial_gym/config/task_config/navigation_task_config.py
index 7ecbda5..2f838d7 100644
--- a/aerial_gym/config/task_config/navigation_task_config.py
+++ b/aerial_gym/config/task_config/navigation_task_config.py
@@ -19,7 +19,7 @@ class task_config:
     episode_len_steps = 100  # real physics time for simulation is this value multiplied by sim.dt
 
     return_state_before_reset = (
-        False  # False as usually state is returned for next episode after reset
+        True  # False as usually state is returned for next episode after reset
     )
     # user can set the above to true if they so desire
 
diff --git a/aerial_gym/config/task_config/reach_avoid_task_config.py b/aerial_gym/config/task_config/reach_avoid_task_config.py
new file mode 100644
index 0000000..289a39b
--- /dev/null
+++ b/aerial_gym/config/task_config/reach_avoid_task_config.py
@@ -0,0 +1,106 @@
+import torch
+from aerial_gym import AERIAL_GYM_DIRECTORY
+
+
+class task_config:
+    seed = -1
+    sim_name = "base_sim"
+    env_name = "env_with_obstacles"
+    robot_name = "lmf2"
+    controller_name = "lmf2_velocity_control"
+    args = {}
+    num_envs = 128
+    use_warp = True
+    headless = True
+    device = "cuda:0"
+    observation_space_dim = 13 + 4 + 64  # root_state + action_dim _+ latent_dims
+    privileged_observation_space_dim = 0
+    action_space_dim = 4
+    episode_len_steps = 100  # real physics time for simulation is this value multiplied by sim.dt
+
+    return_state_before_reset = (
+        False  # False as usually state is returned for next episode after reset
+    )
+    # user can set the above to true if they so desire
+
+    target_min_ratio = [0.90, 0.1, 0.1]  # target ratio w.r.t environment bounds in x,y,z
+    target_max_ratio = [0.94, 0.90, 0.90]  # target ratio w.r.t environment bounds in x,y,z
+
+    reward_parameters = {
+        "velocity_max": 0.2,
+        "angvel_max": 0.2,
+        "obs_dist_lmin": 0.1,
+        "obs_dist_gmin": 0.05,
+        "wall_dist_lmin": 0.1,
+        "wall_dist_gmin": 0.05,
+        "collision_penalty": -100.0,
+    }
+
+    class vae_config:
+        use_vae = True
+        latent_dims = 64
+        model_file = (
+            AERIAL_GYM_DIRECTORY
+            + "/aerial_gym/utils/vae/weights/ICRA_test_set_more_sim_data_kld_beta_3_LD_64_epoch_49.pth"
+        )
+        model_folder = AERIAL_GYM_DIRECTORY
+        image_res = (270, 480)
+        interpolation_mode = "nearest"
+        return_sampled_latent = True
+
+    class curriculum:
+        min_level = 15
+        max_level = 50
+        check_after_log_instances = 2048
+        increase_step = 2
+        decrease_step = 1
+        success_rate_for_increase = 0.7
+        success_rate_for_decrease = 0.6
+
+        def update_curriculim_level(self, success_rate, current_level):
+            if success_rate > self.success_rate_for_increase:
+                return min(current_level + self.increase_step, self.max_level)
+            elif success_rate < self.success_rate_for_decrease:
+                return max(current_level - self.decrease_step, self.min_level)
+            return current_level
+
+    # def action_transformation_function(action):
+    #     clamped_action = torch.clamp(action, -1.0, 1.0)
+    #     max_speed = 1.5  # [m/s]
+    #     max_yawrate = torch.pi / 3  # [rad/s]
+    #     processed_action = clamped_action.clone()
+    #     processed_action[:, 0:3] = max_speed*processed_action[:, 0:3]
+    #     processed_action[:, 3] = max_yawrate*processed_action[:, 3]
+    #     return processed_action
+
+    def action_transformation_function(action):
+        clamped_action = torch.clamp(action, -1.0, 1.0)
+        max_speed = 2.0  # [m/s]
+        max_yawrate = torch.pi / 3  # [rad/s]
+
+        # clamped_action[:, 0:3] = max_speed * clamped_action[:, 0:3]
+        # clamped_action[:, 3] = max_yawrate * clamped_action[:, 3]
+        # return clamped_action
+
+        max_inclination_angle = torch.pi / 4  # [rad]
+
+        clamped_action[:, 0] += 1.0
+
+        processed_action = torch.zeros(
+            (clamped_action.shape[0], 4), device=task_config.device, requires_grad=False
+        )
+        processed_action[:, 0] = (
+            clamped_action[:, 0]
+            * torch.cos(max_inclination_angle * clamped_action[:, 1])
+            * max_speed
+            / 2.0
+        )
+        processed_action[:, 1] = 0
+        processed_action[:, 2] = (
+            clamped_action[:, 0]
+            * torch.sin(max_inclination_angle * clamped_action[:, 1])
+            * max_speed
+            / 2.0
+        )
+        processed_action[:, 3] = clamped_action[:, 2] * max_yawrate
+        return processed_action
diff --git a/aerial_gym/rl_training/rl_games/ppo_aerial_quad_navigation.yaml b/aerial_gym/rl_training/rl_games/ppo_aerial_quad_navigation.yaml
index 5efea2a..7c43366 100644
--- a/aerial_gym/rl_training/rl_games/ppo_aerial_quad_navigation.yaml
+++ b/aerial_gym/rl_training/rl_games/ppo_aerial_quad_navigation.yaml
@@ -1,7 +1,7 @@
 params:  
   seed: 10
   algo:
-    name: a2c_continuous
+    name: a2c_continuous #edit algo to sac
 
   model:
     name: continuous_a2c_logstd
diff --git a/aerial_gym/rl_training/rl_games/runner.py b/aerial_gym/rl_training/rl_games/runner.py
index 7e8ffb4..855a3e5 100644
--- a/aerial_gym/rl_training/rl_games/runner.py
+++ b/aerial_gym/rl_training/rl_games/runner.py
@@ -255,7 +255,7 @@ def get_args():
             "name": "--use_warp",
             "type": lambda x: bool(distutils.util.strtobool(x)),
             "default": "True",
-            "help": "Choose whether to use warp or Isaac Gym rendeing pipeline.",
+            "help": "Choose whether to use warp or Isaac Gym rendering pipeline.",
         },
     ]
 
@@ -319,7 +319,7 @@ if __name__ == "__main__":
 
         wandb.init(
             project=args["wandb_project_name"],
-            entity=args["wandb_entity"],
+            entity='shrutiroy03-princeton-university',
             sync_tensorboard=True,
             config=config,
             monitor_gym=True,
diff --git a/aerial_gym/rl_training/rl_games/sac_aerial_quad_navigation.yaml b/aerial_gym/rl_training/rl_games/sac_aerial_quad_navigation.yaml
new file mode 100644
index 0000000..aaa450f
--- /dev/null
+++ b/aerial_gym/rl_training/rl_games/sac_aerial_quad_navigation.yaml
@@ -0,0 +1,78 @@
+params:  
+  seed: 10
+  algo:
+    name: sac #edit algo to sac
+
+  model:
+    name: continuous_a2c_logstd
+  
+  load_checkpoint: False
+
+  network:
+    name: actor_critic
+    separate: False
+    space:
+      continuous:
+        mu_activation: None
+        sigma_activation: None
+        mu_init:
+          name: default
+        sigma_init:
+          name: const_initializer
+          val: 0
+        fixed_sigma: True
+    mlp:
+      units: [256,128,64]
+      d2rl: False
+      activation: elu
+      initializer:
+        name: default
+        scale: 2
+    # rnn:
+    #     name: gru
+    #     units: 32
+    #     layers: 1
+    #     before_mlp: False
+    #     layer_norm: True
+  config:
+    env_name: quad
+    env_config:
+      num_envs: 8192
+      
+    name: gen_sac
+    reward_shaper:
+      # min_val: -1
+      scale_value: 0.1
+
+    normalize_advantage: True
+    gamma: 0.98
+    tau: 0.95
+    ppo: True
+    learning_rate: 1e-4
+    lr_schedule: adaptive
+    kl_threshold: 0.016
+    save_best_after: 10
+    score_to_win: 100000
+    grad_norm: 1.0
+    entropy_coef: 0
+    truncate_grads: True
+    e_clip: 0.2
+    clip_value: False
+    num_actors: 1024
+    horizon_length: 32
+    minibatch_size: 2048
+    mini_epochs: 4
+    critic_coef: 2
+    normalize_input: True
+    bounds_loss_coef: 0.0001
+    max_epochs: 500
+    normalize_value: True
+    use_diagnostics: True
+    value_bootstrap: True
+    #weight_decay: 0.0001
+    use_smooth_clamp: False
+
+    player:
+      render: True
+      deterministic: True
+      games_num: 100000
\ No newline at end of file
diff --git a/aerial_gym/rl_training/rl_games/wandb/debug-cli.shruti.log b/aerial_gym/rl_training/rl_games/wandb/debug-cli.shruti.log
new file mode 100644
index 0000000..95c54fb
--- /dev/null
+++ b/aerial_gym/rl_training/rl_games/wandb/debug-cli.shruti.log
@@ -0,0 +1,34 @@
+2025-04-12 01:00:06 ERROR 400 response executing GraphQL.
+2025-04-12 01:00:06 ERROR {"errors":[{"message":"entityName required for models query","path":["models"]}],"data":{"models":null}}
+2025-04-12 01:00:06 ERROR Traceback (most recent call last):
+  File "/home/shruti/miniconda3/envs/safe-rl/lib/python3.8/site-packages/wandb/apis/normalize.py", line 25, in wrapper
+    return func(*args, **kwargs)
+  File "/home/shruti/miniconda3/envs/safe-rl/lib/python3.8/site-packages/wandb/sdk/internal/internal_api.py", line 501, in list_projects
+    self.gql(
+  File "/home/shruti/miniconda3/envs/safe-rl/lib/python3.8/site-packages/wandb/sdk/lib/retry.py", line 108, in __call__
+    result = self._call_fn(*args, **kwargs)
+  File "/home/shruti/miniconda3/envs/safe-rl/lib/python3.8/site-packages/wandb/sdk/internal/internal_api.py", line 158, in execute
+    return self.client.execute(*args, **kwargs)
+  File "/home/shruti/miniconda3/envs/safe-rl/lib/python3.8/site-packages/wandb/vendor/gql-0.2.0/wandb_gql/client.py", line 52, in execute
+    result = self._get_result(document, *args, **kwargs)
+  File "/home/shruti/miniconda3/envs/safe-rl/lib/python3.8/site-packages/wandb/vendor/gql-0.2.0/wandb_gql/client.py", line 60, in _get_result
+    return self.transport.execute(document, *args, **kwargs)
+  File "/home/shruti/miniconda3/envs/safe-rl/lib/python3.8/site-packages/wandb/vendor/gql-0.2.0/wandb_gql/transport/requests.py", line 39, in execute
+    request.raise_for_status()
+  File "/home/shruti/miniconda3/envs/safe-rl/lib/python3.8/site-packages/requests/models.py", line 1024, in raise_for_status
+    raise HTTPError(http_error_msg, response=self)
+requests.exceptions.HTTPError: 400 Client Error: Bad Request for url: https://api.wandb.ai/graphql
+
+During handling of the above exception, another exception occurred:
+
+Traceback (most recent call last):
+  File "/home/shruti/miniconda3/envs/safe-rl/lib/python3.8/site-packages/wandb/cli/cli.py", line 97, in wrapper
+    return func(*args, **kwargs)
+  File "/home/shruti/miniconda3/envs/safe-rl/lib/python3.8/site-packages/wandb/cli/cli.py", line 192, in projects
+    projects = api.list_projects(entity=entity)
+  File "/home/shruti/miniconda3/envs/safe-rl/lib/python3.8/site-packages/wandb/apis/internal.py", line 64, in list_projects
+    return self.api.list_projects(entity=entity)
+  File "/home/shruti/miniconda3/envs/safe-rl/lib/python3.8/site-packages/wandb/apis/normalize.py", line 27, in wrapper
+    raise CommError(err.response, err)
+wandb.errors.CommError: <Response [400]>
+
diff --git a/aerial_gym/rl_training/rl_games/wandb/debug-internal.log b/aerial_gym/rl_training/rl_games/wandb/debug-internal.log
new file mode 120000
index 0000000..bad23fa
--- /dev/null
+++ b/aerial_gym/rl_training/rl_games/wandb/debug-internal.log
@@ -0,0 +1 @@
+run-20250412_013517-iah7akyu/logs/debug-internal.log
\ No newline at end of file
diff --git a/aerial_gym/rl_training/rl_games/wandb/debug.log b/aerial_gym/rl_training/rl_games/wandb/debug.log
new file mode 120000
index 0000000..9ad204d
--- /dev/null
+++ b/aerial_gym/rl_training/rl_games/wandb/debug.log
@@ -0,0 +1 @@
+run-20250412_013517-iah7akyu/logs/debug.log
\ No newline at end of file
diff --git a/aerial_gym/rl_training/rl_games/wandb/latest-run b/aerial_gym/rl_training/rl_games/wandb/latest-run
new file mode 120000
index 0000000..87b3ba5
--- /dev/null
+++ b/aerial_gym/rl_training/rl_games/wandb/latest-run
@@ -0,0 +1 @@
+run-20250412_013517-iah7akyu
\ No newline at end of file
diff --git a/aerial_gym/rl_training/rl_games/wandb/run-20250226_214823-bwnfbnex/files/code/aerial_gym/rl_training/rl_games/runner.py b/aerial_gym/rl_training/rl_games/wandb/run-20250226_214823-bwnfbnex/files/code/aerial_gym/rl_training/rl_games/runner.py
new file mode 100644
index 0000000..bd45a3c
--- /dev/null
+++ b/aerial_gym/rl_training/rl_games/wandb/run-20250226_214823-bwnfbnex/files/code/aerial_gym/rl_training/rl_games/runner.py
@@ -0,0 +1,331 @@
+import numpy as np
+import os
+import yaml
+
+
+import isaacgym
+
+
+from aerial_gym.registry.task_registry import task_registry
+from aerial_gym.utils.helpers import parse_arguments
+
+import gym
+from gym import spaces
+from argparse import Namespace
+
+from rl_games.common import env_configurations, vecenv
+
+import torch
+import distutils
+
+os.environ["XLA_PYTHON_CLIENT_PREALLOCATE"] = "false"
+# import warnings
+# warnings.filterwarnings("error")
+
+
+class ExtractObsWrapper(gym.Wrapper):
+    def __init__(self, env):
+        super().__init__(env)
+
+    def reset(self, **kwargs):
+        observations, *_ = super().reset(**kwargs)
+        return observations["observations"]
+
+    def step(self, action):
+        observations, rewards, terminated, truncated, infos = super().step(action)
+
+        dones = torch.where(
+            terminated | truncated,
+            torch.ones_like(terminated),
+            torch.zeros_like(terminated),
+        )
+
+        return (
+            observations["observations"],
+            rewards,
+            dones,
+            infos,
+        )
+
+
+class AERIALRLGPUEnv(vecenv.IVecEnv):
+    def __init__(self, config_name, num_actors, **kwargs):
+        self.env = env_configurations.configurations[config_name]["env_creator"](**kwargs)
+        self.env = ExtractObsWrapper(self.env)
+
+    def step(self, actions):
+        return self.env.step(actions)
+
+    def reset(self):
+        return self.env.reset()
+
+    def reset_done(self):
+        return self.env.reset_done()
+
+    def get_number_of_agents(self):
+        return self.env.get_number_of_agents()
+
+    def get_env_info(self):
+        info = {}
+        info["action_space"] = spaces.Box(
+            -np.ones(self.env.task_config.action_space_dim),
+            np.ones(self.env.task_config.action_space_dim),
+        )
+        info["observation_space"] = spaces.Box(
+            np.ones(self.env.task_config.observation_space_dim) * -np.Inf,
+            np.ones(self.env.task_config.observation_space_dim) * np.Inf,
+        )
+        print(info["action_space"], info["observation_space"])
+        return info
+
+
+env_configurations.register(
+    "position_setpoint_task",
+    {
+        "env_creator": lambda **kwargs: task_registry.make_task("position_setpoint_task", **kwargs),
+        "vecenv_type": "AERIAL-RLGPU",
+    },
+)
+
+env_configurations.register(
+    "position_setpoint_task_sim2real",
+    {
+        "env_creator": lambda **kwargs: task_registry.make_task(
+            "position_setpoint_task_sim2real", **kwargs
+        ),
+        "vecenv_type": "AERIAL-RLGPU",
+    },
+)
+
+env_configurations.register(
+    "position_setpoint_task_acceleration_sim2real",
+    {
+        "env_creator": lambda **kwargs: task_registry.make_task(
+            "position_setpoint_task_acceleration_sim2real", **kwargs
+        ),
+        "vecenv_type": "AERIAL-RLGPU",
+    },
+)
+
+env_configurations.register(
+    "navigation_task",
+    {
+        "env_creator": lambda **kwargs: task_registry.make_task("navigation_task", **kwargs),
+        "vecenv_type": "AERIAL-RLGPU",
+    },
+)
+
+env_configurations.register(
+    "position_setpoint_task_reconfigurable",
+    {
+        "env_creator": lambda **kwargs: task_registry.make_task(
+            "position_setpoint_task_reconfigurable", **kwargs
+        ),
+        "vecenv_type": "AERIAL-RLGPU",
+    },
+)
+
+env_configurations.register(
+    "position_setpoint_task_morphy",
+    {
+        "env_creator": lambda **kwargs: task_registry.make_task(
+            "position_setpoint_task_morphy", **kwargs
+        ),
+        "vecenv_type": "AERIAL-RLGPU",
+    },
+)
+
+env_configurations.register(
+    "position_setpoint_task_sim2real_end_to_end",
+    {
+        "env_creator": lambda **kwargs: task_registry.make_task(
+            "position_setpoint_task_sim2real_end_to_end", **kwargs
+        ),
+        "vecenv_type": "AERIAL-RLGPU",
+    },
+)
+
+vecenv.register(
+    "AERIAL-RLGPU",
+    lambda config_name, num_actors, **kwargs: AERIALRLGPUEnv(config_name, num_actors, **kwargs),
+)
+
+
+def get_args():
+    from isaacgym import gymutil
+
+    custom_parameters = [
+        {
+            "name": "--seed",
+            "type": int,
+            "default": 0,
+            "required": False,
+            "help": "Random seed, if larger than 0 will overwrite the value in yaml config.",
+        },
+        {
+            "name": "--tf",
+            "required": False,
+            "help": "run tensorflow runner",
+            "action": "store_true",
+        },
+        {
+            "name": "--train",
+            "required": False,
+            "help": "train network",
+            "action": "store_true",
+        },
+        {
+            "name": "--play",
+            "required": False,
+            "help": "play(test) network",
+            "action": "store_true",
+        },
+        {
+            "name": "--checkpoint",
+            "type": str,
+            "required": False,
+            "help": "path to checkpoint",
+        },
+        {
+            "name": "--file",
+            "type": str,
+            "default": "ppo_aerial_quad.yaml",
+            "required": False,
+            "help": "path to config",
+        },
+        {
+            "name": "--num_envs",
+            "type": int,
+            "default": "1024",
+            "help": "Number of environments to create. Overrides config file if provided.",
+        },
+        {
+            "name": "--sigma",
+            "type": float,
+            "required": False,
+            "help": "sets new sigma value in case if 'fixed_sigma: True' in yaml config",
+        },
+        {
+            "name": "--track",
+            "action": "store_true",
+            "help": "if toggled, this experiment will be tracked with Weights and Biases",
+        },
+        {
+            "name": "--wandb-project-name",
+            "type": str,
+            "default": "rl_games",
+            "help": "the wandb's project name",
+        },
+        {
+            "name": "--wandb-entity",
+            "type": str,
+            "default": None,
+            "help": "the entity (team) of wandb's project",
+        },
+        {
+            "name": "--task",
+            "type": str,
+            "default": "navigation_task",
+            "help": "Override task from config file if provided.",
+        },
+        {
+            "name": "--experiment_name",
+            "type": str,
+            "help": "Name of the experiment to run or load. Overrides config file if provided.",
+        },
+        {
+            "name": "--headless",
+            "type": lambda x: bool(distutils.util.strtobool(x)),
+            "default": "False",
+            "help": "Force display off at all times",
+        },
+        {
+            "name": "--horovod",
+            "action": "store_true",
+            "default": False,
+            "help": "Use horovod for multi-gpu training",
+        },
+        {
+            "name": "--rl_device",
+            "type": str,
+            "default": "cuda:0",
+            "help": "Device used by the RL algorithm, (cpu, gpu, cuda:0, cuda:1 etc..)",
+        },
+        {
+            "name": "--use_warp",
+            "type": lambda x: bool(distutils.util.strtobool(x)),
+            "default": "True",
+            "help": "Choose whether to use warp or Isaac Gym rendering pipeline.",
+        },
+    ]
+
+    # parse arguments
+    args = parse_arguments(description="RL Policy", custom_parameters=custom_parameters)
+
+    # name allignment
+    args.sim_device_id = args.compute_device_id
+    args.sim_device = args.sim_device_type
+    if args.sim_device == "cuda":
+        args.sim_device += f":{args.sim_device_id}"
+    return args
+
+
+def update_config(config, args):
+
+    if args["task"] is not None:
+        config["params"]["config"]["env_name"] = args["task"]
+    if args["experiment_name"] is not None:
+        config["params"]["config"]["name"] = args["experiment_name"]
+    config["params"]["config"]["env_config"]["headless"] = args["headless"]
+    config["params"]["config"]["env_config"]["num_envs"] = args["num_envs"]
+    config["params"]["config"]["env_config"]["use_warp"] = args["use_warp"]
+    if args["num_envs"] > 0:
+        config["params"]["config"]["num_actors"] = args["num_envs"]
+        # config['params']['config']['num_envs'] = args['num_envs']
+        config["params"]["config"]["env_config"]["num_envs"] = args["num_envs"]
+    if args["seed"] > 0:
+        config["params"]["seed"] = args["seed"]
+        config["params"]["config"]["env_config"]["seed"] = args["seed"]
+
+    config["params"]["config"]["player"] = {"use_vecenv": True}
+    return config
+
+
+if __name__ == "__main__":
+    os.makedirs("nn", exist_ok=True)
+    os.makedirs("runs", exist_ok=True)
+
+    args = vars(get_args())
+
+    config_name = args["file"]
+
+    print("Loading config: ", config_name)
+    with open(config_name, "r") as stream:
+        config = yaml.safe_load(stream)
+
+        config = update_config(config, args)
+
+        from rl_games.torch_runner import Runner
+
+        runner = Runner()
+        try:
+            runner.load(config)
+        except yaml.YAMLError as exc:
+            print(exc)
+
+    rank = int(os.getenv("LOCAL_RANK", "0"))
+    if args["track"] and rank == 0:
+        import wandb
+
+        wandb.init(
+            project=args["wandb_project_name"],
+            entity=args["wandb_entity"],
+            sync_tensorboard=True,
+            config=config,
+            monitor_gym=True,
+            save_code=True,
+        )
+    runner.run(args)
+
+    if args["track"] and rank == 0:
+        wandb.finish()
diff --git a/aerial_gym/rl_training/rl_games/wandb/run-20250226_214823-bwnfbnex/files/conda-environment.yaml b/aerial_gym/rl_training/rl_games/wandb/run-20250226_214823-bwnfbnex/files/conda-environment.yaml
new file mode 100644
index 0000000..b5e6902
--- /dev/null
+++ b/aerial_gym/rl_training/rl_games/wandb/run-20250226_214823-bwnfbnex/files/conda-environment.yaml
@@ -0,0 +1,409 @@
+name: aerialgym
+channels:
+  - pytorch3d
+  - iopath
+  - fvcore
+  - pytorch
+  - nvidia
+  - nvidia/label/cuda-11.8.0
+  - conda-forge
+  - defaults
+  - https://repo.anaconda.com/pkgs/main
+  - https://repo.anaconda.com/pkgs/r
+dependencies:
+  - _libgcc_mutex=0.1=main
+  - _openmp_mutex=5.1=1_gnu
+  - absl-py=2.1.0=pyhd8ed1ab_0
+  - aiohttp=3.7.4.post0=py38h497a2fe_1
+  - antlr-python-runtime=4.9.3=pyhd8ed1ab_1
+  - anyio=4.5.0=pyhd8ed1ab_0
+  - appdirs=1.4.4=pyh9f0ad1d_0
+  - argon2-cffi=23.1.0=pyhd8ed1ab_0
+  - argon2-cffi-bindings=21.2.0=py38h01eb140_4
+  - arrow=1.3.0=pyhd8ed1ab_0
+  - asttokens=3.0.0=pyhd8ed1ab_0
+  - async-lru=2.0.4=pyhd8ed1ab_0
+  - async-timeout=3.0.1=py_1000
+  - attrs=24.2.0=pyh71513ae_0
+  - babel=2.16.0=pyhd8ed1ab_0
+  - backcall=0.2.0=pyh9f0ad1d_0
+  - beautifulsoup4=4.12.3=pyha770c72_0
+  - blas=1.0=mkl
+  - bleach=6.1.0=pyhd8ed1ab_0
+  - blinker=1.8.2=pyhd8ed1ab_0
+  - brotli=1.1.0=hb9d3cd8_2
+  - brotli-bin=1.1.0=hb9d3cd8_2
+  - brotli-python=1.0.9=py38hfa26641_7
+  - bullet-cpp=3.21=h43a58ef_1
+  - bzip2=1.0.8=h5eee18b_6
+  - c-ares=1.19.1=h5eee18b_0
+  - ca-certificates=2025.2.25=h06a4308_0
+  - cached-property=1.5.2=hd8ed1ab_1
+  - cached_property=1.5.2=pyha770c72_1
+  - cachetools=5.5.0=pyhd8ed1ab_0
+  - certifi=2024.8.30=pyhd8ed1ab_0
+  - cffi=1.15.0=py38h3931269_0
+  - chardet=4.0.0=py38h578d9bd_3
+  - charset-normalizer=3.4.0=pyhd8ed1ab_0
+  - click=8.1.7=unix_pyh707e725_0
+  - colorama=0.4.6=pyhd8ed1ab_0
+  - comm=0.2.2=pyhd8ed1ab_0
+  - cryptography=43.0.0=py38hdda0065_0
+  - cuda=11.8.0=0
+  - cuda-cccl=11.8.89=0
+  - cuda-command-line-tools=11.8.0=0
+  - cuda-compiler=11.8.0=0
+  - cuda-cudart=11.8.89=0
+  - cuda-cudart-dev=11.8.89=0
+  - cuda-cuobjdump=11.8.86=0
+  - cuda-cupti=11.8.87=0
+  - cuda-cuxxfilt=11.8.86=0
+  - cuda-demo-suite=11.8.86=0
+  - cuda-documentation=11.8.86=0
+  - cuda-driver-dev=11.8.89=0
+  - cuda-gdb=11.8.86=0
+  - cuda-libraries=11.8.0=0
+  - cuda-libraries-dev=11.8.0=0
+  - cuda-memcheck=11.8.86=0
+  - cuda-nsight=11.8.86=0
+  - cuda-nsight-compute=11.8.0=0
+  - cuda-nvcc=11.8.89=0
+  - cuda-nvdisasm=11.8.86=0
+  - cuda-nvml-dev=11.8.86=0
+  - cuda-nvprof=11.8.87=0
+  - cuda-nvprune=11.8.86=0
+  - cuda-nvrtc=11.8.89=0
+  - cuda-nvrtc-dev=11.8.89=0
+  - cuda-nvtx=11.8.86=0
+  - cuda-nvvp=11.8.87=0
+  - cuda-opencl=12.4.127=0
+  - cuda-profiler-api=11.8.86=0
+  - cuda-runtime=11.8.0=0
+  - cuda-sanitizer-api=11.8.86=0
+  - cuda-toolkit=11.8.0=0
+  - cuda-tools=11.8.0=0
+  - cuda-visual-tools=11.8.0=0
+  - cycler=0.12.1=pyhd8ed1ab_0
+  - dbus=1.13.18=hb2f20db_0
+  - debugpy=1.6.7=py38h6a678d5_0
+  - defusedxml=0.7.1=pyhd8ed1ab_0
+  - dill=0.3.9=pyhd8ed1ab_0
+  - docker-pycreds=0.4.0=py_0
+  - entrypoints=0.4=pyhd8ed1ab_0
+  - exceptiongroup=1.2.2=pyhd8ed1ab_0
+  - executing=2.1.0=pyhd8ed1ab_0
+  - expat=2.6.4=h5888daf_0
+  - fastcache=1.1.0=py38h7b6447c_0
+  - ffmpeg=4.3=hf484d3e_0
+  - filelock=3.13.1=py38h06a4308_0
+  - fontconfig=2.14.0=h8e229c2_0
+  - fqdn=1.5.1=pyhd8ed1ab_0
+  - freetype=2.10.4=h0708190_1
+  - fvcore=0.1.5.post20210915=py38
+  - gds-tools=1.4.0.31=0
+  - geos=3.10.2=h9c3ff4c_0
+  - giflib=5.2.2=h5eee18b_0
+  - glib=2.78.4=h6a678d5_0
+  - glib-tools=2.78.4=h6a678d5_0
+  - gmp=6.3.0=h6a678d5_0
+  - gmpy2=2.1.2=py38heeb90bb_0
+  - gnutls=3.6.15=he1e5248_0
+  - google-auth=2.35.0=pyhff2d567_0
+  - google-auth-oauthlib=1.0.0=pyhd8ed1ab_1
+  - grpcio=1.62.2=py38h6a678d5_0
+  - gst-plugins-base=1.14.1=h6a678d5_1
+  - gstreamer=1.14.1=h5eee18b_1
+  - gym-notices=0.0.8=pyhd8ed1ab_0
+  - h11=0.14.0=pyhd8ed1ab_0
+  - h2=4.1.0=pyhd8ed1ab_0
+  - hpack=4.0.0=pyh9f0ad1d_0
+  - httpcore=1.0.7=pyh29332c3_1
+  - httpx=0.27.2=pyhd8ed1ab_0
+  - hyperframe=6.0.1=pyhd8ed1ab_0
+  - icu=58.2=hf484d3e_1000
+  - idna=3.10=pyhd8ed1ab_0
+  - importlib-metadata=8.5.0=pyha770c72_0
+  - importlib_metadata=8.5.0=hd8ed1ab_1
+  - importlib_resources=6.4.5=pyhd8ed1ab_0
+  - intel-openmp=2021.4.0=h06a4308_3561
+  - iopath=0.1.9=py38
+  - ipykernel=6.29.5=pyh3099207_0
+  - ipython=8.12.2=pyh41d4057_0
+  - ipywidgets=8.1.5=pyhd8ed1ab_0
+  - isoduration=20.11.0=pyhd8ed1ab_0
+  - jbig=2.1=h7f98852_2003
+  - jedi=0.19.1=pyhd8ed1ab_0
+  - jinja2=3.1.4=pyhd8ed1ab_0
+  - jpeg=9e=h166bdaf_1
+  - json5=0.9.25=pyhd8ed1ab_0
+  - jsonpointer=3.0.0=py38h578d9bd_0
+  - jsonschema=4.23.0=pyhd8ed1ab_0
+  - jsonschema-specifications=2024.10.1=pyhd8ed1ab_0
+  - jsonschema-with-format-nongpl=4.23.0=hd8ed1ab_1
+  - jupyter=1.1.1=pyhd8ed1ab_0
+  - jupyter-lsp=2.2.5=pyhd8ed1ab_0
+  - jupyter_client=8.6.3=pyhd8ed1ab_0
+  - jupyter_console=6.6.3=pyhd8ed1ab_0
+  - jupyter_core=5.7.2=pyh31011fe_1
+  - jupyter_events=0.10.0=pyhd8ed1ab_0
+  - jupyter_server=2.14.2=pyhd8ed1ab_0
+  - jupyter_server_terminals=0.5.3=pyhd8ed1ab_0
+  - jupyterlab=4.2.5=pyhd8ed1ab_0
+  - jupyterlab_pygments=0.3.0=pyhd8ed1ab_1
+  - jupyterlab_server=2.27.3=pyhd8ed1ab_0
+  - jupyterlab_widgets=3.0.13=pyhd8ed1ab_0
+  - krb5=1.20.1=h143b758_1
+  - lame=3.100=h7b6447c_0
+  - lcms2=2.12=hddcbb42_0
+  - ld_impl_linux-64=2.40=h12ee557_0
+  - lerc=2.2.1=h9c3ff4c_0
+  - libabseil=20240116.2=cxx17_h6a678d5_0
+  - libblas=3.9.0=12_linux64_mkl
+  - libbrotlicommon=1.1.0=hb9d3cd8_2
+  - libbrotlidec=1.1.0=hb9d3cd8_2
+  - libbrotlienc=1.1.0=hb9d3cd8_2
+  - libcblas=3.9.0=12_linux64_mkl
+  - libclang=10.0.1=default_hde54327_1
+  - libcublas=11.11.3.6=0
+  - libcublas-dev=11.11.3.6=0
+  - libcufft=10.9.0.58=0
+  - libcufft-dev=10.9.0.58=0
+  - libcufile=1.9.1.3=0
+  - libcufile-dev=1.4.0.31=0
+  - libcurand=10.3.5.147=0
+  - libcurand-dev=10.3.0.86=0
+  - libcusolver=11.4.1.48=0
+  - libcusolver-dev=11.4.1.48=0
+  - libcusparse=11.7.5.86=0
+  - libcusparse-dev=11.7.5.86=0
+  - libdeflate=1.7=h7f98852_5
+  - libedit=3.1.20230828=h5eee18b_0
+  - libevent=2.1.12=hf998b51_1
+  - libexpat=2.6.4=h5888daf_0
+  - libffi=3.4.4=h6a678d5_1
+  - libgcc=14.2.0=h767d61c_2
+  - libgcc-ng=14.2.0=h69a702a_2
+  - libgfortran-ng=13.2.0=h69a702a_0
+  - libgfortran5=13.2.0=ha4646dd_0
+  - libglib=2.78.4=hdc74915_0
+  - libgomp=14.2.0=h767d61c_2
+  - libgrpc=1.62.2=h2d74bed_0
+  - libiconv=1.16=h5eee18b_3
+  - libidn2=2.3.4=h5eee18b_0
+  - libjpeg-turbo=2.0.0=h9bf148f_0
+  - liblapack=3.9.0=12_linux64_mkl
+  - libllvm10=10.0.1=he513fc3_3
+  - libnpp=11.8.0.86=0
+  - libnpp-dev=11.8.0.86=0
+  - libnvfatbin=12.4.127=0
+  - libnvjitlink=12.4.127=0
+  - libnvjpeg=11.9.0.86=0
+  - libnvjpeg-dev=11.9.0.86=0
+  - libopenblas=0.3.21=h043d6bf_0
+  - libpng=1.6.37=h21135ba_2
+  - libpq=12.20=hdbd6064_0
+  - libprotobuf=4.25.3=he621ea3_0
+  - libsodium=1.0.18=h36c2ea0_1
+  - libstdcxx=14.2.0=h8f9b012_2
+  - libstdcxx-ng=11.2.0=h1234567_1
+  - libtasn1=4.19.0=h5eee18b_0
+  - libtiff=4.3.0=hf544144_1
+  - libunistring=0.9.10=h27cfd23_0
+  - libuuid=2.38.1=h0b41bf4_0
+  - libwebp=1.2.2=h55f646e_0
+  - libwebp-base=1.2.2=h7f98852_1
+  - libxcb=1.17.0=h8a09558_0
+  - libxkbcommon=1.0.3=he3ba5ed_0
+  - libxml2=2.9.14=h74e7548_0
+  - llvm-openmp=14.0.6=h9e868ea_0
+  - lz4-c=1.9.4=h6a678d5_1
+  - markdown=3.6=pyhd8ed1ab_0
+  - markupsafe=2.1.1=py38h0a891b7_1
+  - matplotlib-base=3.7.2=py38h1128e8f_0
+  - matplotlib-inline=0.1.7=pyhd8ed1ab_0
+  - metis=5.1.0=hd0bcaf9_1007
+  - mistune=3.0.2=pyhd8ed1ab_0
+  - mkl=2021.4.0=h06a4308_640
+  - mkl-service=2.4.0=py38h7f8727e_0
+  - mkl_fft=1.3.1=py38hd3c417c_0
+  - mkl_random=1.2.2=py38h51133e4_0
+  - mpc=1.3.1=h5eee18b_0
+  - mpfr=4.2.1=h90cbb55_3
+  - mpmath=1.3.0=py38h06a4308_0
+  - multidict=6.0.2=py38h0a891b7_1
+  - munkres=1.1.4=pyh9f0ad1d_0
+  - nbclient=0.10.2=pyhd8ed1ab_0
+  - nbconvert-core=7.16.4=pyhff2d567_2
+  - nbformat=5.10.4=pyhd8ed1ab_0
+  - ncurses=6.4=h6a678d5_0
+  - nest-asyncio=1.6.0=pyhd8ed1ab_0
+  - nettle=3.7.3=hbbd107a_1
+  - ninja-base=1.12.1=hdb19cb5_0
+  - notebook=7.2.2=pyhd8ed1ab_0
+  - notebook-shim=0.2.4=pyhd8ed1ab_0
+  - nsight-compute=2022.3.0.22=0
+  - nspr=4.36=h5888daf_0
+  - nss=3.89.1=h6a678d5_0
+  - oauthlib=3.2.2=pyhd8ed1ab_0
+  - olefile=0.47=pyhd8ed1ab_0
+  - omegaconf=2.3.0=pyhd8ed1ab_0
+  - openh264=2.1.1=h4ff587b_0
+  - openjpeg=2.4.0=hb52868f_1
+  - openssl=3.4.1=h7b32b05_0
+  - overrides=7.7.0=pyhd8ed1ab_0
+  - packaging=24.2=pyhd8ed1ab_2
+  - pandas=1.4.2=py38h47df419_1
+  - pandocfilters=1.5.0=pyhd8ed1ab_0
+  - parso=0.8.4=pyhd8ed1ab_0
+  - pcre2=10.42=hebb0a14_1
+  - pexpect=4.9.0=pyhd8ed1ab_0
+  - pickleshare=0.7.5=py_1003
+  - pillow=9.4.0=py38h6a678d5_0
+  - pip=24.2=py38h06a4308_0
+  - pkgutil-resolve-name=1.3.10=pyhd8ed1ab_1
+  - platformdirs=4.3.6=pyhd8ed1ab_0
+  - plotly=5.24.1=pyhd8ed1ab_0
+  - portalocker=2.10.1=py38h578d9bd_0
+  - prometheus_client=0.21.0=pyhd8ed1ab_0
+  - prompt-toolkit=3.0.48=pyha770c72_0
+  - prompt_toolkit=3.0.48=hd8ed1ab_1
+  - pthread-stubs=0.4=hb9d3cd8_1002
+  - ptyprocess=0.7.0=pyhd3deb0d_0
+  - pure_eval=0.2.3=pyhd8ed1ab_0
+  - pyasn1=0.6.1=pyhd8ed1ab_1
+  - pyasn1-modules=0.4.1=pyhd8ed1ab_0
+  - pybullet=3.21=py38h43a58ef_1
+  - pycparser=2.22=pyhd8ed1ab_0
+  - pygments=2.18.0=pyhd8ed1ab_0
+  - pyjwt=2.9.0=pyhd8ed1ab_1
+  - pyopenssl=24.2.1=pyhd8ed1ab_2
+  - pyqt=5.15.4=py38hfa26641_0
+  - pyqt5-sip=12.9.0=py38hfa26641_0
+  - pysocks=1.7.1=pyha2e5f31_6
+  - python=3.8.20=he870216_0
+  - python-fastjsonschema=2.20.0=pyhd8ed1ab_0
+  - python-json-logger=2.0.7=pyhd8ed1ab_0
+  - python_abi=3.8=2_cp38
+  - pytorch=2.2.0=py3.8_cuda11.8_cudnn8.7.0_0
+  - pytorch-cuda=11.8=h7e8668a_6
+  - pytorch-mutex=1.0=cuda
+  - pytorch3d=0.7.8=py38_cu118_pyt220
+  - pytz=2024.2=pyhd8ed1ab_0
+  - pyu2f=0.1.5=pyhd8ed1ab_0
+  - pyyaml=6.0=py38h0a891b7_5
+  - pyzmq=25.1.2=py38h6a678d5_0
+  - qt-main=5.15.2=h327a75a_7
+  - re2=2022.04.01=h27087fc_0
+  - readline=8.2=h5eee18b_0
+  - referencing=0.35.1=pyhd8ed1ab_0
+  - requests=2.32.3=pyhd8ed1ab_0
+  - requests-oauthlib=2.0.0=pyhd8ed1ab_0
+  - rfc3339-validator=0.1.4=pyhd8ed1ab_0
+  - rfc3986-validator=0.1.1=pyh9f0ad1d_0
+  - rpds-py=0.20.0=py38h4005ec7_0
+  - rsa=4.9=pyhd8ed1ab_0
+  - send2trash=1.8.3=pyh0d859eb_0
+  - setuptools=75.1.0=py38h06a4308_0
+  - shapely=1.8.2=py38h97f7145_1
+  - sip=6.5.1=py38h709712a_2
+  - six=1.16.0=pyh6c4a22f_0
+  - sniffio=1.3.1=pyhd8ed1ab_0
+  - soupsieve=2.5=pyhd8ed1ab_1
+  - sqlite=3.45.3=h5eee18b_0
+  - stack_data=0.6.2=pyhd8ed1ab_0
+  - suitesparse=5.10.1=h9e50725_1
+  - sympy=1.5.1=py38_0
+  - tabulate=0.9.0=pyhd8ed1ab_1
+  - tbb=2021.5.0=h924138e_1
+  - tenacity=9.0.0=pyhd8ed1ab_0
+  - tensorboard=2.13.0=pyhd8ed1ab_0
+  - tensorboard-data-server=0.7.0=py38h52d8a92_1
+  - termcolor=2.4.0=pyhd8ed1ab_0
+  - terminado=0.18.1=pyh0d859eb_0
+  - tinycss2=1.4.0=pyhd8ed1ab_0
+  - tk=8.6.14=h39e8969_0
+  - toml=0.10.2=pyhd8ed1ab_0
+  - tomli=2.0.2=pyhd8ed1ab_0
+  - torchaudio=2.2.0=py38_cu118
+  - torchtriton=2.2.0=py38
+  - torchvision=0.17.0=py38_cu118
+  - tornado=6.4.1=py38hfb59056_0
+  - tqdm=4.67.1=pyhd8ed1ab_0
+  - traitlets=5.14.3=pyhd8ed1ab_0
+  - types-python-dateutil=2.9.0.20241003=pyhff2d567_0
+  - typing-extensions=4.12.2=hd8ed1ab_0
+  - typing_extensions=4.12.2=pyha770c72_0
+  - typing_utils=0.1.0=pyhd8ed1ab_0
+  - unicodedata2=15.1.0=py38h01eb140_0
+  - uri-template=1.3.0=pyhd8ed1ab_0
+  - urllib3=2.2.3=pyhd8ed1ab_0
+  - wcwidth=0.2.13=pyhd8ed1ab_0
+  - webcolors=24.8.0=pyhd8ed1ab_0
+  - webencodings=0.5.1=pyhd8ed1ab_2
+  - websocket-client=1.8.0=pyhd8ed1ab_0
+  - werkzeug=3.0.6=pyhd8ed1ab_0
+  - wheel=0.44.0=py38h06a4308_0
+  - widgetsnbextension=4.0.13=pyhd8ed1ab_0
+  - xorg-libx11=1.8.11=h4f16b4b_0
+  - xorg-libxau=1.0.12=hb9d3cd8_0
+  - xorg-libxdmcp=1.1.5=hb9d3cd8_0
+  - xorg-libxext=1.3.6=hb9d3cd8_0
+  - xz=5.6.4=h5eee18b_1
+  - yacs=0.1.8=pyhd8ed1ab_0
+  - yaml=0.2.5=h7f98852_2
+  - yarl=1.7.2=py38h0a891b7_2
+  - zeromq=4.3.5=h6a678d5_0
+  - zipp=3.21.0=pyhd8ed1ab_0
+  - zlib=1.2.13=h5eee18b_1
+  - zstandard=0.23.0=py38h2c38b39_0
+  - zstd=1.5.6=hc292b87_0
+  - pip:
+      - aerial-gym==2.0.0
+      - cloudpickle==3.1.1
+      - colorlog==6.9.0
+      - contourpy==1.1.1
+      - cython==3.0.12
+      - decorator==5.2.1
+      - farama-notifications==0.0.4
+      - faster-fifo==1.4.7
+      - fonttools==4.56.0
+      - freetype-py==2.5.1
+      - fsspec==2025.2.0
+      - gitdb==4.0.12
+      - gitpython==3.1.44
+      - gym==0.23.1
+      - gymnasium==0.29.1
+      - huggingface-hub==0.29.1
+      - imageio==2.35.1
+      - kiwisolver==1.4.7
+      - lxml==5.3.1
+      - matplotlib==3.7.5
+      - networkx==2.2
+      - ninja==1.11.1.3
+      - numpy==1.23.0
+      - opencv-python==4.11.0.86
+      - pathtools==0.1.2
+      - promise==2.3
+      - protobuf==3.20.3
+      - psutil==5.9.8
+      - pycollada==0.6
+      - pygame==2.1.0
+      - pyglet==2.1.3
+      - pyopengl==3.1.0
+      - pyparsing==3.1.4
+      - pyrender==0.1.45
+      - python-dateutil==2.9.0.post0
+      - rl-games==1.6.1
+      - sample-factory==2.1.1
+      - scipy==1.10.1
+      - sentry-sdk==2.22.0
+      - setproctitle==1.3.5
+      - shortuuid==1.0.13
+      - signal-slot-mp==1.0.5
+      - smmap==5.0.2
+      - tensorboardx==2.6.2.2
+      - threadpoolctl==3.5.0
+      - trimesh==4.6.3
+      - wandb==0.12.21
+      - warp-lang==1.0.0b5
+prefix: /home/shruti/miniconda3/envs/aerialgym
diff --git a/aerial_gym/rl_training/rl_games/wandb/run-20250226_214823-bwnfbnex/files/config.yaml b/aerial_gym/rl_training/rl_games/wandb/run-20250226_214823-bwnfbnex/files/config.yaml
new file mode 100644
index 0000000..b355ff6
--- /dev/null
+++ b/aerial_gym/rl_training/rl_games/wandb/run-20250226_214823-bwnfbnex/files/config.yaml
@@ -0,0 +1,94 @@
+wandb_version: 1
+
+params:
+  desc: null
+  value:
+    seed: 10
+    algo:
+      name: a2c_continuous
+    model:
+      name: continuous_a2c_logstd
+    load_checkpoint: false
+    network:
+      name: actor_critic
+      separate: false
+      space:
+        continuous:
+          mu_activation: None
+          sigma_activation: None
+          mu_init:
+            name: default
+          sigma_init:
+            name: const_initializer
+            val: 0
+          fixed_sigma: true
+      mlp:
+        units:
+        - 256
+        - 128
+        - 64
+        d2rl: false
+        activation: elu
+        initializer:
+          name: default
+          scale: 2
+    config:
+      env_name: navigation_task
+      env_config:
+        num_envs: 16
+        headless: false
+        use_warp: true
+      name: gen_ppo
+      reward_shaper:
+        scale_value: 0.1
+      normalize_advantage: true
+      gamma: 0.98
+      tau: 0.95
+      ppo: true
+      learning_rate: 1e-4
+      lr_schedule: adaptive
+      kl_threshold: 0.016
+      save_best_after: 10
+      score_to_win: 100000
+      grad_norm: 1.0
+      entropy_coef: 0
+      truncate_grads: true
+      e_clip: 0.2
+      clip_value: false
+      num_actors: 16
+      horizon_length: 32
+      minibatch_size: 2048
+      mini_epochs: 4
+      critic_coef: 2
+      normalize_input: true
+      bounds_loss_coef: 0.0001
+      max_epochs: 500
+      normalize_value: true
+      use_diagnostics: true
+      value_bootstrap: true
+      use_smooth_clamp: false
+      player:
+        use_vecenv: true
+_wandb:
+  desc: null
+  value:
+    code_path: code/aerial_gym/rl_training/rl_games/runner.py
+    python_version: 3.8.20
+    cli_version: 0.16.6
+    framework: torch
+    is_jupyter_run: false
+    is_kaggle_kernel: false
+    start_time: 1740624503.0
+    t:
+      1:
+      - 1
+      - 55
+      3:
+      - 16
+      - 23
+      - 35
+      4: 3.8.20
+      5: 0.16.6
+      8:
+      - 5
+      13: linux-x86_64
diff --git a/aerial_gym/rl_training/rl_games/wandb/run-20250226_214823-bwnfbnex/files/diff.patch b/aerial_gym/rl_training/rl_games/wandb/run-20250226_214823-bwnfbnex/files/diff.patch
new file mode 100644
index 0000000..a7ff8db
--- /dev/null
+++ b/aerial_gym/rl_training/rl_games/wandb/run-20250226_214823-bwnfbnex/files/diff.patch
@@ -0,0 +1,38 @@
+diff --git a/aerial_gym/config/task_config/navigation_task_config.py b/aerial_gym/config/task_config/navigation_task_config.py
+index 7ecbda5..2f838d7 100644
+--- a/aerial_gym/config/task_config/navigation_task_config.py
++++ b/aerial_gym/config/task_config/navigation_task_config.py
+@@ -19,7 +19,7 @@ class task_config:
+     episode_len_steps = 100  # real physics time for simulation is this value multiplied by sim.dt
+ 
+     return_state_before_reset = (
+-        False  # False as usually state is returned for next episode after reset
++        True  # False as usually state is returned for next episode after reset
+     )
+     # user can set the above to true if they so desire
+ 
+diff --git a/aerial_gym/rl_training/rl_games/runner.py b/aerial_gym/rl_training/rl_games/runner.py
+index 7e8ffb4..bd45a3c 100644
+--- a/aerial_gym/rl_training/rl_games/runner.py
++++ b/aerial_gym/rl_training/rl_games/runner.py
+@@ -255,7 +255,7 @@ def get_args():
+             "name": "--use_warp",
+             "type": lambda x: bool(distutils.util.strtobool(x)),
+             "default": "True",
+-            "help": "Choose whether to use warp or Isaac Gym rendeing pipeline.",
++            "help": "Choose whether to use warp or Isaac Gym rendering pipeline.",
+         },
+     ]
+ 
+diff --git a/aerial_gym/task/__init__.py b/aerial_gym/task/__init__.py
+index 7dd966d..7975a4d 100644
+--- a/aerial_gym/task/__init__.py
++++ b/aerial_gym/task/__init__.py
+@@ -95,5 +95,5 @@ task_registry.register_task(
+ 
+ ## Uncomment this to use custom tasks
+ 
+-# from aerial_gym.task.custom_task.custom_task import CustomTask
+-# task_registry.register_task("custom_task", CustomTask, custom_task.task_config)
++#from aerial_gym.task.custom_task.custom_task import CustomTask
++#task_registry.register_task("custom_task", CustomTask, custom_task.task_config)
diff --git a/aerial_gym/rl_training/rl_games/wandb/run-20250226_214823-bwnfbnex/files/output.log b/aerial_gym/rl_training/rl_games/wandb/run-20250226_214823-bwnfbnex/files/output.log
new file mode 100644
index 0000000..cf3a4be
--- /dev/null
+++ b/aerial_gym/rl_training/rl_games/wandb/run-20250226_214823-bwnfbnex/files/output.log
@@ -0,0 +1,57 @@
+Started to play
+[BasePlayer] Creating vecenv:  navigation_task
+[isaacgym:gymutil.py] Unknown args:  ['--file=./ppo_aerial_quad_navigation.yaml', '--play', '--checkpoint=./runs/gen_ppo_26-16-11-42/nn/last_gen_ppo_ep_500_rew__377.14606_.pth', '--track', 'wandb-project-name=Trained_RL_Navigation', 'wandb-entity=shrutiroy03']
+[37m[6934 ms][base_task] - INFO : Setting seed: 1408681802 (base_task.py:38)
+[37m[6934 ms][navigation_task] - INFO : Building environment for navigation task. (navigation_task.py:44)
+[37m[6934 ms][navigation_task] - INFO : Sim Name: base_sim, Env Name: env_with_obstacles, Robot Name: lmf2, Controller Name: lmf2_velocity_control (navigation_task.py:45)
+[37m[6934 ms][env_manager] - INFO : Populating environments. (env_manager.py:73)
+[37m[6934 ms][env_manager] - INFO : Creating simulation instance. (env_manager.py:87)
+[37m[6934 ms][env_manager] - INFO : Instantiating IGE object. (env_manager.py:88)
+[37m[6934 ms][IsaacGymEnvManager] - INFO : Creating Isaac Gym Environment (IGE_env_manager.py:41)
+[37m[6934 ms][IsaacGymEnvManager] - INFO : Acquiring gym object (IGE_env_manager.py:73)
+[37m[6934 ms][IsaacGymEnvManager] - INFO : Acquired gym object (IGE_env_manager.py:75)
+[37m[6935 ms][IsaacGymEnvManager] - INFO : Fixing devices (IGE_env_manager.py:89)
+[37m[6935 ms][IsaacGymEnvManager] - INFO : Using GPU pipeline for simulation. (IGE_env_manager.py:102)
+[37m[6935 ms][IsaacGymEnvManager] - INFO : Sim Device type: cuda, Sim Device ID: 0 (IGE_env_manager.py:105)
+[37m[6935 ms][IsaacGymEnvManager] - INFO : Graphics Device ID: 0 (IGE_env_manager.py:119)
+[37m[6935 ms][IsaacGymEnvManager] - INFO : Creating Isaac Gym Simulation Object (IGE_env_manager.py:120)
+[33m[6935 ms][IsaacGymEnvManager] - WARNING : If you have set the CUDA_VISIBLE_DEVICES environment variable, please ensure that you set it
+[33mto a particular one that works for your system to use the viewer or Isaac Gym cameras.
+[33mIf you want to run parallel simulations on multiple GPUs with camera sensors,
+[33mplease disable Isaac Gym and use warp (by setting use_warp=True), set the viewer to headless. (IGE_env_manager.py:127)
+[33m[6936 ms][IsaacGymEnvManager] - WARNING : If you see a segfault in the next lines, it is because of the discrepancy between the CUDA device and the graphics device.
+[33mPlease ensure that the CUDA device and the graphics device are the same. (IGE_env_manager.py:132)
+[37m[7758 ms][IsaacGymEnvManager] - INFO : Created Isaac Gym Simulation Object (IGE_env_manager.py:136)
+[37m[7759 ms][IsaacGymEnvManager] - INFO : Created Isaac Gym Environment (IGE_env_manager.py:43)
+[37m[7859 ms][env_manager] - INFO : IGE object instantiated. (env_manager.py:109)
+[37m[7859 ms][env_manager] - INFO : Creating warp environment. (env_manager.py:112)
+[37m[7859 ms][env_manager] - INFO : Warp environment created. (env_manager.py:114)
+[37m[7859 ms][env_manager] - INFO : Creating robot manager. (env_manager.py:118)
+[37m[7859 ms][BaseRobot] - INFO : [DONE] Initializing controller (base_robot.py:26)
+[37m[7859 ms][BaseRobot] - INFO : Initializing controller lmf2_velocity_control (base_robot.py:29)
+[33m[7859 ms][base_multirotor] - WARNING : Creating 16 multirotors. (base_multirotor.py:32)
+[37m[7860 ms][env_manager] - INFO : [DONE] Creating robot manager. (env_manager.py:123)
+[37m[7860 ms][env_manager] - INFO : [DONE] Creating simulation instance. (env_manager.py:125)
+[37m[7860 ms][asset_loader] - INFO : Loading asset: model.urdf for the first time. Next use of this asset will be via the asset buffer. (asset_loader.py:71)
+[37m[7860 ms][asset_loader] - INFO : Loading asset: panel.urdf for the first time. Next use of this asset will be via the asset buffer. (asset_loader.py:71)
+[37m[7862 ms][asset_loader] - INFO : Loading asset: 1_x_1_wall.urdf for the first time. Next use of this asset will be via the asset buffer. (asset_loader.py:71)
+[37m[7863 ms][asset_loader] - INFO : Loading asset: cuboidal_rod.urdf for the first time. Next use of this asset will be via the asset buffer. (asset_loader.py:71)
+[37m[7864 ms][asset_loader] - INFO : Loading asset: 0_5_x_0_5_wall.urdf for the first time. Next use of this asset will be via the asset buffer. (asset_loader.py:71)
+[37m[7865 ms][asset_loader] - INFO : Loading asset: left_wall.urdf for the first time. Next use of this asset will be via the asset buffer. (asset_loader.py:71)
+[37m[7865 ms][asset_loader] - INFO : Loading asset: right_wall.urdf for the first time. Next use of this asset will be via the asset buffer. (asset_loader.py:71)
+[37m[7866 ms][asset_loader] - INFO : Loading asset: back_wall.urdf for the first time. Next use of this asset will be via the asset buffer. (asset_loader.py:71)
+[37m[7867 ms][asset_loader] - INFO : Loading asset: front_wall.urdf for the first time. Next use of this asset will be via the asset buffer. (asset_loader.py:71)
+[37m[7868 ms][asset_loader] - INFO : Loading asset: bottom_wall.urdf for the first time. Next use of this asset will be via the asset buffer. (asset_loader.py:71)
+[37m[7869 ms][asset_loader] - INFO : Loading asset: top_wall.urdf for the first time. Next use of this asset will be via the asset buffer. (asset_loader.py:71)
+[37m[7870 ms][asset_loader] - INFO : Loading asset: small_cube.urdf for the first time. Next use of this asset will be via the asset buffer. (asset_loader.py:71)
+[37m[7871 ms][env_manager] - INFO : Populating environment 0 (env_manager.py:179)
+[33m[7961 ms][robot_manager] - WARNING : 
+[33mRobot mass: 1.2400000467896461,
+[33mInertia: tensor([[0.0134, 0.0000, 0.0000],
+[33m        [0.0000, 0.0144, 0.0000],
+[33m        [0.0000, 0.0000, 0.0138]], device='cuda:0'),
+[33mRobot COM: tensor([[0., 0., 0., 1.]], device='cuda:0') (robot_manager.py:427)
+[33m[7961 ms][robot_manager] - WARNING : Calculated robot mass and inertia for this robot. This code assumes that your robot is the same across environments. (robot_manager.py:430)
+[31m[7961 ms][robot_manager] - CRITICAL : If your robot differs across environments you need to perform this computation for each different robot here. (robot_manager.py:433)
+[37m[7981 ms][env_manager] - INFO : [DONE] Populating environments. (env_manager.py:75)
+[33m[7988 ms][IsaacGymEnvManager] - WARNING : Headless: False (IGE_env_manager.py:424)
diff --git a/aerial_gym/rl_training/rl_games/wandb/run-20250226_214823-bwnfbnex/files/requirements.txt b/aerial_gym/rl_training/rl_games/wandb/run-20250226_214823-bwnfbnex/files/requirements.txt
new file mode 100644
index 0000000..a906a9d
--- /dev/null
+++ b/aerial_gym/rl_training/rl_games/wandb/run-20250226_214823-bwnfbnex/files/requirements.txt
@@ -0,0 +1,264 @@
+Brotli==1.0.9
+Cython==3.0.12
+Farama-Notifications==0.0.4
+GitPython==3.1.43
+GitPython==3.1.44
+Jinja2==3.1.4
+Markdown==3.6
+MarkupSafe==2.1.1
+Pillow==9.4.0
+PyJWT==2.9.0
+PyOpenGL==3.1.0
+PyQt5-sip==12.9.0
+PyQt5==5.15.4
+PySocks==1.7.1
+PyYAML==6.0
+Pygments==2.18.0
+Send2Trash==1.8.3
+Shapely==1.8.2
+Werkzeug==3.0.6
+absl-py==2.1.0
+aerial_gym==2.0.0
+aiohttp==3.7.4.post0
+antlr4-python3-runtime==4.9.3
+anyio==4.5.0
+appdirs==1.4.4
+argon2-cffi-bindings==21.2.0
+argon2-cffi==23.1.0
+arrow==1.3.0
+asttokens==3.0.0
+async-lru==2.0.4
+async-timeout==3.0.1
+attrs==24.2.0
+autocommand==2.2.2
+babel==2.16.0
+backcall==0.2.0
+backports.tarfile==1.2.0
+beautifulsoup4==4.12.3
+bleach==6.1.0
+blinker==1.8.2
+cached-property==1.5.2
+cachetools==5.5.0
+certifi==2024.8.30
+cffi==1.15.0
+chardet==4.0.0
+charset-normalizer==3.4.0
+click==8.1.7
+cloudpickle==3.1.0
+cloudpickle==3.1.1
+colorama==0.4.6
+colorlog==6.9.0
+comm==0.2.2
+contourpy==1.0.2
+contourpy==1.1.1
+cryptography==43.0.0
+cycler==0.12.1
+debugpy==1.6.7
+decorator==5.1.1
+decorator==5.2.1
+defusedxml==0.7.1
+dill==0.3.9
+docker-pycreds==0.4.0
+entrypoints==0.4
+exceptiongroup==1.2.2
+executing==2.1.0
+fastcache==1.1.0
+faster-fifo==1.4.7
+fastjsonschema==2.20.0
+filelock==3.13.1
+fonttools==4.53.1
+fonttools==4.56.0
+fqdn==1.5.1
+freetype-py==2.5.1
+fsspec==2025.2.0
+fvcore==0.1.5.post20210915
+gitdb==4.0.11
+gitdb==4.0.12
+gmpy2==2.1.2
+google-auth-oauthlib==1.0.0
+google-auth==2.35.0
+grpcio==1.62.2
+gym-notices==0.0.8
+gym==0.23.1
+gym==0.26.1
+gymnasium==0.29.1
+h11==0.14.0
+h2==4.1.0
+hpack==4.0.0
+httpcore==1.0.7
+httpx==0.27.2
+huggingface-hub==0.29.1
+hyperframe==6.0.1
+idna==3.10
+imageio==2.35.1
+importlib_metadata==8.0.0
+importlib_metadata==8.5.0
+importlib_resources==6.4.0
+importlib_resources==6.4.5
+inflect==7.3.1
+iopath==0.1.9
+ipykernel==6.29.5
+ipython==8.12.2
+ipywidgets==8.1.5
+isaacgym==1.0rc4
+isoduration==20.11.0
+jaraco.collections==5.1.0
+jaraco.context==5.3.0
+jaraco.functools==4.0.1
+jaraco.text==3.12.1
+jedi==0.19.1
+json5==0.9.25
+jsonpointer==3.0.0
+jsonschema-specifications==2024.10.1
+jsonschema==4.23.0
+jupyter-console==6.6.3
+jupyter-events==0.10.0
+jupyter-lsp==2.2.5
+jupyter==1.1.1
+jupyter_client==8.6.3
+jupyter_core==5.7.2
+jupyter_server==2.14.2
+jupyter_server_terminals==0.5.3
+jupyterlab==4.2.5
+jupyterlab_pygments==0.3.0
+jupyterlab_server==2.27.3
+jupyterlab_widgets==3.0.13
+kiwisolver==1.4.2
+kiwisolver==1.4.7
+lxml==5.3.1
+matplotlib-inline==0.1.7
+matplotlib==3.7.2
+matplotlib==3.7.5
+mistune==3.0.2
+mkl-fft==1.3.1
+mkl-random==1.2.2
+mkl-service==2.4.0
+more-itertools==10.3.0
+mpmath==1.3.0
+multidict==6.0.2
+munkres==1.1.4
+nbclient==0.10.2
+nbconvert==7.16.4
+nbformat==5.10.4
+nest_asyncio==1.6.0
+networkx==2.2
+networkx==3.1
+ninja==1.11.1.3
+notebook==7.2.2
+notebook_shim==0.2.4
+numpy==1.23.0
+oauthlib==3.2.2
+olefile==0.47
+omegaconf==2.3.0
+opencv-python==4.11.0.86
+overrides==7.7.0
+packaging==24.1
+packaging==24.2
+pandas==1.4.2
+pandocfilters==1.5.0
+parso==0.8.4
+pathtools==0.1.2
+pexpect==4.9.0
+pickleshare==0.7.5
+pip==24.2
+pkgutil_resolve_name==1.3.10
+platformdirs==4.2.2
+platformdirs==4.3.6
+plotly==5.24.1
+portalocker==2.10.1
+prometheus_client==0.21.0
+promise==2.3
+prompt_toolkit==3.0.48
+protobuf==3.20.3
+protobuf==4.25.3
+psutil==5.9.8
+psutil==6.0.0
+ptyprocess==0.7.0
+pure_eval==0.2.3
+pyOpenSSL==24.2.1
+pyasn1==0.6.1
+pyasn1_modules==0.4.1
+pybullet==3.2.0
+pycollada==0.6
+pycparser==2.22
+pygame==2.1.0
+pyglet==2.1.3
+pyparsing==3.0.9
+pyparsing==3.1.4
+pyrender==0.1.45
+python-dateutil==2.9.0
+python-dateutil==2.9.0.post0
+python-json-logger==2.0.7
+pytorch3d==0.7.8
+pytz==2024.2
+pyu2f==0.1.5
+pyzmq==25.1.2
+referencing==0.35.1
+requests-oauthlib==2.0.0
+requests==2.32.3
+rfc3339-validator==0.1.4
+rfc3986-validator==0.1.1
+rl_games==1.6.1
+rpds-py==0.20.0
+rsa==4.9
+sample-factory==2.1.1
+scipy==1.10.1
+sentry-sdk==2.19.2
+sentry-sdk==2.22.0
+setproctitle==1.3.3
+setproctitle==1.3.5
+setuptools==75.1.0
+shortuuid==1.0.13
+signal-slot-mp==1.0.5
+sip==6.5.1
+six==1.16.0
+smmap==5.0.0
+smmap==5.0.2
+sniffio==1.3.1
+soupsieve==2.5
+stack-data==0.6.2
+sympy==1.5.1
+tabulate==0.9.0
+tenacity==9.0.0
+tensorboard==2.13.0
+tensorboardX==2.6.2.2
+tensorboard_data_server==0.7.0
+termcolor==2.4.0
+terminado==0.18.1
+threadpoolctl==3.5.0
+tinycss2==1.4.0
+toml==0.10.2
+tomli==2.0.1
+tomli==2.0.2
+torch==2.2.0
+torchaudio==2.2.0
+torchvision==0.17.0
+tornado==6.4.1
+tqdm==4.67.1
+traitlets==5.14.3
+trimesh==4.6.3
+triton==2.2.0
+typeguard==4.3.0
+types-python-dateutil==2.9.0.20241003
+typing-utils==0.1.0
+typing_extensions==4.12.2
+typing_extensions==4.12.2
+unicodedata2==15.1.0
+urdfpy==0.0.22
+uri-template==1.3.0
+urllib3==2.2.3
+wandb==0.12.21
+wandb==0.16.6
+warp-lang==1.0.0b5
+wcwidth==0.2.13
+webcolors==24.8.0
+webencodings==0.5.1
+websocket-client==1.8.0
+wheel==0.43.0
+wheel==0.44.0
+widgetsnbextension==4.0.13
+yacs==0.1.8
+yarl==1.7.2
+zipp==3.19.2
+zipp==3.21.0
+zstandard==0.23.0
\ No newline at end of file
diff --git a/aerial_gym/rl_training/rl_games/wandb/run-20250226_214823-bwnfbnex/files/wandb-metadata.json b/aerial_gym/rl_training/rl_games/wandb/run-20250226_214823-bwnfbnex/files/wandb-metadata.json
new file mode 100644
index 0000000..5ff24e8
--- /dev/null
+++ b/aerial_gym/rl_training/rl_games/wandb/run-20250226_214823-bwnfbnex/files/wandb-metadata.json
@@ -0,0 +1,156 @@
+{
+    "os": "Linux-6.5.0-44-generic-x86_64-with-glibc2.17",
+    "python": "3.8.20",
+    "heartbeatAt": "2025-02-27T02:48:24.404369",
+    "startedAt": "2025-02-27T02:48:23.935791",
+    "docker": null,
+    "cuda": null,
+    "args": [
+        "--file=./ppo_aerial_quad_navigation.yaml",
+        "--num_envs=16",
+        "--play",
+        "--checkpoint=./runs/gen_ppo_26-16-11-42/nn/last_gen_ppo_ep_500_rew__377.14606_.pth",
+        "--track",
+        "wandb-project-name=Trained_RL_Navigation",
+        "wandb-entity=shrutiroy03"
+    ],
+    "state": "running",
+    "program": "runner.py",
+    "codePathLocal": "runner.py",
+    "codePath": "aerial_gym/rl_training/rl_games/runner.py",
+    "git": {
+        "remote": "https://github.com/ntnu-arl/aerial_gym_simulator.git",
+        "commit": "85114e7514ed0f3f8cfecfa23c40dad106c528a1"
+    },
+    "email": null,
+    "root": "/home/shruti/workspaces/aerial_gym_ws/src/aerial_gym_simulator",
+    "host": "saferoboticslab-ASUS-TUF-Gaming-F15-FX507ZM-FX507ZM",
+    "username": "shruti",
+    "executable": "/home/shruti/miniconda3/envs/aerialgym/bin/python3",
+    "cpu_count": 14,
+    "cpu_count_logical": 20,
+    "cpu_freq": {
+        "current": 1090.52745,
+        "min": 400.0,
+        "max": 4180.0
+    },
+    "cpu_freq_per_core": [
+        {
+            "current": 3124.487,
+            "min": 400.0,
+            "max": 4600.0
+        },
+        {
+            "current": 400.0,
+            "min": 400.0,
+            "max": 4600.0
+        },
+        {
+            "current": 3093.132,
+            "min": 400.0,
+            "max": 4600.0
+        },
+        {
+            "current": 400.0,
+            "min": 400.0,
+            "max": 4600.0
+        },
+        {
+            "current": 2571.012,
+            "min": 400.0,
+            "max": 4700.0
+        },
+        {
+            "current": 400.0,
+            "min": 400.0,
+            "max": 4700.0
+        },
+        {
+            "current": 2793.992,
+            "min": 400.0,
+            "max": 4700.0
+        },
+        {
+            "current": 400.0,
+            "min": 400.0,
+            "max": 4700.0
+        },
+        {
+            "current": 3067.082,
+            "min": 400.0,
+            "max": 4600.0
+        },
+        {
+            "current": 400.0,
+            "min": 400.0,
+            "max": 4600.0
+        },
+        {
+            "current": 2882.939,
+            "min": 400.0,
+            "max": 4600.0
+        },
+        {
+            "current": 400.0,
+            "min": 400.0,
+            "max": 4600.0
+        },
+        {
+            "current": 2047.27,
+            "min": 400.0,
+            "max": 3500.0
+        },
+        {
+            "current": 400.0,
+            "min": 400.0,
+            "max": 3500.0
+        },
+        {
+            "current": 400.0,
+            "min": 400.0,
+            "max": 3500.0
+        },
+        {
+            "current": 1124.366,
+            "min": 400.0,
+            "max": 3500.0
+        },
+        {
+            "current": 733.46,
+            "min": 400.0,
+            "max": 3500.0
+        },
+        {
+            "current": 400.0,
+            "min": 400.0,
+            "max": 3500.0
+        },
+        {
+            "current": 400.0,
+            "min": 400.0,
+            "max": 3500.0
+        },
+        {
+            "current": 400.0,
+            "min": 400.0,
+            "max": 3500.0
+        }
+    ],
+    "disk": {
+        "/": {
+            "total": 937.3305015563965,
+            "used": 231.45976638793945
+        }
+    },
+    "gpu": "NVIDIA GeForce RTX 3060 Laptop GPU",
+    "gpu_count": 1,
+    "gpu_devices": [
+        {
+            "name": "NVIDIA GeForce RTX 3060 Laptop GPU",
+            "memory_total": 6442450944
+        }
+    ],
+    "memory": {
+        "total": 15.238014221191406
+    }
+}
diff --git a/aerial_gym/rl_training/rl_games/wandb/run-20250226_214823-bwnfbnex/logs/debug-internal.log b/aerial_gym/rl_training/rl_games/wandb/run-20250226_214823-bwnfbnex/logs/debug-internal.log
new file mode 100644
index 0000000..a998958
--- /dev/null
+++ b/aerial_gym/rl_training/rl_games/wandb/run-20250226_214823-bwnfbnex/logs/debug-internal.log
@@ -0,0 +1,67 @@
+2025-02-26 21:48:23,940 INFO    StreamThr :18152 [internal.py:wandb_internal():86] W&B internal server running at pid: 18152, started at: 2025-02-26 21:48:23.939547
+2025-02-26 21:48:23,942 DEBUG   HandlerThread:18152 [handler.py:handle_request():146] handle_request: status
+2025-02-26 21:48:23,944 INFO    WriterThread:18152 [datastore.py:open_for_write():87] open: /home/shruti/workspaces/aerial_gym_ws/src/aerial_gym_simulator/aerial_gym/rl_training/rl_games/wandb/run-20250226_214823-bwnfbnex/run-bwnfbnex.wandb
+2025-02-26 21:48:23,944 DEBUG   SenderThread:18152 [sender.py:send():379] send: header
+2025-02-26 21:48:23,960 DEBUG   SenderThread:18152 [sender.py:send():379] send: run
+2025-02-26 21:48:24,310 INFO    SenderThread:18152 [dir_watcher.py:__init__():211] watching files in: /home/shruti/workspaces/aerial_gym_ws/src/aerial_gym_simulator/aerial_gym/rl_training/rl_games/wandb/run-20250226_214823-bwnfbnex/files
+2025-02-26 21:48:24,310 INFO    SenderThread:18152 [sender.py:_start_run_threads():1124] run started: bwnfbnex with start time 1740624503.939798
+2025-02-26 21:48:24,319 DEBUG   HandlerThread:18152 [handler.py:handle_request():146] handle_request: check_version
+2025-02-26 21:48:24,319 DEBUG   SenderThread:18152 [sender.py:send_request():406] send_request: check_version
+2025-02-26 21:48:24,381 DEBUG   HandlerThread:18152 [handler.py:handle_request():146] handle_request: run_start
+2025-02-26 21:48:24,391 DEBUG   HandlerThread:18152 [system_info.py:__init__():26] System info init
+2025-02-26 21:48:24,391 DEBUG   HandlerThread:18152 [system_info.py:__init__():41] System info init done
+2025-02-26 21:48:24,391 INFO    HandlerThread:18152 [system_monitor.py:start():194] Starting system monitor
+2025-02-26 21:48:24,391 INFO    SystemMonitor:18152 [system_monitor.py:_start():158] Starting system asset monitoring threads
+2025-02-26 21:48:24,392 INFO    HandlerThread:18152 [system_monitor.py:probe():214] Collecting system info
+2025-02-26 21:48:24,392 INFO    SystemMonitor:18152 [interfaces.py:start():190] Started cpu monitoring
+2025-02-26 21:48:24,393 INFO    SystemMonitor:18152 [interfaces.py:start():190] Started disk monitoring
+2025-02-26 21:48:24,394 INFO    SystemMonitor:18152 [interfaces.py:start():190] Started gpu monitoring
+2025-02-26 21:48:24,394 INFO    SystemMonitor:18152 [interfaces.py:start():190] Started memory monitoring
+2025-02-26 21:48:24,395 INFO    SystemMonitor:18152 [interfaces.py:start():190] Started network monitoring
+2025-02-26 21:48:24,404 DEBUG   HandlerThread:18152 [system_info.py:probe():150] Probing system
+2025-02-26 21:48:24,408 DEBUG   HandlerThread:18152 [system_info.py:_probe_git():135] Probing git
+2025-02-26 21:48:24,414 DEBUG   HandlerThread:18152 [system_info.py:_probe_git():143] Probing git done
+2025-02-26 21:48:24,414 DEBUG   HandlerThread:18152 [system_info.py:probe():198] Probing system done
+2025-02-26 21:48:24,414 DEBUG   HandlerThread:18152 [system_monitor.py:probe():223] {'os': 'Linux-6.5.0-44-generic-x86_64-with-glibc2.17', 'python': '3.8.20', 'heartbeatAt': '2025-02-27T02:48:24.404369', 'startedAt': '2025-02-27T02:48:23.935791', 'docker': None, 'cuda': None, 'args': ('--file=./ppo_aerial_quad_navigation.yaml', '--num_envs=16', '--play', '--checkpoint=./runs/gen_ppo_26-16-11-42/nn/last_gen_ppo_ep_500_rew__377.14606_.pth', '--track', 'wandb-project-name=Trained_RL_Navigation', 'wandb-entity=shrutiroy03'), 'state': 'running', 'program': 'runner.py', 'codePathLocal': 'runner.py', 'codePath': 'aerial_gym/rl_training/rl_games/runner.py', 'git': {'remote': 'https://github.com/ntnu-arl/aerial_gym_simulator.git', 'commit': '85114e7514ed0f3f8cfecfa23c40dad106c528a1'}, 'email': None, 'root': '/home/shruti/workspaces/aerial_gym_ws/src/aerial_gym_simulator', 'host': 'saferoboticslab-ASUS-TUF-Gaming-F15-FX507ZM-FX507ZM', 'username': 'shruti', 'executable': '/home/shruti/miniconda3/envs/aerialgym/bin/python3', 'cpu_count': 14, 'cpu_count_logical': 20, 'cpu_freq': {'current': 1090.52745, 'min': 400.0, 'max': 4180.0}, 'cpu_freq_per_core': [{'current': 3124.487, 'min': 400.0, 'max': 4600.0}, {'current': 400.0, 'min': 400.0, 'max': 4600.0}, {'current': 3093.132, 'min': 400.0, 'max': 4600.0}, {'current': 400.0, 'min': 400.0, 'max': 4600.0}, {'current': 2571.012, 'min': 400.0, 'max': 4700.0}, {'current': 400.0, 'min': 400.0, 'max': 4700.0}, {'current': 2793.992, 'min': 400.0, 'max': 4700.0}, {'current': 400.0, 'min': 400.0, 'max': 4700.0}, {'current': 3067.082, 'min': 400.0, 'max': 4600.0}, {'current': 400.0, 'min': 400.0, 'max': 4600.0}, {'current': 2882.939, 'min': 400.0, 'max': 4600.0}, {'current': 400.0, 'min': 400.0, 'max': 4600.0}, {'current': 2047.27, 'min': 400.0, 'max': 3500.0}, {'current': 400.0, 'min': 400.0, 'max': 3500.0}, {'current': 400.0, 'min': 400.0, 'max': 3500.0}, {'current': 1124.366, 'min': 400.0, 'max': 3500.0}, {'current': 733.46, 'min': 400.0, 'max': 3500.0}, {'current': 400.0, 'min': 400.0, 'max': 3500.0}, {'current': 400.0, 'min': 400.0, 'max': 3500.0}, {'current': 400.0, 'min': 400.0, 'max': 3500.0}], 'disk': {'/': {'total': 937.3305015563965, 'used': 231.45976638793945}}, 'gpu': 'NVIDIA GeForce RTX 3060 Laptop GPU', 'gpu_count': 1, 'gpu_devices': [{'name': 'NVIDIA GeForce RTX 3060 Laptop GPU', 'memory_total': 6442450944}], 'memory': {'total': 15.238014221191406}}
+2025-02-26 21:48:24,414 INFO    HandlerThread:18152 [system_monitor.py:probe():224] Finished collecting system info
+2025-02-26 21:48:24,414 INFO    HandlerThread:18152 [system_monitor.py:probe():227] Publishing system info
+2025-02-26 21:48:24,414 DEBUG   HandlerThread:18152 [system_info.py:_save_conda():207] Saving list of conda packages installed into the current environment
+2025-02-26 21:48:25,311 INFO    Thread-12 :18152 [dir_watcher.py:_on_file_created():271] file/dir created: /home/shruti/workspaces/aerial_gym_ws/src/aerial_gym_simulator/aerial_gym/rl_training/rl_games/wandb/run-20250226_214823-bwnfbnex/files/conda-environment.yaml
+2025-02-26 21:48:26,293 DEBUG   HandlerThread:18152 [system_info.py:_save_conda():222] Saving conda packages done
+2025-02-26 21:48:26,294 DEBUG   HandlerThread:18152 [system_info.py:_save_code():44] Saving code
+2025-02-26 21:48:26,302 DEBUG   HandlerThread:18152 [system_info.py:_save_code():65] Saving code done
+2025-02-26 21:48:26,302 DEBUG   HandlerThread:18152 [system_info.py:_save_patches():82] Saving git patches
+2025-02-26 21:48:26,311 INFO    Thread-12 :18152 [dir_watcher.py:_on_file_modified():288] file/dir modified: /home/shruti/workspaces/aerial_gym_ws/src/aerial_gym_simulator/aerial_gym/rl_training/rl_games/wandb/run-20250226_214823-bwnfbnex/files/conda-environment.yaml
+2025-02-26 21:48:26,311 INFO    Thread-12 :18152 [dir_watcher.py:_on_file_created():271] file/dir created: /home/shruti/workspaces/aerial_gym_ws/src/aerial_gym_simulator/aerial_gym/rl_training/rl_games/wandb/run-20250226_214823-bwnfbnex/files/code/aerial_gym/rl_training/rl_games/runner.py
+2025-02-26 21:48:26,311 INFO    Thread-12 :18152 [dir_watcher.py:_on_file_created():271] file/dir created: /home/shruti/workspaces/aerial_gym_ws/src/aerial_gym_simulator/aerial_gym/rl_training/rl_games/wandb/run-20250226_214823-bwnfbnex/files/code/aerial_gym/rl_training
+2025-02-26 21:48:26,311 INFO    Thread-12 :18152 [dir_watcher.py:_on_file_created():271] file/dir created: /home/shruti/workspaces/aerial_gym_ws/src/aerial_gym_simulator/aerial_gym/rl_training/rl_games/wandb/run-20250226_214823-bwnfbnex/files/code
+2025-02-26 21:48:26,313 INFO    Thread-12 :18152 [dir_watcher.py:_on_file_created():271] file/dir created: /home/shruti/workspaces/aerial_gym_ws/src/aerial_gym_simulator/aerial_gym/rl_training/rl_games/wandb/run-20250226_214823-bwnfbnex/files/code/aerial_gym/rl_training/rl_games
+2025-02-26 21:48:26,313 INFO    Thread-12 :18152 [dir_watcher.py:_on_file_created():271] file/dir created: /home/shruti/workspaces/aerial_gym_ws/src/aerial_gym_simulator/aerial_gym/rl_training/rl_games/wandb/run-20250226_214823-bwnfbnex/files/code/aerial_gym
+2025-02-26 21:48:26,892 DEBUG   HandlerThread:18152 [system_info.py:_save_patches():124] Saving git patches done
+2025-02-26 21:48:26,892 INFO    HandlerThread:18152 [system_monitor.py:probe():229] Finished publishing system info
+2025-02-26 21:48:26,895 DEBUG   SenderThread:18152 [sender.py:send():379] send: files
+2025-02-26 21:48:26,895 INFO    SenderThread:18152 [sender.py:_save_file():1390] saving file wandb-metadata.json with policy now
+2025-02-26 21:48:26,895 INFO    SenderThread:18152 [sender.py:_save_file():1390] saving file code/aerial_gym/rl_training/rl_games/runner.py with policy now
+2025-02-26 21:48:26,896 INFO    SenderThread:18152 [sender.py:_save_file():1390] saving file diff.patch with policy now
+2025-02-26 21:48:27,014 DEBUG   HandlerThread:18152 [handler.py:handle_request():146] handle_request: python_packages
+2025-02-26 21:48:27,014 DEBUG   HandlerThread:18152 [handler.py:handle_request():146] handle_request: stop_status
+2025-02-26 21:48:27,014 DEBUG   SenderThread:18152 [sender.py:send_request():406] send_request: python_packages
+2025-02-26 21:48:27,014 DEBUG   SenderThread:18152 [sender.py:send_request():406] send_request: stop_status
+2025-02-26 21:48:27,015 DEBUG   HandlerThread:18152 [handler.py:handle_request():146] handle_request: internal_messages
+2025-02-26 21:48:27,105 DEBUG   SenderThread:18152 [sender.py:send():379] send: telemetry
+2025-02-26 21:48:27,211 INFO    wandb-upload_2:18152 [upload_job.py:push():131] Uploaded file /tmp/tmpnosyd37wwandb/znhddv7k-diff.patch
+2025-02-26 21:48:27,212 INFO    wandb-upload_1:18152 [upload_job.py:push():131] Uploaded file /tmp/tmpnosyd37wwandb/90cqh3u1-code/aerial_gym/rl_training/rl_games/runner.py
+2025-02-26 21:48:27,212 INFO    wandb-upload_0:18152 [upload_job.py:push():131] Uploaded file /tmp/tmpnosyd37wwandb/q04my6ou-wandb-metadata.json
+2025-02-26 21:48:27,311 INFO    Thread-12 :18152 [dir_watcher.py:_on_file_created():271] file/dir created: /home/shruti/workspaces/aerial_gym_ws/src/aerial_gym_simulator/aerial_gym/rl_training/rl_games/wandb/run-20250226_214823-bwnfbnex/files/wandb-metadata.json
+2025-02-26 21:48:27,311 INFO    Thread-12 :18152 [dir_watcher.py:_on_file_created():271] file/dir created: /home/shruti/workspaces/aerial_gym_ws/src/aerial_gym_simulator/aerial_gym/rl_training/rl_games/wandb/run-20250226_214823-bwnfbnex/files/requirements.txt
+2025-02-26 21:48:27,311 INFO    Thread-12 :18152 [dir_watcher.py:_on_file_created():271] file/dir created: /home/shruti/workspaces/aerial_gym_ws/src/aerial_gym_simulator/aerial_gym/rl_training/rl_games/wandb/run-20250226_214823-bwnfbnex/files/diff.patch
+2025-02-26 21:48:27,311 INFO    Thread-12 :18152 [dir_watcher.py:_on_file_created():271] file/dir created: /home/shruti/workspaces/aerial_gym_ws/src/aerial_gym_simulator/aerial_gym/rl_training/rl_games/wandb/run-20250226_214823-bwnfbnex/files/output.log
+2025-02-26 21:48:29,070 DEBUG   HandlerThread:18152 [handler.py:handle_request():146] handle_request: status_report
+2025-02-26 21:48:29,313 INFO    Thread-12 :18152 [dir_watcher.py:_on_file_modified():288] file/dir modified: /home/shruti/workspaces/aerial_gym_ws/src/aerial_gym_simulator/aerial_gym/rl_training/rl_games/wandb/run-20250226_214823-bwnfbnex/files/output.log
+2025-02-26 21:48:30,398 INFO    memory    :18152 [interfaces.py:monitor():140] Process proc.memory.rssMB has exited.
+2025-02-26 21:48:30,399 DEBUG   SystemMonitor:18152 [system_monitor.py:_start():172] Starting system metrics aggregation loop
+2025-02-26 21:48:30,400 DEBUG   SystemMonitor:18152 [system_monitor.py:_start():179] Finished system metrics aggregation loop
+2025-02-26 21:48:30,400 DEBUG   SystemMonitor:18152 [system_monitor.py:_start():183] Publishing last batch of metrics
+2025-02-26 21:48:30,401 INFO    cpu       :18152 [interfaces.py:monitor():140] Process cpu has exited.
+2025-02-26 21:48:30,403 DEBUG   SenderThread:18152 [sender.py:send():379] send: stats
+2025-02-26 21:48:31,384 INFO    MainThread:18152 [internal.py:handle_exit():76] Internal process exited
diff --git a/aerial_gym/rl_training/rl_games/wandb/run-20250226_214823-bwnfbnex/logs/debug.log b/aerial_gym/rl_training/rl_games/wandb/run-20250226_214823-bwnfbnex/logs/debug.log
new file mode 100644
index 0000000..c29255d
--- /dev/null
+++ b/aerial_gym/rl_training/rl_games/wandb/run-20250226_214823-bwnfbnex/logs/debug.log
@@ -0,0 +1,28 @@
+2025-02-26 21:48:23,937 INFO    MainThread:18092 [wandb_setup.py:_flush():76] Current SDK version is 0.16.6
+2025-02-26 21:48:23,937 INFO    MainThread:18092 [wandb_setup.py:_flush():76] Configure stats pid to 18092
+2025-02-26 21:48:23,937 INFO    MainThread:18092 [wandb_setup.py:_flush():76] Loading settings from /home/shruti/.config/wandb/settings
+2025-02-26 21:48:23,937 INFO    MainThread:18092 [wandb_setup.py:_flush():76] Loading settings from /home/shruti/workspaces/aerial_gym_ws/src/aerial_gym_simulator/aerial_gym/rl_training/rl_games/wandb/settings
+2025-02-26 21:48:23,937 INFO    MainThread:18092 [wandb_setup.py:_flush():76] Loading settings from environment variables: {}
+2025-02-26 21:48:23,937 INFO    MainThread:18092 [wandb_setup.py:_flush():76] Applying setup settings: {'_disable_service': False}
+2025-02-26 21:48:23,937 INFO    MainThread:18092 [wandb_setup.py:_flush():76] Inferring run settings from compute environment: {'program_relpath': 'aerial_gym/rl_training/rl_games/runner.py', 'program_abspath': '/home/shruti/workspaces/aerial_gym_ws/src/aerial_gym_simulator/aerial_gym/rl_training/rl_games/runner.py', 'program': 'runner.py'}
+2025-02-26 21:48:23,937 INFO    MainThread:18092 [wandb_setup.py:_flush():76] Applying login settings: {}
+2025-02-26 21:48:23,937 INFO    MainThread:18092 [wandb_init.py:_log_setup():521] Logging user logs to /home/shruti/workspaces/aerial_gym_ws/src/aerial_gym_simulator/aerial_gym/rl_training/rl_games/wandb/run-20250226_214823-bwnfbnex/logs/debug.log
+2025-02-26 21:48:23,937 INFO    MainThread:18092 [wandb_init.py:_log_setup():522] Logging internal logs to /home/shruti/workspaces/aerial_gym_ws/src/aerial_gym_simulator/aerial_gym/rl_training/rl_games/wandb/run-20250226_214823-bwnfbnex/logs/debug-internal.log
+2025-02-26 21:48:23,937 INFO    MainThread:18092 [wandb_init.py:init():561] calling init triggers
+2025-02-26 21:48:23,937 INFO    MainThread:18092 [wandb_init.py:init():568] wandb.init called with sweep_config: {}
+config: {'params': {'seed': 10, 'algo': {'name': 'a2c_continuous'}, 'model': {'name': 'continuous_a2c_logstd'}, 'load_checkpoint': False, 'network': {'name': 'actor_critic', 'separate': False, 'space': {'continuous': {'mu_activation': 'None', 'sigma_activation': 'None', 'mu_init': {'name': 'default'}, 'sigma_init': {'name': 'const_initializer', 'val': 0}, 'fixed_sigma': True}}, 'mlp': {'units': [256, 128, 64], 'd2rl': False, 'activation': 'elu', 'initializer': {'name': 'default', 'scale': 2}}}, 'config': {'env_name': 'navigation_task', 'env_config': {'num_envs': 16, 'headless': False, 'use_warp': True}, 'name': 'gen_ppo', 'reward_shaper': {'scale_value': 0.1}, 'normalize_advantage': True, 'gamma': 0.98, 'tau': 0.95, 'ppo': True, 'learning_rate': '1e-4', 'lr_schedule': 'adaptive', 'kl_threshold': 0.016, 'save_best_after': 10, 'score_to_win': 100000, 'grad_norm': 1.0, 'entropy_coef': 0, 'truncate_grads': True, 'e_clip': 0.2, 'clip_value': False, 'num_actors': 16, 'horizon_length': 32, 'minibatch_size': 2048, 'mini_epochs': 4, 'critic_coef': 2, 'normalize_input': True, 'bounds_loss_coef': 0.0001, 'max_epochs': 500, 'normalize_value': True, 'use_diagnostics': True, 'value_bootstrap': True, 'use_smooth_clamp': False, 'player': {'use_vecenv': True}}}}
+2025-02-26 21:48:23,937 INFO    MainThread:18092 [wandb_init.py:init():611] starting backend
+2025-02-26 21:48:23,937 INFO    MainThread:18092 [wandb_init.py:init():615] setting up manager
+2025-02-26 21:48:23,938 INFO    MainThread:18092 [backend.py:_multiprocessing_setup():105] multiprocessing start_methods=fork,spawn,forkserver, using: spawn
+2025-02-26 21:48:23,939 INFO    MainThread:18092 [wandb_init.py:init():623] backend started and connected
+2025-02-26 21:48:23,943 INFO    MainThread:18092 [wandb_init.py:init():715] updated telemetry
+2025-02-26 21:48:23,959 INFO    MainThread:18092 [wandb_init.py:init():748] communicating run to backend with 90.0 second timeout
+2025-02-26 21:48:24,318 INFO    MainThread:18092 [wandb_run.py:_on_init():2357] communicating current version
+2025-02-26 21:48:24,377 INFO    MainThread:18092 [wandb_run.py:_on_init():2366] got version response upgrade_message: "wandb version 0.19.7 is available!  To upgrade, please run:\n $ pip install wandb --upgrade"
+
+2025-02-26 21:48:24,377 INFO    MainThread:18092 [wandb_init.py:init():799] starting run threads in backend
+2025-02-26 21:48:27,013 INFO    MainThread:18092 [wandb_run.py:_console_start():2335] atexit reg
+2025-02-26 21:48:27,013 INFO    MainThread:18092 [wandb_run.py:_redirect():2190] redirect: wrap_raw
+2025-02-26 21:48:27,013 INFO    MainThread:18092 [wandb_run.py:_redirect():2255] Wrapping output streams.
+2025-02-26 21:48:27,013 INFO    MainThread:18092 [wandb_run.py:_redirect():2280] Redirects installed.
+2025-02-26 21:48:27,014 INFO    MainThread:18092 [wandb_init.py:init():842] run started, returning control to user process
diff --git a/aerial_gym/rl_training/rl_games/wandb/run-20250226_214823-bwnfbnex/run-bwnfbnex.wandb b/aerial_gym/rl_training/rl_games/wandb/run-20250226_214823-bwnfbnex/run-bwnfbnex.wandb
new file mode 100644
index 0000000..5798174
Binary files /dev/null and b/aerial_gym/rl_training/rl_games/wandb/run-20250226_214823-bwnfbnex/run-bwnfbnex.wandb differ
diff --git a/aerial_gym/rl_training/rl_games/wandb/run-20250226_214839-qrgr4a01/files/code/aerial_gym/rl_training/rl_games/runner.py b/aerial_gym/rl_training/rl_games/wandb/run-20250226_214839-qrgr4a01/files/code/aerial_gym/rl_training/rl_games/runner.py
new file mode 100644
index 0000000..bd45a3c
--- /dev/null
+++ b/aerial_gym/rl_training/rl_games/wandb/run-20250226_214839-qrgr4a01/files/code/aerial_gym/rl_training/rl_games/runner.py
@@ -0,0 +1,331 @@
+import numpy as np
+import os
+import yaml
+
+
+import isaacgym
+
+
+from aerial_gym.registry.task_registry import task_registry
+from aerial_gym.utils.helpers import parse_arguments
+
+import gym
+from gym import spaces
+from argparse import Namespace
+
+from rl_games.common import env_configurations, vecenv
+
+import torch
+import distutils
+
+os.environ["XLA_PYTHON_CLIENT_PREALLOCATE"] = "false"
+# import warnings
+# warnings.filterwarnings("error")
+
+
+class ExtractObsWrapper(gym.Wrapper):
+    def __init__(self, env):
+        super().__init__(env)
+
+    def reset(self, **kwargs):
+        observations, *_ = super().reset(**kwargs)
+        return observations["observations"]
+
+    def step(self, action):
+        observations, rewards, terminated, truncated, infos = super().step(action)
+
+        dones = torch.where(
+            terminated | truncated,
+            torch.ones_like(terminated),
+            torch.zeros_like(terminated),
+        )
+
+        return (
+            observations["observations"],
+            rewards,
+            dones,
+            infos,
+        )
+
+
+class AERIALRLGPUEnv(vecenv.IVecEnv):
+    def __init__(self, config_name, num_actors, **kwargs):
+        self.env = env_configurations.configurations[config_name]["env_creator"](**kwargs)
+        self.env = ExtractObsWrapper(self.env)
+
+    def step(self, actions):
+        return self.env.step(actions)
+
+    def reset(self):
+        return self.env.reset()
+
+    def reset_done(self):
+        return self.env.reset_done()
+
+    def get_number_of_agents(self):
+        return self.env.get_number_of_agents()
+
+    def get_env_info(self):
+        info = {}
+        info["action_space"] = spaces.Box(
+            -np.ones(self.env.task_config.action_space_dim),
+            np.ones(self.env.task_config.action_space_dim),
+        )
+        info["observation_space"] = spaces.Box(
+            np.ones(self.env.task_config.observation_space_dim) * -np.Inf,
+            np.ones(self.env.task_config.observation_space_dim) * np.Inf,
+        )
+        print(info["action_space"], info["observation_space"])
+        return info
+
+
+env_configurations.register(
+    "position_setpoint_task",
+    {
+        "env_creator": lambda **kwargs: task_registry.make_task("position_setpoint_task", **kwargs),
+        "vecenv_type": "AERIAL-RLGPU",
+    },
+)
+
+env_configurations.register(
+    "position_setpoint_task_sim2real",
+    {
+        "env_creator": lambda **kwargs: task_registry.make_task(
+            "position_setpoint_task_sim2real", **kwargs
+        ),
+        "vecenv_type": "AERIAL-RLGPU",
+    },
+)
+
+env_configurations.register(
+    "position_setpoint_task_acceleration_sim2real",
+    {
+        "env_creator": lambda **kwargs: task_registry.make_task(
+            "position_setpoint_task_acceleration_sim2real", **kwargs
+        ),
+        "vecenv_type": "AERIAL-RLGPU",
+    },
+)
+
+env_configurations.register(
+    "navigation_task",
+    {
+        "env_creator": lambda **kwargs: task_registry.make_task("navigation_task", **kwargs),
+        "vecenv_type": "AERIAL-RLGPU",
+    },
+)
+
+env_configurations.register(
+    "position_setpoint_task_reconfigurable",
+    {
+        "env_creator": lambda **kwargs: task_registry.make_task(
+            "position_setpoint_task_reconfigurable", **kwargs
+        ),
+        "vecenv_type": "AERIAL-RLGPU",
+    },
+)
+
+env_configurations.register(
+    "position_setpoint_task_morphy",
+    {
+        "env_creator": lambda **kwargs: task_registry.make_task(
+            "position_setpoint_task_morphy", **kwargs
+        ),
+        "vecenv_type": "AERIAL-RLGPU",
+    },
+)
+
+env_configurations.register(
+    "position_setpoint_task_sim2real_end_to_end",
+    {
+        "env_creator": lambda **kwargs: task_registry.make_task(
+            "position_setpoint_task_sim2real_end_to_end", **kwargs
+        ),
+        "vecenv_type": "AERIAL-RLGPU",
+    },
+)
+
+vecenv.register(
+    "AERIAL-RLGPU",
+    lambda config_name, num_actors, **kwargs: AERIALRLGPUEnv(config_name, num_actors, **kwargs),
+)
+
+
+def get_args():
+    from isaacgym import gymutil
+
+    custom_parameters = [
+        {
+            "name": "--seed",
+            "type": int,
+            "default": 0,
+            "required": False,
+            "help": "Random seed, if larger than 0 will overwrite the value in yaml config.",
+        },
+        {
+            "name": "--tf",
+            "required": False,
+            "help": "run tensorflow runner",
+            "action": "store_true",
+        },
+        {
+            "name": "--train",
+            "required": False,
+            "help": "train network",
+            "action": "store_true",
+        },
+        {
+            "name": "--play",
+            "required": False,
+            "help": "play(test) network",
+            "action": "store_true",
+        },
+        {
+            "name": "--checkpoint",
+            "type": str,
+            "required": False,
+            "help": "path to checkpoint",
+        },
+        {
+            "name": "--file",
+            "type": str,
+            "default": "ppo_aerial_quad.yaml",
+            "required": False,
+            "help": "path to config",
+        },
+        {
+            "name": "--num_envs",
+            "type": int,
+            "default": "1024",
+            "help": "Number of environments to create. Overrides config file if provided.",
+        },
+        {
+            "name": "--sigma",
+            "type": float,
+            "required": False,
+            "help": "sets new sigma value in case if 'fixed_sigma: True' in yaml config",
+        },
+        {
+            "name": "--track",
+            "action": "store_true",
+            "help": "if toggled, this experiment will be tracked with Weights and Biases",
+        },
+        {
+            "name": "--wandb-project-name",
+            "type": str,
+            "default": "rl_games",
+            "help": "the wandb's project name",
+        },
+        {
+            "name": "--wandb-entity",
+            "type": str,
+            "default": None,
+            "help": "the entity (team) of wandb's project",
+        },
+        {
+            "name": "--task",
+            "type": str,
+            "default": "navigation_task",
+            "help": "Override task from config file if provided.",
+        },
+        {
+            "name": "--experiment_name",
+            "type": str,
+            "help": "Name of the experiment to run or load. Overrides config file if provided.",
+        },
+        {
+            "name": "--headless",
+            "type": lambda x: bool(distutils.util.strtobool(x)),
+            "default": "False",
+            "help": "Force display off at all times",
+        },
+        {
+            "name": "--horovod",
+            "action": "store_true",
+            "default": False,
+            "help": "Use horovod for multi-gpu training",
+        },
+        {
+            "name": "--rl_device",
+            "type": str,
+            "default": "cuda:0",
+            "help": "Device used by the RL algorithm, (cpu, gpu, cuda:0, cuda:1 etc..)",
+        },
+        {
+            "name": "--use_warp",
+            "type": lambda x: bool(distutils.util.strtobool(x)),
+            "default": "True",
+            "help": "Choose whether to use warp or Isaac Gym rendering pipeline.",
+        },
+    ]
+
+    # parse arguments
+    args = parse_arguments(description="RL Policy", custom_parameters=custom_parameters)
+
+    # name allignment
+    args.sim_device_id = args.compute_device_id
+    args.sim_device = args.sim_device_type
+    if args.sim_device == "cuda":
+        args.sim_device += f":{args.sim_device_id}"
+    return args
+
+
+def update_config(config, args):
+
+    if args["task"] is not None:
+        config["params"]["config"]["env_name"] = args["task"]
+    if args["experiment_name"] is not None:
+        config["params"]["config"]["name"] = args["experiment_name"]
+    config["params"]["config"]["env_config"]["headless"] = args["headless"]
+    config["params"]["config"]["env_config"]["num_envs"] = args["num_envs"]
+    config["params"]["config"]["env_config"]["use_warp"] = args["use_warp"]
+    if args["num_envs"] > 0:
+        config["params"]["config"]["num_actors"] = args["num_envs"]
+        # config['params']['config']['num_envs'] = args['num_envs']
+        config["params"]["config"]["env_config"]["num_envs"] = args["num_envs"]
+    if args["seed"] > 0:
+        config["params"]["seed"] = args["seed"]
+        config["params"]["config"]["env_config"]["seed"] = args["seed"]
+
+    config["params"]["config"]["player"] = {"use_vecenv": True}
+    return config
+
+
+if __name__ == "__main__":
+    os.makedirs("nn", exist_ok=True)
+    os.makedirs("runs", exist_ok=True)
+
+    args = vars(get_args())
+
+    config_name = args["file"]
+
+    print("Loading config: ", config_name)
+    with open(config_name, "r") as stream:
+        config = yaml.safe_load(stream)
+
+        config = update_config(config, args)
+
+        from rl_games.torch_runner import Runner
+
+        runner = Runner()
+        try:
+            runner.load(config)
+        except yaml.YAMLError as exc:
+            print(exc)
+
+    rank = int(os.getenv("LOCAL_RANK", "0"))
+    if args["track"] and rank == 0:
+        import wandb
+
+        wandb.init(
+            project=args["wandb_project_name"],
+            entity=args["wandb_entity"],
+            sync_tensorboard=True,
+            config=config,
+            monitor_gym=True,
+            save_code=True,
+        )
+    runner.run(args)
+
+    if args["track"] and rank == 0:
+        wandb.finish()
diff --git a/aerial_gym/rl_training/rl_games/wandb/run-20250226_214839-qrgr4a01/files/conda-environment.yaml b/aerial_gym/rl_training/rl_games/wandb/run-20250226_214839-qrgr4a01/files/conda-environment.yaml
new file mode 100644
index 0000000..b5e6902
--- /dev/null
+++ b/aerial_gym/rl_training/rl_games/wandb/run-20250226_214839-qrgr4a01/files/conda-environment.yaml
@@ -0,0 +1,409 @@
+name: aerialgym
+channels:
+  - pytorch3d
+  - iopath
+  - fvcore
+  - pytorch
+  - nvidia
+  - nvidia/label/cuda-11.8.0
+  - conda-forge
+  - defaults
+  - https://repo.anaconda.com/pkgs/main
+  - https://repo.anaconda.com/pkgs/r
+dependencies:
+  - _libgcc_mutex=0.1=main
+  - _openmp_mutex=5.1=1_gnu
+  - absl-py=2.1.0=pyhd8ed1ab_0
+  - aiohttp=3.7.4.post0=py38h497a2fe_1
+  - antlr-python-runtime=4.9.3=pyhd8ed1ab_1
+  - anyio=4.5.0=pyhd8ed1ab_0
+  - appdirs=1.4.4=pyh9f0ad1d_0
+  - argon2-cffi=23.1.0=pyhd8ed1ab_0
+  - argon2-cffi-bindings=21.2.0=py38h01eb140_4
+  - arrow=1.3.0=pyhd8ed1ab_0
+  - asttokens=3.0.0=pyhd8ed1ab_0
+  - async-lru=2.0.4=pyhd8ed1ab_0
+  - async-timeout=3.0.1=py_1000
+  - attrs=24.2.0=pyh71513ae_0
+  - babel=2.16.0=pyhd8ed1ab_0
+  - backcall=0.2.0=pyh9f0ad1d_0
+  - beautifulsoup4=4.12.3=pyha770c72_0
+  - blas=1.0=mkl
+  - bleach=6.1.0=pyhd8ed1ab_0
+  - blinker=1.8.2=pyhd8ed1ab_0
+  - brotli=1.1.0=hb9d3cd8_2
+  - brotli-bin=1.1.0=hb9d3cd8_2
+  - brotli-python=1.0.9=py38hfa26641_7
+  - bullet-cpp=3.21=h43a58ef_1
+  - bzip2=1.0.8=h5eee18b_6
+  - c-ares=1.19.1=h5eee18b_0
+  - ca-certificates=2025.2.25=h06a4308_0
+  - cached-property=1.5.2=hd8ed1ab_1
+  - cached_property=1.5.2=pyha770c72_1
+  - cachetools=5.5.0=pyhd8ed1ab_0
+  - certifi=2024.8.30=pyhd8ed1ab_0
+  - cffi=1.15.0=py38h3931269_0
+  - chardet=4.0.0=py38h578d9bd_3
+  - charset-normalizer=3.4.0=pyhd8ed1ab_0
+  - click=8.1.7=unix_pyh707e725_0
+  - colorama=0.4.6=pyhd8ed1ab_0
+  - comm=0.2.2=pyhd8ed1ab_0
+  - cryptography=43.0.0=py38hdda0065_0
+  - cuda=11.8.0=0
+  - cuda-cccl=11.8.89=0
+  - cuda-command-line-tools=11.8.0=0
+  - cuda-compiler=11.8.0=0
+  - cuda-cudart=11.8.89=0
+  - cuda-cudart-dev=11.8.89=0
+  - cuda-cuobjdump=11.8.86=0
+  - cuda-cupti=11.8.87=0
+  - cuda-cuxxfilt=11.8.86=0
+  - cuda-demo-suite=11.8.86=0
+  - cuda-documentation=11.8.86=0
+  - cuda-driver-dev=11.8.89=0
+  - cuda-gdb=11.8.86=0
+  - cuda-libraries=11.8.0=0
+  - cuda-libraries-dev=11.8.0=0
+  - cuda-memcheck=11.8.86=0
+  - cuda-nsight=11.8.86=0
+  - cuda-nsight-compute=11.8.0=0
+  - cuda-nvcc=11.8.89=0
+  - cuda-nvdisasm=11.8.86=0
+  - cuda-nvml-dev=11.8.86=0
+  - cuda-nvprof=11.8.87=0
+  - cuda-nvprune=11.8.86=0
+  - cuda-nvrtc=11.8.89=0
+  - cuda-nvrtc-dev=11.8.89=0
+  - cuda-nvtx=11.8.86=0
+  - cuda-nvvp=11.8.87=0
+  - cuda-opencl=12.4.127=0
+  - cuda-profiler-api=11.8.86=0
+  - cuda-runtime=11.8.0=0
+  - cuda-sanitizer-api=11.8.86=0
+  - cuda-toolkit=11.8.0=0
+  - cuda-tools=11.8.0=0
+  - cuda-visual-tools=11.8.0=0
+  - cycler=0.12.1=pyhd8ed1ab_0
+  - dbus=1.13.18=hb2f20db_0
+  - debugpy=1.6.7=py38h6a678d5_0
+  - defusedxml=0.7.1=pyhd8ed1ab_0
+  - dill=0.3.9=pyhd8ed1ab_0
+  - docker-pycreds=0.4.0=py_0
+  - entrypoints=0.4=pyhd8ed1ab_0
+  - exceptiongroup=1.2.2=pyhd8ed1ab_0
+  - executing=2.1.0=pyhd8ed1ab_0
+  - expat=2.6.4=h5888daf_0
+  - fastcache=1.1.0=py38h7b6447c_0
+  - ffmpeg=4.3=hf484d3e_0
+  - filelock=3.13.1=py38h06a4308_0
+  - fontconfig=2.14.0=h8e229c2_0
+  - fqdn=1.5.1=pyhd8ed1ab_0
+  - freetype=2.10.4=h0708190_1
+  - fvcore=0.1.5.post20210915=py38
+  - gds-tools=1.4.0.31=0
+  - geos=3.10.2=h9c3ff4c_0
+  - giflib=5.2.2=h5eee18b_0
+  - glib=2.78.4=h6a678d5_0
+  - glib-tools=2.78.4=h6a678d5_0
+  - gmp=6.3.0=h6a678d5_0
+  - gmpy2=2.1.2=py38heeb90bb_0
+  - gnutls=3.6.15=he1e5248_0
+  - google-auth=2.35.0=pyhff2d567_0
+  - google-auth-oauthlib=1.0.0=pyhd8ed1ab_1
+  - grpcio=1.62.2=py38h6a678d5_0
+  - gst-plugins-base=1.14.1=h6a678d5_1
+  - gstreamer=1.14.1=h5eee18b_1
+  - gym-notices=0.0.8=pyhd8ed1ab_0
+  - h11=0.14.0=pyhd8ed1ab_0
+  - h2=4.1.0=pyhd8ed1ab_0
+  - hpack=4.0.0=pyh9f0ad1d_0
+  - httpcore=1.0.7=pyh29332c3_1
+  - httpx=0.27.2=pyhd8ed1ab_0
+  - hyperframe=6.0.1=pyhd8ed1ab_0
+  - icu=58.2=hf484d3e_1000
+  - idna=3.10=pyhd8ed1ab_0
+  - importlib-metadata=8.5.0=pyha770c72_0
+  - importlib_metadata=8.5.0=hd8ed1ab_1
+  - importlib_resources=6.4.5=pyhd8ed1ab_0
+  - intel-openmp=2021.4.0=h06a4308_3561
+  - iopath=0.1.9=py38
+  - ipykernel=6.29.5=pyh3099207_0
+  - ipython=8.12.2=pyh41d4057_0
+  - ipywidgets=8.1.5=pyhd8ed1ab_0
+  - isoduration=20.11.0=pyhd8ed1ab_0
+  - jbig=2.1=h7f98852_2003
+  - jedi=0.19.1=pyhd8ed1ab_0
+  - jinja2=3.1.4=pyhd8ed1ab_0
+  - jpeg=9e=h166bdaf_1
+  - json5=0.9.25=pyhd8ed1ab_0
+  - jsonpointer=3.0.0=py38h578d9bd_0
+  - jsonschema=4.23.0=pyhd8ed1ab_0
+  - jsonschema-specifications=2024.10.1=pyhd8ed1ab_0
+  - jsonschema-with-format-nongpl=4.23.0=hd8ed1ab_1
+  - jupyter=1.1.1=pyhd8ed1ab_0
+  - jupyter-lsp=2.2.5=pyhd8ed1ab_0
+  - jupyter_client=8.6.3=pyhd8ed1ab_0
+  - jupyter_console=6.6.3=pyhd8ed1ab_0
+  - jupyter_core=5.7.2=pyh31011fe_1
+  - jupyter_events=0.10.0=pyhd8ed1ab_0
+  - jupyter_server=2.14.2=pyhd8ed1ab_0
+  - jupyter_server_terminals=0.5.3=pyhd8ed1ab_0
+  - jupyterlab=4.2.5=pyhd8ed1ab_0
+  - jupyterlab_pygments=0.3.0=pyhd8ed1ab_1
+  - jupyterlab_server=2.27.3=pyhd8ed1ab_0
+  - jupyterlab_widgets=3.0.13=pyhd8ed1ab_0
+  - krb5=1.20.1=h143b758_1
+  - lame=3.100=h7b6447c_0
+  - lcms2=2.12=hddcbb42_0
+  - ld_impl_linux-64=2.40=h12ee557_0
+  - lerc=2.2.1=h9c3ff4c_0
+  - libabseil=20240116.2=cxx17_h6a678d5_0
+  - libblas=3.9.0=12_linux64_mkl
+  - libbrotlicommon=1.1.0=hb9d3cd8_2
+  - libbrotlidec=1.1.0=hb9d3cd8_2
+  - libbrotlienc=1.1.0=hb9d3cd8_2
+  - libcblas=3.9.0=12_linux64_mkl
+  - libclang=10.0.1=default_hde54327_1
+  - libcublas=11.11.3.6=0
+  - libcublas-dev=11.11.3.6=0
+  - libcufft=10.9.0.58=0
+  - libcufft-dev=10.9.0.58=0
+  - libcufile=1.9.1.3=0
+  - libcufile-dev=1.4.0.31=0
+  - libcurand=10.3.5.147=0
+  - libcurand-dev=10.3.0.86=0
+  - libcusolver=11.4.1.48=0
+  - libcusolver-dev=11.4.1.48=0
+  - libcusparse=11.7.5.86=0
+  - libcusparse-dev=11.7.5.86=0
+  - libdeflate=1.7=h7f98852_5
+  - libedit=3.1.20230828=h5eee18b_0
+  - libevent=2.1.12=hf998b51_1
+  - libexpat=2.6.4=h5888daf_0
+  - libffi=3.4.4=h6a678d5_1
+  - libgcc=14.2.0=h767d61c_2
+  - libgcc-ng=14.2.0=h69a702a_2
+  - libgfortran-ng=13.2.0=h69a702a_0
+  - libgfortran5=13.2.0=ha4646dd_0
+  - libglib=2.78.4=hdc74915_0
+  - libgomp=14.2.0=h767d61c_2
+  - libgrpc=1.62.2=h2d74bed_0
+  - libiconv=1.16=h5eee18b_3
+  - libidn2=2.3.4=h5eee18b_0
+  - libjpeg-turbo=2.0.0=h9bf148f_0
+  - liblapack=3.9.0=12_linux64_mkl
+  - libllvm10=10.0.1=he513fc3_3
+  - libnpp=11.8.0.86=0
+  - libnpp-dev=11.8.0.86=0
+  - libnvfatbin=12.4.127=0
+  - libnvjitlink=12.4.127=0
+  - libnvjpeg=11.9.0.86=0
+  - libnvjpeg-dev=11.9.0.86=0
+  - libopenblas=0.3.21=h043d6bf_0
+  - libpng=1.6.37=h21135ba_2
+  - libpq=12.20=hdbd6064_0
+  - libprotobuf=4.25.3=he621ea3_0
+  - libsodium=1.0.18=h36c2ea0_1
+  - libstdcxx=14.2.0=h8f9b012_2
+  - libstdcxx-ng=11.2.0=h1234567_1
+  - libtasn1=4.19.0=h5eee18b_0
+  - libtiff=4.3.0=hf544144_1
+  - libunistring=0.9.10=h27cfd23_0
+  - libuuid=2.38.1=h0b41bf4_0
+  - libwebp=1.2.2=h55f646e_0
+  - libwebp-base=1.2.2=h7f98852_1
+  - libxcb=1.17.0=h8a09558_0
+  - libxkbcommon=1.0.3=he3ba5ed_0
+  - libxml2=2.9.14=h74e7548_0
+  - llvm-openmp=14.0.6=h9e868ea_0
+  - lz4-c=1.9.4=h6a678d5_1
+  - markdown=3.6=pyhd8ed1ab_0
+  - markupsafe=2.1.1=py38h0a891b7_1
+  - matplotlib-base=3.7.2=py38h1128e8f_0
+  - matplotlib-inline=0.1.7=pyhd8ed1ab_0
+  - metis=5.1.0=hd0bcaf9_1007
+  - mistune=3.0.2=pyhd8ed1ab_0
+  - mkl=2021.4.0=h06a4308_640
+  - mkl-service=2.4.0=py38h7f8727e_0
+  - mkl_fft=1.3.1=py38hd3c417c_0
+  - mkl_random=1.2.2=py38h51133e4_0
+  - mpc=1.3.1=h5eee18b_0
+  - mpfr=4.2.1=h90cbb55_3
+  - mpmath=1.3.0=py38h06a4308_0
+  - multidict=6.0.2=py38h0a891b7_1
+  - munkres=1.1.4=pyh9f0ad1d_0
+  - nbclient=0.10.2=pyhd8ed1ab_0
+  - nbconvert-core=7.16.4=pyhff2d567_2
+  - nbformat=5.10.4=pyhd8ed1ab_0
+  - ncurses=6.4=h6a678d5_0
+  - nest-asyncio=1.6.0=pyhd8ed1ab_0
+  - nettle=3.7.3=hbbd107a_1
+  - ninja-base=1.12.1=hdb19cb5_0
+  - notebook=7.2.2=pyhd8ed1ab_0
+  - notebook-shim=0.2.4=pyhd8ed1ab_0
+  - nsight-compute=2022.3.0.22=0
+  - nspr=4.36=h5888daf_0
+  - nss=3.89.1=h6a678d5_0
+  - oauthlib=3.2.2=pyhd8ed1ab_0
+  - olefile=0.47=pyhd8ed1ab_0
+  - omegaconf=2.3.0=pyhd8ed1ab_0
+  - openh264=2.1.1=h4ff587b_0
+  - openjpeg=2.4.0=hb52868f_1
+  - openssl=3.4.1=h7b32b05_0
+  - overrides=7.7.0=pyhd8ed1ab_0
+  - packaging=24.2=pyhd8ed1ab_2
+  - pandas=1.4.2=py38h47df419_1
+  - pandocfilters=1.5.0=pyhd8ed1ab_0
+  - parso=0.8.4=pyhd8ed1ab_0
+  - pcre2=10.42=hebb0a14_1
+  - pexpect=4.9.0=pyhd8ed1ab_0
+  - pickleshare=0.7.5=py_1003
+  - pillow=9.4.0=py38h6a678d5_0
+  - pip=24.2=py38h06a4308_0
+  - pkgutil-resolve-name=1.3.10=pyhd8ed1ab_1
+  - platformdirs=4.3.6=pyhd8ed1ab_0
+  - plotly=5.24.1=pyhd8ed1ab_0
+  - portalocker=2.10.1=py38h578d9bd_0
+  - prometheus_client=0.21.0=pyhd8ed1ab_0
+  - prompt-toolkit=3.0.48=pyha770c72_0
+  - prompt_toolkit=3.0.48=hd8ed1ab_1
+  - pthread-stubs=0.4=hb9d3cd8_1002
+  - ptyprocess=0.7.0=pyhd3deb0d_0
+  - pure_eval=0.2.3=pyhd8ed1ab_0
+  - pyasn1=0.6.1=pyhd8ed1ab_1
+  - pyasn1-modules=0.4.1=pyhd8ed1ab_0
+  - pybullet=3.21=py38h43a58ef_1
+  - pycparser=2.22=pyhd8ed1ab_0
+  - pygments=2.18.0=pyhd8ed1ab_0
+  - pyjwt=2.9.0=pyhd8ed1ab_1
+  - pyopenssl=24.2.1=pyhd8ed1ab_2
+  - pyqt=5.15.4=py38hfa26641_0
+  - pyqt5-sip=12.9.0=py38hfa26641_0
+  - pysocks=1.7.1=pyha2e5f31_6
+  - python=3.8.20=he870216_0
+  - python-fastjsonschema=2.20.0=pyhd8ed1ab_0
+  - python-json-logger=2.0.7=pyhd8ed1ab_0
+  - python_abi=3.8=2_cp38
+  - pytorch=2.2.0=py3.8_cuda11.8_cudnn8.7.0_0
+  - pytorch-cuda=11.8=h7e8668a_6
+  - pytorch-mutex=1.0=cuda
+  - pytorch3d=0.7.8=py38_cu118_pyt220
+  - pytz=2024.2=pyhd8ed1ab_0
+  - pyu2f=0.1.5=pyhd8ed1ab_0
+  - pyyaml=6.0=py38h0a891b7_5
+  - pyzmq=25.1.2=py38h6a678d5_0
+  - qt-main=5.15.2=h327a75a_7
+  - re2=2022.04.01=h27087fc_0
+  - readline=8.2=h5eee18b_0
+  - referencing=0.35.1=pyhd8ed1ab_0
+  - requests=2.32.3=pyhd8ed1ab_0
+  - requests-oauthlib=2.0.0=pyhd8ed1ab_0
+  - rfc3339-validator=0.1.4=pyhd8ed1ab_0
+  - rfc3986-validator=0.1.1=pyh9f0ad1d_0
+  - rpds-py=0.20.0=py38h4005ec7_0
+  - rsa=4.9=pyhd8ed1ab_0
+  - send2trash=1.8.3=pyh0d859eb_0
+  - setuptools=75.1.0=py38h06a4308_0
+  - shapely=1.8.2=py38h97f7145_1
+  - sip=6.5.1=py38h709712a_2
+  - six=1.16.0=pyh6c4a22f_0
+  - sniffio=1.3.1=pyhd8ed1ab_0
+  - soupsieve=2.5=pyhd8ed1ab_1
+  - sqlite=3.45.3=h5eee18b_0
+  - stack_data=0.6.2=pyhd8ed1ab_0
+  - suitesparse=5.10.1=h9e50725_1
+  - sympy=1.5.1=py38_0
+  - tabulate=0.9.0=pyhd8ed1ab_1
+  - tbb=2021.5.0=h924138e_1
+  - tenacity=9.0.0=pyhd8ed1ab_0
+  - tensorboard=2.13.0=pyhd8ed1ab_0
+  - tensorboard-data-server=0.7.0=py38h52d8a92_1
+  - termcolor=2.4.0=pyhd8ed1ab_0
+  - terminado=0.18.1=pyh0d859eb_0
+  - tinycss2=1.4.0=pyhd8ed1ab_0
+  - tk=8.6.14=h39e8969_0
+  - toml=0.10.2=pyhd8ed1ab_0
+  - tomli=2.0.2=pyhd8ed1ab_0
+  - torchaudio=2.2.0=py38_cu118
+  - torchtriton=2.2.0=py38
+  - torchvision=0.17.0=py38_cu118
+  - tornado=6.4.1=py38hfb59056_0
+  - tqdm=4.67.1=pyhd8ed1ab_0
+  - traitlets=5.14.3=pyhd8ed1ab_0
+  - types-python-dateutil=2.9.0.20241003=pyhff2d567_0
+  - typing-extensions=4.12.2=hd8ed1ab_0
+  - typing_extensions=4.12.2=pyha770c72_0
+  - typing_utils=0.1.0=pyhd8ed1ab_0
+  - unicodedata2=15.1.0=py38h01eb140_0
+  - uri-template=1.3.0=pyhd8ed1ab_0
+  - urllib3=2.2.3=pyhd8ed1ab_0
+  - wcwidth=0.2.13=pyhd8ed1ab_0
+  - webcolors=24.8.0=pyhd8ed1ab_0
+  - webencodings=0.5.1=pyhd8ed1ab_2
+  - websocket-client=1.8.0=pyhd8ed1ab_0
+  - werkzeug=3.0.6=pyhd8ed1ab_0
+  - wheel=0.44.0=py38h06a4308_0
+  - widgetsnbextension=4.0.13=pyhd8ed1ab_0
+  - xorg-libx11=1.8.11=h4f16b4b_0
+  - xorg-libxau=1.0.12=hb9d3cd8_0
+  - xorg-libxdmcp=1.1.5=hb9d3cd8_0
+  - xorg-libxext=1.3.6=hb9d3cd8_0
+  - xz=5.6.4=h5eee18b_1
+  - yacs=0.1.8=pyhd8ed1ab_0
+  - yaml=0.2.5=h7f98852_2
+  - yarl=1.7.2=py38h0a891b7_2
+  - zeromq=4.3.5=h6a678d5_0
+  - zipp=3.21.0=pyhd8ed1ab_0
+  - zlib=1.2.13=h5eee18b_1
+  - zstandard=0.23.0=py38h2c38b39_0
+  - zstd=1.5.6=hc292b87_0
+  - pip:
+      - aerial-gym==2.0.0
+      - cloudpickle==3.1.1
+      - colorlog==6.9.0
+      - contourpy==1.1.1
+      - cython==3.0.12
+      - decorator==5.2.1
+      - farama-notifications==0.0.4
+      - faster-fifo==1.4.7
+      - fonttools==4.56.0
+      - freetype-py==2.5.1
+      - fsspec==2025.2.0
+      - gitdb==4.0.12
+      - gitpython==3.1.44
+      - gym==0.23.1
+      - gymnasium==0.29.1
+      - huggingface-hub==0.29.1
+      - imageio==2.35.1
+      - kiwisolver==1.4.7
+      - lxml==5.3.1
+      - matplotlib==3.7.5
+      - networkx==2.2
+      - ninja==1.11.1.3
+      - numpy==1.23.0
+      - opencv-python==4.11.0.86
+      - pathtools==0.1.2
+      - promise==2.3
+      - protobuf==3.20.3
+      - psutil==5.9.8
+      - pycollada==0.6
+      - pygame==2.1.0
+      - pyglet==2.1.3
+      - pyopengl==3.1.0
+      - pyparsing==3.1.4
+      - pyrender==0.1.45
+      - python-dateutil==2.9.0.post0
+      - rl-games==1.6.1
+      - sample-factory==2.1.1
+      - scipy==1.10.1
+      - sentry-sdk==2.22.0
+      - setproctitle==1.3.5
+      - shortuuid==1.0.13
+      - signal-slot-mp==1.0.5
+      - smmap==5.0.2
+      - tensorboardx==2.6.2.2
+      - threadpoolctl==3.5.0
+      - trimesh==4.6.3
+      - wandb==0.12.21
+      - warp-lang==1.0.0b5
+prefix: /home/shruti/miniconda3/envs/aerialgym
diff --git a/aerial_gym/rl_training/rl_games/wandb/run-20250226_214839-qrgr4a01/files/config.yaml b/aerial_gym/rl_training/rl_games/wandb/run-20250226_214839-qrgr4a01/files/config.yaml
new file mode 100644
index 0000000..5acd4ab
--- /dev/null
+++ b/aerial_gym/rl_training/rl_games/wandb/run-20250226_214839-qrgr4a01/files/config.yaml
@@ -0,0 +1,94 @@
+wandb_version: 1
+
+params:
+  desc: null
+  value:
+    seed: 10
+    algo:
+      name: a2c_continuous
+    model:
+      name: continuous_a2c_logstd
+    load_checkpoint: false
+    network:
+      name: actor_critic
+      separate: false
+      space:
+        continuous:
+          mu_activation: None
+          sigma_activation: None
+          mu_init:
+            name: default
+          sigma_init:
+            name: const_initializer
+            val: 0
+          fixed_sigma: true
+      mlp:
+        units:
+        - 256
+        - 128
+        - 64
+        d2rl: false
+        activation: elu
+        initializer:
+          name: default
+          scale: 2
+    config:
+      env_name: navigation_task
+      env_config:
+        num_envs: 16
+        headless: false
+        use_warp: true
+      name: gen_ppo
+      reward_shaper:
+        scale_value: 0.1
+      normalize_advantage: true
+      gamma: 0.98
+      tau: 0.95
+      ppo: true
+      learning_rate: 1e-4
+      lr_schedule: adaptive
+      kl_threshold: 0.016
+      save_best_after: 10
+      score_to_win: 100000
+      grad_norm: 1.0
+      entropy_coef: 0
+      truncate_grads: true
+      e_clip: 0.2
+      clip_value: false
+      num_actors: 16
+      horizon_length: 32
+      minibatch_size: 2048
+      mini_epochs: 4
+      critic_coef: 2
+      normalize_input: true
+      bounds_loss_coef: 0.0001
+      max_epochs: 500
+      normalize_value: true
+      use_diagnostics: true
+      value_bootstrap: true
+      use_smooth_clamp: false
+      player:
+        use_vecenv: true
+_wandb:
+  desc: null
+  value:
+    code_path: code/aerial_gym/rl_training/rl_games/runner.py
+    python_version: 3.8.20
+    cli_version: 0.16.6
+    framework: torch
+    is_jupyter_run: false
+    is_kaggle_kernel: false
+    start_time: 1740624519.0
+    t:
+      1:
+      - 1
+      - 55
+      3:
+      - 16
+      - 23
+      - 35
+      4: 3.8.20
+      5: 0.16.6
+      8:
+      - 5
+      13: linux-x86_64
diff --git a/aerial_gym/rl_training/rl_games/wandb/run-20250226_214839-qrgr4a01/files/diff.patch b/aerial_gym/rl_training/rl_games/wandb/run-20250226_214839-qrgr4a01/files/diff.patch
new file mode 100644
index 0000000..a7ff8db
--- /dev/null
+++ b/aerial_gym/rl_training/rl_games/wandb/run-20250226_214839-qrgr4a01/files/diff.patch
@@ -0,0 +1,38 @@
+diff --git a/aerial_gym/config/task_config/navigation_task_config.py b/aerial_gym/config/task_config/navigation_task_config.py
+index 7ecbda5..2f838d7 100644
+--- a/aerial_gym/config/task_config/navigation_task_config.py
++++ b/aerial_gym/config/task_config/navigation_task_config.py
+@@ -19,7 +19,7 @@ class task_config:
+     episode_len_steps = 100  # real physics time for simulation is this value multiplied by sim.dt
+ 
+     return_state_before_reset = (
+-        False  # False as usually state is returned for next episode after reset
++        True  # False as usually state is returned for next episode after reset
+     )
+     # user can set the above to true if they so desire
+ 
+diff --git a/aerial_gym/rl_training/rl_games/runner.py b/aerial_gym/rl_training/rl_games/runner.py
+index 7e8ffb4..bd45a3c 100644
+--- a/aerial_gym/rl_training/rl_games/runner.py
++++ b/aerial_gym/rl_training/rl_games/runner.py
+@@ -255,7 +255,7 @@ def get_args():
+             "name": "--use_warp",
+             "type": lambda x: bool(distutils.util.strtobool(x)),
+             "default": "True",
+-            "help": "Choose whether to use warp or Isaac Gym rendeing pipeline.",
++            "help": "Choose whether to use warp or Isaac Gym rendering pipeline.",
+         },
+     ]
+ 
+diff --git a/aerial_gym/task/__init__.py b/aerial_gym/task/__init__.py
+index 7dd966d..7975a4d 100644
+--- a/aerial_gym/task/__init__.py
++++ b/aerial_gym/task/__init__.py
+@@ -95,5 +95,5 @@ task_registry.register_task(
+ 
+ ## Uncomment this to use custom tasks
+ 
+-# from aerial_gym.task.custom_task.custom_task import CustomTask
+-# task_registry.register_task("custom_task", CustomTask, custom_task.task_config)
++#from aerial_gym.task.custom_task.custom_task import CustomTask
++#task_registry.register_task("custom_task", CustomTask, custom_task.task_config)
diff --git a/aerial_gym/rl_training/rl_games/wandb/run-20250226_214839-qrgr4a01/files/output.log b/aerial_gym/rl_training/rl_games/wandb/run-20250226_214839-qrgr4a01/files/output.log
new file mode 100644
index 0000000..98ad69d
--- /dev/null
+++ b/aerial_gym/rl_training/rl_games/wandb/run-20250226_214839-qrgr4a01/files/output.log
@@ -0,0 +1,57 @@
+[37m[4537 ms][base_task] - INFO : Setting seed: 3548876341 (base_task.py:38)
+[37m[4537 ms][navigation_task] - INFO : Building environment for navigation task. (navigation_task.py:44)
+[37m[4538 ms][navigation_task] - INFO : Sim Name: base_sim, Env Name: env_with_obstacles, Robot Name: lmf2, Controller Name: lmf2_velocity_control (navigation_task.py:45)
+[37m[4538 ms][env_manager] - INFO : Populating environments. (env_manager.py:73)
+[37m[4538 ms][env_manager] - INFO : Creating simulation instance. (env_manager.py:87)
+[37m[4538 ms][env_manager] - INFO : Instantiating IGE object. (env_manager.py:88)
+[37m[4538 ms][IsaacGymEnvManager] - INFO : Creating Isaac Gym Environment (IGE_env_manager.py:41)
+[37m[4538 ms][IsaacGymEnvManager] - INFO : Acquiring gym object (IGE_env_manager.py:73)
+[37m[4538 ms][IsaacGymEnvManager] - INFO : Acquired gym object (IGE_env_manager.py:75)
+[37m[4539 ms][IsaacGymEnvManager] - INFO : Fixing devices (IGE_env_manager.py:89)
+[37m[4539 ms][IsaacGymEnvManager] - INFO : Using GPU pipeline for simulation. (IGE_env_manager.py:102)
+[37m[4539 ms][IsaacGymEnvManager] - INFO : Sim Device type: cuda, Sim Device ID: 0 (IGE_env_manager.py:105)
+[37m[4539 ms][IsaacGymEnvManager] - INFO : Graphics Device ID: 0 (IGE_env_manager.py:119)
+[37m[4539 ms][IsaacGymEnvManager] - INFO : Creating Isaac Gym Simulation Object (IGE_env_manager.py:120)
+[33m[4539 ms][IsaacGymEnvManager] - WARNING : If you have set the CUDA_VISIBLE_DEVICES environment variable, please ensure that you set it
+[33mto a particular one that works for your system to use the viewer or Isaac Gym cameras.
+[33mIf you want to run parallel simulations on multiple GPUs with camera sensors,
+[33mplease disable Isaac Gym and use warp (by setting use_warp=True), set the viewer to headless. (IGE_env_manager.py:127)
+[33m[4539 ms][IsaacGymEnvManager] - WARNING : If you see a segfault in the next lines, it is because of the discrepancy between the CUDA device and the graphics device.
+[33mPlease ensure that the CUDA device and the graphics device are the same. (IGE_env_manager.py:132)
+[37m[5350 ms][IsaacGymEnvManager] - INFO : Created Isaac Gym Simulation Object (IGE_env_manager.py:136)
+[37m[5351 ms][IsaacGymEnvManager] - INFO : Created Isaac Gym Environment (IGE_env_manager.py:43)
+[37m[5451 ms][env_manager] - INFO : IGE object instantiated. (env_manager.py:109)
+[37m[5452 ms][env_manager] - INFO : Creating warp environment. (env_manager.py:112)
+[37m[5452 ms][env_manager] - INFO : Warp environment created. (env_manager.py:114)
+[37m[5452 ms][env_manager] - INFO : Creating robot manager. (env_manager.py:118)
+[37m[5452 ms][BaseRobot] - INFO : [DONE] Initializing controller (base_robot.py:26)
+[37m[5452 ms][BaseRobot] - INFO : Initializing controller lmf2_velocity_control (base_robot.py:29)
+[33m[5452 ms][base_multirotor] - WARNING : Creating 16 multirotors. (base_multirotor.py:32)
+[37m[5452 ms][env_manager] - INFO : [DONE] Creating robot manager. (env_manager.py:123)
+[37m[5452 ms][env_manager] - INFO : [DONE] Creating simulation instance. (env_manager.py:125)
+[37m[5452 ms][asset_loader] - INFO : Loading asset: model.urdf for the first time. Next use of this asset will be via the asset buffer. (asset_loader.py:71)
+[37m[5453 ms][asset_loader] - INFO : Loading asset: panel.urdf for the first time. Next use of this asset will be via the asset buffer. (asset_loader.py:71)
+[37m[5455 ms][asset_loader] - INFO : Loading asset: 1_x_1_wall.urdf for the first time. Next use of this asset will be via the asset buffer. (asset_loader.py:71)
+[37m[5456 ms][asset_loader] - INFO : Loading asset: 0_5_x_0_5_wall.urdf for the first time. Next use of this asset will be via the asset buffer. (asset_loader.py:71)
+[37m[5457 ms][asset_loader] - INFO : Loading asset: small_cube.urdf for the first time. Next use of this asset will be via the asset buffer. (asset_loader.py:71)
+[37m[5457 ms][asset_loader] - INFO : Loading asset: left_wall.urdf for the first time. Next use of this asset will be via the asset buffer. (asset_loader.py:71)
+[37m[5458 ms][asset_loader] - INFO : Loading asset: right_wall.urdf for the first time. Next use of this asset will be via the asset buffer. (asset_loader.py:71)
+[37m[5459 ms][asset_loader] - INFO : Loading asset: back_wall.urdf for the first time. Next use of this asset will be via the asset buffer. (asset_loader.py:71)
+[37m[5460 ms][asset_loader] - INFO : Loading asset: front_wall.urdf for the first time. Next use of this asset will be via the asset buffer. (asset_loader.py:71)
+[37m[5460 ms][asset_loader] - INFO : Loading asset: bottom_wall.urdf for the first time. Next use of this asset will be via the asset buffer. (asset_loader.py:71)
+[37m[5461 ms][asset_loader] - INFO : Loading asset: top_wall.urdf for the first time. Next use of this asset will be via the asset buffer. (asset_loader.py:71)
+[37m[5462 ms][asset_loader] - INFO : Loading asset: cuboidal_rod.urdf for the first time. Next use of this asset will be via the asset buffer. (asset_loader.py:71)
+[37m[5464 ms][env_manager] - INFO : Populating environment 0 (env_manager.py:179)
+[33m[5553 ms][robot_manager] - WARNING : 
+[33mRobot mass: 1.2400000467896461,
+[33mInertia: tensor([[0.0134, 0.0000, 0.0000],
+[33m        [0.0000, 0.0144, 0.0000],
+[33m        [0.0000, 0.0000, 0.0138]], device='cuda:0'),
+[33mRobot COM: tensor([[0., 0., 0., 1.]], device='cuda:0') (robot_manager.py:427)
+[33m[5553 ms][robot_manager] - WARNING : Calculated robot mass and inertia for this robot. This code assumes that your robot is the same across environments. (robot_manager.py:430)
+[31m[5554 ms][robot_manager] - CRITICAL : If your robot differs across environments you need to perform this computation for each different robot here. (robot_manager.py:433)
+[37m[5573 ms][env_manager] - INFO : [DONE] Populating environments. (env_manager.py:75)
+[33m[5581 ms][IsaacGymEnvManager] - WARNING : Headless: False (IGE_env_manager.py:424)
+[37m[5581 ms][IsaacGymEnvManager] - INFO : Creating viewer (IGE_env_manager.py:426)
+Started to play
+[BasePlayer] Creating vecenv:  navigation_task
diff --git a/aerial_gym/rl_training/rl_games/wandb/run-20250226_214839-qrgr4a01/files/requirements.txt b/aerial_gym/rl_training/rl_games/wandb/run-20250226_214839-qrgr4a01/files/requirements.txt
new file mode 100644
index 0000000..a906a9d
--- /dev/null
+++ b/aerial_gym/rl_training/rl_games/wandb/run-20250226_214839-qrgr4a01/files/requirements.txt
@@ -0,0 +1,264 @@
+Brotli==1.0.9
+Cython==3.0.12
+Farama-Notifications==0.0.4
+GitPython==3.1.43
+GitPython==3.1.44
+Jinja2==3.1.4
+Markdown==3.6
+MarkupSafe==2.1.1
+Pillow==9.4.0
+PyJWT==2.9.0
+PyOpenGL==3.1.0
+PyQt5-sip==12.9.0
+PyQt5==5.15.4
+PySocks==1.7.1
+PyYAML==6.0
+Pygments==2.18.0
+Send2Trash==1.8.3
+Shapely==1.8.2
+Werkzeug==3.0.6
+absl-py==2.1.0
+aerial_gym==2.0.0
+aiohttp==3.7.4.post0
+antlr4-python3-runtime==4.9.3
+anyio==4.5.0
+appdirs==1.4.4
+argon2-cffi-bindings==21.2.0
+argon2-cffi==23.1.0
+arrow==1.3.0
+asttokens==3.0.0
+async-lru==2.0.4
+async-timeout==3.0.1
+attrs==24.2.0
+autocommand==2.2.2
+babel==2.16.0
+backcall==0.2.0
+backports.tarfile==1.2.0
+beautifulsoup4==4.12.3
+bleach==6.1.0
+blinker==1.8.2
+cached-property==1.5.2
+cachetools==5.5.0
+certifi==2024.8.30
+cffi==1.15.0
+chardet==4.0.0
+charset-normalizer==3.4.0
+click==8.1.7
+cloudpickle==3.1.0
+cloudpickle==3.1.1
+colorama==0.4.6
+colorlog==6.9.0
+comm==0.2.2
+contourpy==1.0.2
+contourpy==1.1.1
+cryptography==43.0.0
+cycler==0.12.1
+debugpy==1.6.7
+decorator==5.1.1
+decorator==5.2.1
+defusedxml==0.7.1
+dill==0.3.9
+docker-pycreds==0.4.0
+entrypoints==0.4
+exceptiongroup==1.2.2
+executing==2.1.0
+fastcache==1.1.0
+faster-fifo==1.4.7
+fastjsonschema==2.20.0
+filelock==3.13.1
+fonttools==4.53.1
+fonttools==4.56.0
+fqdn==1.5.1
+freetype-py==2.5.1
+fsspec==2025.2.0
+fvcore==0.1.5.post20210915
+gitdb==4.0.11
+gitdb==4.0.12
+gmpy2==2.1.2
+google-auth-oauthlib==1.0.0
+google-auth==2.35.0
+grpcio==1.62.2
+gym-notices==0.0.8
+gym==0.23.1
+gym==0.26.1
+gymnasium==0.29.1
+h11==0.14.0
+h2==4.1.0
+hpack==4.0.0
+httpcore==1.0.7
+httpx==0.27.2
+huggingface-hub==0.29.1
+hyperframe==6.0.1
+idna==3.10
+imageio==2.35.1
+importlib_metadata==8.0.0
+importlib_metadata==8.5.0
+importlib_resources==6.4.0
+importlib_resources==6.4.5
+inflect==7.3.1
+iopath==0.1.9
+ipykernel==6.29.5
+ipython==8.12.2
+ipywidgets==8.1.5
+isaacgym==1.0rc4
+isoduration==20.11.0
+jaraco.collections==5.1.0
+jaraco.context==5.3.0
+jaraco.functools==4.0.1
+jaraco.text==3.12.1
+jedi==0.19.1
+json5==0.9.25
+jsonpointer==3.0.0
+jsonschema-specifications==2024.10.1
+jsonschema==4.23.0
+jupyter-console==6.6.3
+jupyter-events==0.10.0
+jupyter-lsp==2.2.5
+jupyter==1.1.1
+jupyter_client==8.6.3
+jupyter_core==5.7.2
+jupyter_server==2.14.2
+jupyter_server_terminals==0.5.3
+jupyterlab==4.2.5
+jupyterlab_pygments==0.3.0
+jupyterlab_server==2.27.3
+jupyterlab_widgets==3.0.13
+kiwisolver==1.4.2
+kiwisolver==1.4.7
+lxml==5.3.1
+matplotlib-inline==0.1.7
+matplotlib==3.7.2
+matplotlib==3.7.5
+mistune==3.0.2
+mkl-fft==1.3.1
+mkl-random==1.2.2
+mkl-service==2.4.0
+more-itertools==10.3.0
+mpmath==1.3.0
+multidict==6.0.2
+munkres==1.1.4
+nbclient==0.10.2
+nbconvert==7.16.4
+nbformat==5.10.4
+nest_asyncio==1.6.0
+networkx==2.2
+networkx==3.1
+ninja==1.11.1.3
+notebook==7.2.2
+notebook_shim==0.2.4
+numpy==1.23.0
+oauthlib==3.2.2
+olefile==0.47
+omegaconf==2.3.0
+opencv-python==4.11.0.86
+overrides==7.7.0
+packaging==24.1
+packaging==24.2
+pandas==1.4.2
+pandocfilters==1.5.0
+parso==0.8.4
+pathtools==0.1.2
+pexpect==4.9.0
+pickleshare==0.7.5
+pip==24.2
+pkgutil_resolve_name==1.3.10
+platformdirs==4.2.2
+platformdirs==4.3.6
+plotly==5.24.1
+portalocker==2.10.1
+prometheus_client==0.21.0
+promise==2.3
+prompt_toolkit==3.0.48
+protobuf==3.20.3
+protobuf==4.25.3
+psutil==5.9.8
+psutil==6.0.0
+ptyprocess==0.7.0
+pure_eval==0.2.3
+pyOpenSSL==24.2.1
+pyasn1==0.6.1
+pyasn1_modules==0.4.1
+pybullet==3.2.0
+pycollada==0.6
+pycparser==2.22
+pygame==2.1.0
+pyglet==2.1.3
+pyparsing==3.0.9
+pyparsing==3.1.4
+pyrender==0.1.45
+python-dateutil==2.9.0
+python-dateutil==2.9.0.post0
+python-json-logger==2.0.7
+pytorch3d==0.7.8
+pytz==2024.2
+pyu2f==0.1.5
+pyzmq==25.1.2
+referencing==0.35.1
+requests-oauthlib==2.0.0
+requests==2.32.3
+rfc3339-validator==0.1.4
+rfc3986-validator==0.1.1
+rl_games==1.6.1
+rpds-py==0.20.0
+rsa==4.9
+sample-factory==2.1.1
+scipy==1.10.1
+sentry-sdk==2.19.2
+sentry-sdk==2.22.0
+setproctitle==1.3.3
+setproctitle==1.3.5
+setuptools==75.1.0
+shortuuid==1.0.13
+signal-slot-mp==1.0.5
+sip==6.5.1
+six==1.16.0
+smmap==5.0.0
+smmap==5.0.2
+sniffio==1.3.1
+soupsieve==2.5
+stack-data==0.6.2
+sympy==1.5.1
+tabulate==0.9.0
+tenacity==9.0.0
+tensorboard==2.13.0
+tensorboardX==2.6.2.2
+tensorboard_data_server==0.7.0
+termcolor==2.4.0
+terminado==0.18.1
+threadpoolctl==3.5.0
+tinycss2==1.4.0
+toml==0.10.2
+tomli==2.0.1
+tomli==2.0.2
+torch==2.2.0
+torchaudio==2.2.0
+torchvision==0.17.0
+tornado==6.4.1
+tqdm==4.67.1
+traitlets==5.14.3
+trimesh==4.6.3
+triton==2.2.0
+typeguard==4.3.0
+types-python-dateutil==2.9.0.20241003
+typing-utils==0.1.0
+typing_extensions==4.12.2
+typing_extensions==4.12.2
+unicodedata2==15.1.0
+urdfpy==0.0.22
+uri-template==1.3.0
+urllib3==2.2.3
+wandb==0.12.21
+wandb==0.16.6
+warp-lang==1.0.0b5
+wcwidth==0.2.13
+webcolors==24.8.0
+webencodings==0.5.1
+websocket-client==1.8.0
+wheel==0.43.0
+wheel==0.44.0
+widgetsnbextension==4.0.13
+yacs==0.1.8
+yarl==1.7.2
+zipp==3.19.2
+zipp==3.21.0
+zstandard==0.23.0
\ No newline at end of file
diff --git a/aerial_gym/rl_training/rl_games/wandb/run-20250226_214839-qrgr4a01/files/wandb-metadata.json b/aerial_gym/rl_training/rl_games/wandb/run-20250226_214839-qrgr4a01/files/wandb-metadata.json
new file mode 100644
index 0000000..15dec9b
--- /dev/null
+++ b/aerial_gym/rl_training/rl_games/wandb/run-20250226_214839-qrgr4a01/files/wandb-metadata.json
@@ -0,0 +1,156 @@
+{
+    "os": "Linux-6.5.0-44-generic-x86_64-with-glibc2.17",
+    "python": "3.8.20",
+    "heartbeatAt": "2025-02-27T02:48:40.171576",
+    "startedAt": "2025-02-27T02:48:39.780794",
+    "docker": null,
+    "cuda": null,
+    "args": [
+        "--file=./ppo_aerial_quad_navigation.yaml",
+        "--num_envs=16",
+        "--play",
+        "--checkpoint=./runs/gen_ppo_26-16-11-42/nn/last_gen_ppo_ep_500_rew__377.14606_.pth",
+        "--track",
+        "wandb-project-name=Trained_RL_Navigation",
+        "wandb-entity=shrutiroy03"
+    ],
+    "state": "running",
+    "program": "runner.py",
+    "codePathLocal": "runner.py",
+    "codePath": "aerial_gym/rl_training/rl_games/runner.py",
+    "git": {
+        "remote": "https://github.com/ntnu-arl/aerial_gym_simulator.git",
+        "commit": "85114e7514ed0f3f8cfecfa23c40dad106c528a1"
+    },
+    "email": null,
+    "root": "/home/shruti/workspaces/aerial_gym_ws/src/aerial_gym_simulator",
+    "host": "saferoboticslab-ASUS-TUF-Gaming-F15-FX507ZM-FX507ZM",
+    "username": "shruti",
+    "executable": "/home/shruti/miniconda3/envs/aerialgym/bin/python3",
+    "cpu_count": 14,
+    "cpu_count_logical": 20,
+    "cpu_freq": {
+        "current": 1085.4577000000002,
+        "min": 400.0,
+        "max": 4180.0
+    },
+    "cpu_freq_per_core": [
+        {
+            "current": 3267.627,
+            "min": 400.0,
+            "max": 4600.0
+        },
+        {
+            "current": 400.0,
+            "min": 400.0,
+            "max": 4600.0
+        },
+        {
+            "current": 400.0,
+            "min": 400.0,
+            "max": 4600.0
+        },
+        {
+            "current": 3312.787,
+            "min": 400.0,
+            "max": 4600.0
+        },
+        {
+            "current": 3422.755,
+            "min": 400.0,
+            "max": 4700.0
+        },
+        {
+            "current": 2532.805,
+            "min": 400.0,
+            "max": 4700.0
+        },
+        {
+            "current": 3405.63,
+            "min": 400.0,
+            "max": 4700.0
+        },
+        {
+            "current": 400.0,
+            "min": 400.0,
+            "max": 4700.0
+        },
+        {
+            "current": 3064.633,
+            "min": 400.0,
+            "max": 4600.0
+        },
+        {
+            "current": 3416.359,
+            "min": 400.0,
+            "max": 4600.0
+        },
+        {
+            "current": 2727.585,
+            "min": 400.0,
+            "max": 4600.0
+        },
+        {
+            "current": 400.0,
+            "min": 400.0,
+            "max": 4600.0
+        },
+        {
+            "current": 400.0,
+            "min": 400.0,
+            "max": 3500.0
+        },
+        {
+            "current": 400.0,
+            "min": 400.0,
+            "max": 3500.0
+        },
+        {
+            "current": 796.768,
+            "min": 400.0,
+            "max": 3500.0
+        },
+        {
+            "current": 400.0,
+            "min": 400.0,
+            "max": 3500.0
+        },
+        {
+            "current": 907.756,
+            "min": 400.0,
+            "max": 3500.0
+        },
+        {
+            "current": 400.0,
+            "min": 400.0,
+            "max": 3500.0
+        },
+        {
+            "current": 400.0,
+            "min": 400.0,
+            "max": 3500.0
+        },
+        {
+            "current": 400.0,
+            "min": 400.0,
+            "max": 3500.0
+        }
+    ],
+    "disk": {
+        "/": {
+            "total": 937.3305015563965,
+            "used": 231.45989990234375
+        }
+    },
+    "gpu": "NVIDIA GeForce RTX 3060 Laptop GPU",
+    "gpu_count": 1,
+    "gpu_devices": [
+        {
+            "name": "NVIDIA GeForce RTX 3060 Laptop GPU",
+            "memory_total": 6442450944
+        }
+    ],
+    "memory": {
+        "total": 15.238014221191406
+    }
+}
diff --git a/aerial_gym/rl_training/rl_games/wandb/run-20250226_214839-qrgr4a01/logs/debug-internal.log b/aerial_gym/rl_training/rl_games/wandb/run-20250226_214839-qrgr4a01/logs/debug-internal.log
new file mode 100644
index 0000000..ba75e77
--- /dev/null
+++ b/aerial_gym/rl_training/rl_games/wandb/run-20250226_214839-qrgr4a01/logs/debug-internal.log
@@ -0,0 +1,65 @@
+2025-02-26 21:48:39,785 INFO    StreamThr :18330 [internal.py:wandb_internal():86] W&B internal server running at pid: 18330, started at: 2025-02-26 21:48:39.785084
+2025-02-26 21:48:39,788 DEBUG   HandlerThread:18330 [handler.py:handle_request():146] handle_request: status
+2025-02-26 21:48:39,790 INFO    WriterThread:18330 [datastore.py:open_for_write():87] open: /home/shruti/workspaces/aerial_gym_ws/src/aerial_gym_simulator/aerial_gym/rl_training/rl_games/wandb/run-20250226_214839-qrgr4a01/run-qrgr4a01.wandb
+2025-02-26 21:48:39,792 DEBUG   SenderThread:18330 [sender.py:send():379] send: header
+2025-02-26 21:48:39,809 DEBUG   SenderThread:18330 [sender.py:send():379] send: run
+2025-02-26 21:48:40,083 INFO    SenderThread:18330 [dir_watcher.py:__init__():211] watching files in: /home/shruti/workspaces/aerial_gym_ws/src/aerial_gym_simulator/aerial_gym/rl_training/rl_games/wandb/run-20250226_214839-qrgr4a01/files
+2025-02-26 21:48:40,083 INFO    SenderThread:18330 [sender.py:_start_run_threads():1124] run started: qrgr4a01 with start time 1740624519.784829
+2025-02-26 21:48:40,092 DEBUG   HandlerThread:18330 [handler.py:handle_request():146] handle_request: check_version
+2025-02-26 21:48:40,092 DEBUG   SenderThread:18330 [sender.py:send_request():406] send_request: check_version
+2025-02-26 21:48:40,150 DEBUG   HandlerThread:18330 [handler.py:handle_request():146] handle_request: run_start
+2025-02-26 21:48:40,157 DEBUG   HandlerThread:18330 [system_info.py:__init__():26] System info init
+2025-02-26 21:48:40,157 DEBUG   HandlerThread:18330 [system_info.py:__init__():41] System info init done
+2025-02-26 21:48:40,157 INFO    HandlerThread:18330 [system_monitor.py:start():194] Starting system monitor
+2025-02-26 21:48:40,158 INFO    SystemMonitor:18330 [system_monitor.py:_start():158] Starting system asset monitoring threads
+2025-02-26 21:48:40,158 INFO    HandlerThread:18330 [system_monitor.py:probe():214] Collecting system info
+2025-02-26 21:48:40,158 INFO    SystemMonitor:18330 [interfaces.py:start():190] Started cpu monitoring
+2025-02-26 21:48:40,159 INFO    SystemMonitor:18330 [interfaces.py:start():190] Started disk monitoring
+2025-02-26 21:48:40,160 INFO    SystemMonitor:18330 [interfaces.py:start():190] Started gpu monitoring
+2025-02-26 21:48:40,160 INFO    SystemMonitor:18330 [interfaces.py:start():190] Started memory monitoring
+2025-02-26 21:48:40,161 INFO    SystemMonitor:18330 [interfaces.py:start():190] Started network monitoring
+2025-02-26 21:48:40,171 DEBUG   HandlerThread:18330 [system_info.py:probe():150] Probing system
+2025-02-26 21:48:40,178 DEBUG   HandlerThread:18330 [system_info.py:_probe_git():135] Probing git
+2025-02-26 21:48:40,191 DEBUG   HandlerThread:18330 [system_info.py:_probe_git():143] Probing git done
+2025-02-26 21:48:40,191 DEBUG   HandlerThread:18330 [system_info.py:probe():198] Probing system done
+2025-02-26 21:48:40,191 DEBUG   HandlerThread:18330 [system_monitor.py:probe():223] {'os': 'Linux-6.5.0-44-generic-x86_64-with-glibc2.17', 'python': '3.8.20', 'heartbeatAt': '2025-02-27T02:48:40.171576', 'startedAt': '2025-02-27T02:48:39.780794', 'docker': None, 'cuda': None, 'args': ('--file=./ppo_aerial_quad_navigation.yaml', '--num_envs=16', '--play', '--checkpoint=./runs/gen_ppo_26-16-11-42/nn/last_gen_ppo_ep_500_rew__377.14606_.pth', '--track', 'wandb-project-name=Trained_RL_Navigation', 'wandb-entity=shrutiroy03'), 'state': 'running', 'program': 'runner.py', 'codePathLocal': 'runner.py', 'codePath': 'aerial_gym/rl_training/rl_games/runner.py', 'git': {'remote': 'https://github.com/ntnu-arl/aerial_gym_simulator.git', 'commit': '85114e7514ed0f3f8cfecfa23c40dad106c528a1'}, 'email': None, 'root': '/home/shruti/workspaces/aerial_gym_ws/src/aerial_gym_simulator', 'host': 'saferoboticslab-ASUS-TUF-Gaming-F15-FX507ZM-FX507ZM', 'username': 'shruti', 'executable': '/home/shruti/miniconda3/envs/aerialgym/bin/python3', 'cpu_count': 14, 'cpu_count_logical': 20, 'cpu_freq': {'current': 1085.4577000000002, 'min': 400.0, 'max': 4180.0}, 'cpu_freq_per_core': [{'current': 3267.627, 'min': 400.0, 'max': 4600.0}, {'current': 400.0, 'min': 400.0, 'max': 4600.0}, {'current': 400.0, 'min': 400.0, 'max': 4600.0}, {'current': 3312.787, 'min': 400.0, 'max': 4600.0}, {'current': 3422.755, 'min': 400.0, 'max': 4700.0}, {'current': 2532.805, 'min': 400.0, 'max': 4700.0}, {'current': 3405.63, 'min': 400.0, 'max': 4700.0}, {'current': 400.0, 'min': 400.0, 'max': 4700.0}, {'current': 3064.633, 'min': 400.0, 'max': 4600.0}, {'current': 3416.359, 'min': 400.0, 'max': 4600.0}, {'current': 2727.585, 'min': 400.0, 'max': 4600.0}, {'current': 400.0, 'min': 400.0, 'max': 4600.0}, {'current': 400.0, 'min': 400.0, 'max': 3500.0}, {'current': 400.0, 'min': 400.0, 'max': 3500.0}, {'current': 796.768, 'min': 400.0, 'max': 3500.0}, {'current': 400.0, 'min': 400.0, 'max': 3500.0}, {'current': 907.756, 'min': 400.0, 'max': 3500.0}, {'current': 400.0, 'min': 400.0, 'max': 3500.0}, {'current': 400.0, 'min': 400.0, 'max': 3500.0}, {'current': 400.0, 'min': 400.0, 'max': 3500.0}], 'disk': {'/': {'total': 937.3305015563965, 'used': 231.45989990234375}}, 'gpu': 'NVIDIA GeForce RTX 3060 Laptop GPU', 'gpu_count': 1, 'gpu_devices': [{'name': 'NVIDIA GeForce RTX 3060 Laptop GPU', 'memory_total': 6442450944}], 'memory': {'total': 15.238014221191406}}
+2025-02-26 21:48:40,191 INFO    HandlerThread:18330 [system_monitor.py:probe():224] Finished collecting system info
+2025-02-26 21:48:40,191 INFO    HandlerThread:18330 [system_monitor.py:probe():227] Publishing system info
+2025-02-26 21:48:40,191 DEBUG   HandlerThread:18330 [system_info.py:_save_conda():207] Saving list of conda packages installed into the current environment
+2025-02-26 21:48:41,084 INFO    Thread-12 :18330 [dir_watcher.py:_on_file_created():271] file/dir created: /home/shruti/workspaces/aerial_gym_ws/src/aerial_gym_simulator/aerial_gym/rl_training/rl_games/wandb/run-20250226_214839-qrgr4a01/files/conda-environment.yaml
+2025-02-26 21:48:41,914 DEBUG   HandlerThread:18330 [system_info.py:_save_conda():222] Saving conda packages done
+2025-02-26 21:48:41,915 DEBUG   HandlerThread:18330 [system_info.py:_save_code():44] Saving code
+2025-02-26 21:48:41,924 DEBUG   HandlerThread:18330 [system_info.py:_save_code():65] Saving code done
+2025-02-26 21:48:41,924 DEBUG   HandlerThread:18330 [system_info.py:_save_patches():82] Saving git patches
+2025-02-26 21:48:41,957 DEBUG   HandlerThread:18330 [system_info.py:_save_patches():124] Saving git patches done
+2025-02-26 21:48:41,958 INFO    HandlerThread:18330 [system_monitor.py:probe():229] Finished publishing system info
+2025-02-26 21:48:41,960 DEBUG   SenderThread:18330 [sender.py:send():379] send: files
+2025-02-26 21:48:41,961 INFO    SenderThread:18330 [sender.py:_save_file():1390] saving file wandb-metadata.json with policy now
+2025-02-26 21:48:41,961 INFO    SenderThread:18330 [sender.py:_save_file():1390] saving file code/aerial_gym/rl_training/rl_games/runner.py with policy now
+2025-02-26 21:48:41,961 INFO    SenderThread:18330 [sender.py:_save_file():1390] saving file diff.patch with policy now
+2025-02-26 21:48:42,038 DEBUG   HandlerThread:18330 [handler.py:handle_request():146] handle_request: python_packages
+2025-02-26 21:48:42,038 DEBUG   HandlerThread:18330 [handler.py:handle_request():146] handle_request: stop_status
+2025-02-26 21:48:42,038 DEBUG   SenderThread:18330 [sender.py:send_request():406] send_request: python_packages
+2025-02-26 21:48:42,038 DEBUG   SenderThread:18330 [sender.py:send_request():406] send_request: stop_status
+2025-02-26 21:48:42,040 DEBUG   HandlerThread:18330 [handler.py:handle_request():146] handle_request: internal_messages
+2025-02-26 21:48:42,083 INFO    Thread-12 :18330 [dir_watcher.py:_on_file_modified():288] file/dir modified: /home/shruti/workspaces/aerial_gym_ws/src/aerial_gym_simulator/aerial_gym/rl_training/rl_games/wandb/run-20250226_214839-qrgr4a01/files/conda-environment.yaml
+2025-02-26 21:48:42,083 INFO    Thread-12 :18330 [dir_watcher.py:_on_file_created():271] file/dir created: /home/shruti/workspaces/aerial_gym_ws/src/aerial_gym_simulator/aerial_gym/rl_training/rl_games/wandb/run-20250226_214839-qrgr4a01/files/wandb-metadata.json
+2025-02-26 21:48:42,083 INFO    Thread-12 :18330 [dir_watcher.py:_on_file_created():271] file/dir created: /home/shruti/workspaces/aerial_gym_ws/src/aerial_gym_simulator/aerial_gym/rl_training/rl_games/wandb/run-20250226_214839-qrgr4a01/files/code/aerial_gym/rl_training/rl_games/runner.py
+2025-02-26 21:48:42,084 INFO    Thread-12 :18330 [dir_watcher.py:_on_file_created():271] file/dir created: /home/shruti/workspaces/aerial_gym_ws/src/aerial_gym_simulator/aerial_gym/rl_training/rl_games/wandb/run-20250226_214839-qrgr4a01/files/diff.patch
+2025-02-26 21:48:42,084 INFO    Thread-12 :18330 [dir_watcher.py:_on_file_created():271] file/dir created: /home/shruti/workspaces/aerial_gym_ws/src/aerial_gym_simulator/aerial_gym/rl_training/rl_games/wandb/run-20250226_214839-qrgr4a01/files/requirements.txt
+2025-02-26 21:48:42,084 INFO    Thread-12 :18330 [dir_watcher.py:_on_file_created():271] file/dir created: /home/shruti/workspaces/aerial_gym_ws/src/aerial_gym_simulator/aerial_gym/rl_training/rl_games/wandb/run-20250226_214839-qrgr4a01/files/code/aerial_gym
+2025-02-26 21:48:42,084 INFO    Thread-12 :18330 [dir_watcher.py:_on_file_created():271] file/dir created: /home/shruti/workspaces/aerial_gym_ws/src/aerial_gym_simulator/aerial_gym/rl_training/rl_games/wandb/run-20250226_214839-qrgr4a01/files/code/aerial_gym/rl_training
+2025-02-26 21:48:42,084 INFO    Thread-12 :18330 [dir_watcher.py:_on_file_created():271] file/dir created: /home/shruti/workspaces/aerial_gym_ws/src/aerial_gym_simulator/aerial_gym/rl_training/rl_games/wandb/run-20250226_214839-qrgr4a01/files/code/aerial_gym/rl_training/rl_games
+2025-02-26 21:48:42,084 INFO    Thread-12 :18330 [dir_watcher.py:_on_file_created():271] file/dir created: /home/shruti/workspaces/aerial_gym_ws/src/aerial_gym_simulator/aerial_gym/rl_training/rl_games/wandb/run-20250226_214839-qrgr4a01/files/code
+2025-02-26 21:48:42,169 DEBUG   SenderThread:18330 [sender.py:send():379] send: telemetry
+2025-02-26 21:48:42,214 INFO    wandb-upload_0:18330 [upload_job.py:push():131] Uploaded file /tmp/tmpgnzait2ewandb/yor01vb0-wandb-metadata.json
+2025-02-26 21:48:42,235 INFO    wandb-upload_2:18330 [upload_job.py:push():131] Uploaded file /tmp/tmpgnzait2ewandb/7ty8yhpf-diff.patch
+2025-02-26 21:48:42,238 INFO    wandb-upload_1:18330 [upload_job.py:push():131] Uploaded file /tmp/tmpgnzait2ewandb/4wtbt0fl-code/aerial_gym/rl_training/rl_games/runner.py
+2025-02-26 21:48:43,084 INFO    Thread-12 :18330 [dir_watcher.py:_on_file_created():271] file/dir created: /home/shruti/workspaces/aerial_gym_ws/src/aerial_gym_simulator/aerial_gym/rl_training/rl_games/wandb/run-20250226_214839-qrgr4a01/files/output.log
+2025-02-26 21:48:44,162 INFO    cpu       :18330 [interfaces.py:monitor():140] Process cpu has exited.
+2025-02-26 21:48:44,164 DEBUG   SystemMonitor:18330 [system_monitor.py:_start():172] Starting system metrics aggregation loop
+2025-02-26 21:48:44,165 DEBUG   SystemMonitor:18330 [system_monitor.py:_start():179] Finished system metrics aggregation loop
+2025-02-26 21:48:44,165 DEBUG   SystemMonitor:18330 [system_monitor.py:_start():183] Publishing last batch of metrics
+2025-02-26 21:48:44,167 DEBUG   SenderThread:18330 [sender.py:send():379] send: stats
+2025-02-26 21:48:45,087 INFO    Thread-12 :18330 [dir_watcher.py:_on_file_modified():288] file/dir modified: /home/shruti/workspaces/aerial_gym_ws/src/aerial_gym_simulator/aerial_gym/rl_training/rl_games/wandb/run-20250226_214839-qrgr4a01/files/output.log
+2025-02-26 21:48:45,152 INFO    MainThread:18330 [internal.py:handle_exit():76] Internal process exited
diff --git a/aerial_gym/rl_training/rl_games/wandb/run-20250226_214839-qrgr4a01/logs/debug.log b/aerial_gym/rl_training/rl_games/wandb/run-20250226_214839-qrgr4a01/logs/debug.log
new file mode 100644
index 0000000..29e71fd
--- /dev/null
+++ b/aerial_gym/rl_training/rl_games/wandb/run-20250226_214839-qrgr4a01/logs/debug.log
@@ -0,0 +1,28 @@
+2025-02-26 21:48:39,783 INFO    MainThread:18268 [wandb_setup.py:_flush():76] Current SDK version is 0.16.6
+2025-02-26 21:48:39,783 INFO    MainThread:18268 [wandb_setup.py:_flush():76] Configure stats pid to 18268
+2025-02-26 21:48:39,783 INFO    MainThread:18268 [wandb_setup.py:_flush():76] Loading settings from /home/shruti/.config/wandb/settings
+2025-02-26 21:48:39,783 INFO    MainThread:18268 [wandb_setup.py:_flush():76] Loading settings from /home/shruti/workspaces/aerial_gym_ws/src/aerial_gym_simulator/aerial_gym/rl_training/rl_games/wandb/settings
+2025-02-26 21:48:39,783 INFO    MainThread:18268 [wandb_setup.py:_flush():76] Loading settings from environment variables: {}
+2025-02-26 21:48:39,783 INFO    MainThread:18268 [wandb_setup.py:_flush():76] Applying setup settings: {'_disable_service': False}
+2025-02-26 21:48:39,783 INFO    MainThread:18268 [wandb_setup.py:_flush():76] Inferring run settings from compute environment: {'program_relpath': 'aerial_gym/rl_training/rl_games/runner.py', 'program_abspath': '/home/shruti/workspaces/aerial_gym_ws/src/aerial_gym_simulator/aerial_gym/rl_training/rl_games/runner.py', 'program': 'runner.py'}
+2025-02-26 21:48:39,783 INFO    MainThread:18268 [wandb_setup.py:_flush():76] Applying login settings: {}
+2025-02-26 21:48:39,783 INFO    MainThread:18268 [wandb_init.py:_log_setup():521] Logging user logs to /home/shruti/workspaces/aerial_gym_ws/src/aerial_gym_simulator/aerial_gym/rl_training/rl_games/wandb/run-20250226_214839-qrgr4a01/logs/debug.log
+2025-02-26 21:48:39,783 INFO    MainThread:18268 [wandb_init.py:_log_setup():522] Logging internal logs to /home/shruti/workspaces/aerial_gym_ws/src/aerial_gym_simulator/aerial_gym/rl_training/rl_games/wandb/run-20250226_214839-qrgr4a01/logs/debug-internal.log
+2025-02-26 21:48:39,783 INFO    MainThread:18268 [wandb_init.py:init():561] calling init triggers
+2025-02-26 21:48:39,783 INFO    MainThread:18268 [wandb_init.py:init():568] wandb.init called with sweep_config: {}
+config: {'params': {'seed': 10, 'algo': {'name': 'a2c_continuous'}, 'model': {'name': 'continuous_a2c_logstd'}, 'load_checkpoint': False, 'network': {'name': 'actor_critic', 'separate': False, 'space': {'continuous': {'mu_activation': 'None', 'sigma_activation': 'None', 'mu_init': {'name': 'default'}, 'sigma_init': {'name': 'const_initializer', 'val': 0}, 'fixed_sigma': True}}, 'mlp': {'units': [256, 128, 64], 'd2rl': False, 'activation': 'elu', 'initializer': {'name': 'default', 'scale': 2}}}, 'config': {'env_name': 'navigation_task', 'env_config': {'num_envs': 16, 'headless': False, 'use_warp': True}, 'name': 'gen_ppo', 'reward_shaper': {'scale_value': 0.1}, 'normalize_advantage': True, 'gamma': 0.98, 'tau': 0.95, 'ppo': True, 'learning_rate': '1e-4', 'lr_schedule': 'adaptive', 'kl_threshold': 0.016, 'save_best_after': 10, 'score_to_win': 100000, 'grad_norm': 1.0, 'entropy_coef': 0, 'truncate_grads': True, 'e_clip': 0.2, 'clip_value': False, 'num_actors': 16, 'horizon_length': 32, 'minibatch_size': 2048, 'mini_epochs': 4, 'critic_coef': 2, 'normalize_input': True, 'bounds_loss_coef': 0.0001, 'max_epochs': 500, 'normalize_value': True, 'use_diagnostics': True, 'value_bootstrap': True, 'use_smooth_clamp': False, 'player': {'use_vecenv': True}}}}
+2025-02-26 21:48:39,783 INFO    MainThread:18268 [wandb_init.py:init():611] starting backend
+2025-02-26 21:48:39,783 INFO    MainThread:18268 [wandb_init.py:init():615] setting up manager
+2025-02-26 21:48:39,784 INFO    MainThread:18268 [backend.py:_multiprocessing_setup():105] multiprocessing start_methods=fork,spawn,forkserver, using: spawn
+2025-02-26 21:48:39,784 INFO    MainThread:18268 [wandb_init.py:init():623] backend started and connected
+2025-02-26 21:48:39,788 INFO    MainThread:18268 [wandb_init.py:init():715] updated telemetry
+2025-02-26 21:48:39,807 INFO    MainThread:18268 [wandb_init.py:init():748] communicating run to backend with 90.0 second timeout
+2025-02-26 21:48:40,091 INFO    MainThread:18268 [wandb_run.py:_on_init():2357] communicating current version
+2025-02-26 21:48:40,146 INFO    MainThread:18268 [wandb_run.py:_on_init():2366] got version response upgrade_message: "wandb version 0.19.7 is available!  To upgrade, please run:\n $ pip install wandb --upgrade"
+
+2025-02-26 21:48:40,147 INFO    MainThread:18268 [wandb_init.py:init():799] starting run threads in backend
+2025-02-26 21:48:42,038 INFO    MainThread:18268 [wandb_run.py:_console_start():2335] atexit reg
+2025-02-26 21:48:42,038 INFO    MainThread:18268 [wandb_run.py:_redirect():2190] redirect: wrap_raw
+2025-02-26 21:48:42,038 INFO    MainThread:18268 [wandb_run.py:_redirect():2255] Wrapping output streams.
+2025-02-26 21:48:42,038 INFO    MainThread:18268 [wandb_run.py:_redirect():2280] Redirects installed.
+2025-02-26 21:48:42,039 INFO    MainThread:18268 [wandb_init.py:init():842] run started, returning control to user process
diff --git a/aerial_gym/rl_training/rl_games/wandb/run-20250226_214839-qrgr4a01/run-qrgr4a01.wandb b/aerial_gym/rl_training/rl_games/wandb/run-20250226_214839-qrgr4a01/run-qrgr4a01.wandb
new file mode 100644
index 0000000..7595d99
Binary files /dev/null and b/aerial_gym/rl_training/rl_games/wandb/run-20250226_214839-qrgr4a01/run-qrgr4a01.wandb differ
diff --git a/aerial_gym/rl_training/rl_games/wandb/run-20250226_214852-m94ohb22/files/code/aerial_gym/rl_training/rl_games/runner.py b/aerial_gym/rl_training/rl_games/wandb/run-20250226_214852-m94ohb22/files/code/aerial_gym/rl_training/rl_games/runner.py
new file mode 100644
index 0000000..bd45a3c
--- /dev/null
+++ b/aerial_gym/rl_training/rl_games/wandb/run-20250226_214852-m94ohb22/files/code/aerial_gym/rl_training/rl_games/runner.py
@@ -0,0 +1,331 @@
+import numpy as np
+import os
+import yaml
+
+
+import isaacgym
+
+
+from aerial_gym.registry.task_registry import task_registry
+from aerial_gym.utils.helpers import parse_arguments
+
+import gym
+from gym import spaces
+from argparse import Namespace
+
+from rl_games.common import env_configurations, vecenv
+
+import torch
+import distutils
+
+os.environ["XLA_PYTHON_CLIENT_PREALLOCATE"] = "false"
+# import warnings
+# warnings.filterwarnings("error")
+
+
+class ExtractObsWrapper(gym.Wrapper):
+    def __init__(self, env):
+        super().__init__(env)
+
+    def reset(self, **kwargs):
+        observations, *_ = super().reset(**kwargs)
+        return observations["observations"]
+
+    def step(self, action):
+        observations, rewards, terminated, truncated, infos = super().step(action)
+
+        dones = torch.where(
+            terminated | truncated,
+            torch.ones_like(terminated),
+            torch.zeros_like(terminated),
+        )
+
+        return (
+            observations["observations"],
+            rewards,
+            dones,
+            infos,
+        )
+
+
+class AERIALRLGPUEnv(vecenv.IVecEnv):
+    def __init__(self, config_name, num_actors, **kwargs):
+        self.env = env_configurations.configurations[config_name]["env_creator"](**kwargs)
+        self.env = ExtractObsWrapper(self.env)
+
+    def step(self, actions):
+        return self.env.step(actions)
+
+    def reset(self):
+        return self.env.reset()
+
+    def reset_done(self):
+        return self.env.reset_done()
+
+    def get_number_of_agents(self):
+        return self.env.get_number_of_agents()
+
+    def get_env_info(self):
+        info = {}
+        info["action_space"] = spaces.Box(
+            -np.ones(self.env.task_config.action_space_dim),
+            np.ones(self.env.task_config.action_space_dim),
+        )
+        info["observation_space"] = spaces.Box(
+            np.ones(self.env.task_config.observation_space_dim) * -np.Inf,
+            np.ones(self.env.task_config.observation_space_dim) * np.Inf,
+        )
+        print(info["action_space"], info["observation_space"])
+        return info
+
+
+env_configurations.register(
+    "position_setpoint_task",
+    {
+        "env_creator": lambda **kwargs: task_registry.make_task("position_setpoint_task", **kwargs),
+        "vecenv_type": "AERIAL-RLGPU",
+    },
+)
+
+env_configurations.register(
+    "position_setpoint_task_sim2real",
+    {
+        "env_creator": lambda **kwargs: task_registry.make_task(
+            "position_setpoint_task_sim2real", **kwargs
+        ),
+        "vecenv_type": "AERIAL-RLGPU",
+    },
+)
+
+env_configurations.register(
+    "position_setpoint_task_acceleration_sim2real",
+    {
+        "env_creator": lambda **kwargs: task_registry.make_task(
+            "position_setpoint_task_acceleration_sim2real", **kwargs
+        ),
+        "vecenv_type": "AERIAL-RLGPU",
+    },
+)
+
+env_configurations.register(
+    "navigation_task",
+    {
+        "env_creator": lambda **kwargs: task_registry.make_task("navigation_task", **kwargs),
+        "vecenv_type": "AERIAL-RLGPU",
+    },
+)
+
+env_configurations.register(
+    "position_setpoint_task_reconfigurable",
+    {
+        "env_creator": lambda **kwargs: task_registry.make_task(
+            "position_setpoint_task_reconfigurable", **kwargs
+        ),
+        "vecenv_type": "AERIAL-RLGPU",
+    },
+)
+
+env_configurations.register(
+    "position_setpoint_task_morphy",
+    {
+        "env_creator": lambda **kwargs: task_registry.make_task(
+            "position_setpoint_task_morphy", **kwargs
+        ),
+        "vecenv_type": "AERIAL-RLGPU",
+    },
+)
+
+env_configurations.register(
+    "position_setpoint_task_sim2real_end_to_end",
+    {
+        "env_creator": lambda **kwargs: task_registry.make_task(
+            "position_setpoint_task_sim2real_end_to_end", **kwargs
+        ),
+        "vecenv_type": "AERIAL-RLGPU",
+    },
+)
+
+vecenv.register(
+    "AERIAL-RLGPU",
+    lambda config_name, num_actors, **kwargs: AERIALRLGPUEnv(config_name, num_actors, **kwargs),
+)
+
+
+def get_args():
+    from isaacgym import gymutil
+
+    custom_parameters = [
+        {
+            "name": "--seed",
+            "type": int,
+            "default": 0,
+            "required": False,
+            "help": "Random seed, if larger than 0 will overwrite the value in yaml config.",
+        },
+        {
+            "name": "--tf",
+            "required": False,
+            "help": "run tensorflow runner",
+            "action": "store_true",
+        },
+        {
+            "name": "--train",
+            "required": False,
+            "help": "train network",
+            "action": "store_true",
+        },
+        {
+            "name": "--play",
+            "required": False,
+            "help": "play(test) network",
+            "action": "store_true",
+        },
+        {
+            "name": "--checkpoint",
+            "type": str,
+            "required": False,
+            "help": "path to checkpoint",
+        },
+        {
+            "name": "--file",
+            "type": str,
+            "default": "ppo_aerial_quad.yaml",
+            "required": False,
+            "help": "path to config",
+        },
+        {
+            "name": "--num_envs",
+            "type": int,
+            "default": "1024",
+            "help": "Number of environments to create. Overrides config file if provided.",
+        },
+        {
+            "name": "--sigma",
+            "type": float,
+            "required": False,
+            "help": "sets new sigma value in case if 'fixed_sigma: True' in yaml config",
+        },
+        {
+            "name": "--track",
+            "action": "store_true",
+            "help": "if toggled, this experiment will be tracked with Weights and Biases",
+        },
+        {
+            "name": "--wandb-project-name",
+            "type": str,
+            "default": "rl_games",
+            "help": "the wandb's project name",
+        },
+        {
+            "name": "--wandb-entity",
+            "type": str,
+            "default": None,
+            "help": "the entity (team) of wandb's project",
+        },
+        {
+            "name": "--task",
+            "type": str,
+            "default": "navigation_task",
+            "help": "Override task from config file if provided.",
+        },
+        {
+            "name": "--experiment_name",
+            "type": str,
+            "help": "Name of the experiment to run or load. Overrides config file if provided.",
+        },
+        {
+            "name": "--headless",
+            "type": lambda x: bool(distutils.util.strtobool(x)),
+            "default": "False",
+            "help": "Force display off at all times",
+        },
+        {
+            "name": "--horovod",
+            "action": "store_true",
+            "default": False,
+            "help": "Use horovod for multi-gpu training",
+        },
+        {
+            "name": "--rl_device",
+            "type": str,
+            "default": "cuda:0",
+            "help": "Device used by the RL algorithm, (cpu, gpu, cuda:0, cuda:1 etc..)",
+        },
+        {
+            "name": "--use_warp",
+            "type": lambda x: bool(distutils.util.strtobool(x)),
+            "default": "True",
+            "help": "Choose whether to use warp or Isaac Gym rendering pipeline.",
+        },
+    ]
+
+    # parse arguments
+    args = parse_arguments(description="RL Policy", custom_parameters=custom_parameters)
+
+    # name allignment
+    args.sim_device_id = args.compute_device_id
+    args.sim_device = args.sim_device_type
+    if args.sim_device == "cuda":
+        args.sim_device += f":{args.sim_device_id}"
+    return args
+
+
+def update_config(config, args):
+
+    if args["task"] is not None:
+        config["params"]["config"]["env_name"] = args["task"]
+    if args["experiment_name"] is not None:
+        config["params"]["config"]["name"] = args["experiment_name"]
+    config["params"]["config"]["env_config"]["headless"] = args["headless"]
+    config["params"]["config"]["env_config"]["num_envs"] = args["num_envs"]
+    config["params"]["config"]["env_config"]["use_warp"] = args["use_warp"]
+    if args["num_envs"] > 0:
+        config["params"]["config"]["num_actors"] = args["num_envs"]
+        # config['params']['config']['num_envs'] = args['num_envs']
+        config["params"]["config"]["env_config"]["num_envs"] = args["num_envs"]
+    if args["seed"] > 0:
+        config["params"]["seed"] = args["seed"]
+        config["params"]["config"]["env_config"]["seed"] = args["seed"]
+
+    config["params"]["config"]["player"] = {"use_vecenv": True}
+    return config
+
+
+if __name__ == "__main__":
+    os.makedirs("nn", exist_ok=True)
+    os.makedirs("runs", exist_ok=True)
+
+    args = vars(get_args())
+
+    config_name = args["file"]
+
+    print("Loading config: ", config_name)
+    with open(config_name, "r") as stream:
+        config = yaml.safe_load(stream)
+
+        config = update_config(config, args)
+
+        from rl_games.torch_runner import Runner
+
+        runner = Runner()
+        try:
+            runner.load(config)
+        except yaml.YAMLError as exc:
+            print(exc)
+
+    rank = int(os.getenv("LOCAL_RANK", "0"))
+    if args["track"] and rank == 0:
+        import wandb
+
+        wandb.init(
+            project=args["wandb_project_name"],
+            entity=args["wandb_entity"],
+            sync_tensorboard=True,
+            config=config,
+            monitor_gym=True,
+            save_code=True,
+        )
+    runner.run(args)
+
+    if args["track"] and rank == 0:
+        wandb.finish()
diff --git a/aerial_gym/rl_training/rl_games/wandb/run-20250226_214852-m94ohb22/files/conda-environment.yaml b/aerial_gym/rl_training/rl_games/wandb/run-20250226_214852-m94ohb22/files/conda-environment.yaml
new file mode 100644
index 0000000..b5e6902
--- /dev/null
+++ b/aerial_gym/rl_training/rl_games/wandb/run-20250226_214852-m94ohb22/files/conda-environment.yaml
@@ -0,0 +1,409 @@
+name: aerialgym
+channels:
+  - pytorch3d
+  - iopath
+  - fvcore
+  - pytorch
+  - nvidia
+  - nvidia/label/cuda-11.8.0
+  - conda-forge
+  - defaults
+  - https://repo.anaconda.com/pkgs/main
+  - https://repo.anaconda.com/pkgs/r
+dependencies:
+  - _libgcc_mutex=0.1=main
+  - _openmp_mutex=5.1=1_gnu
+  - absl-py=2.1.0=pyhd8ed1ab_0
+  - aiohttp=3.7.4.post0=py38h497a2fe_1
+  - antlr-python-runtime=4.9.3=pyhd8ed1ab_1
+  - anyio=4.5.0=pyhd8ed1ab_0
+  - appdirs=1.4.4=pyh9f0ad1d_0
+  - argon2-cffi=23.1.0=pyhd8ed1ab_0
+  - argon2-cffi-bindings=21.2.0=py38h01eb140_4
+  - arrow=1.3.0=pyhd8ed1ab_0
+  - asttokens=3.0.0=pyhd8ed1ab_0
+  - async-lru=2.0.4=pyhd8ed1ab_0
+  - async-timeout=3.0.1=py_1000
+  - attrs=24.2.0=pyh71513ae_0
+  - babel=2.16.0=pyhd8ed1ab_0
+  - backcall=0.2.0=pyh9f0ad1d_0
+  - beautifulsoup4=4.12.3=pyha770c72_0
+  - blas=1.0=mkl
+  - bleach=6.1.0=pyhd8ed1ab_0
+  - blinker=1.8.2=pyhd8ed1ab_0
+  - brotli=1.1.0=hb9d3cd8_2
+  - brotli-bin=1.1.0=hb9d3cd8_2
+  - brotli-python=1.0.9=py38hfa26641_7
+  - bullet-cpp=3.21=h43a58ef_1
+  - bzip2=1.0.8=h5eee18b_6
+  - c-ares=1.19.1=h5eee18b_0
+  - ca-certificates=2025.2.25=h06a4308_0
+  - cached-property=1.5.2=hd8ed1ab_1
+  - cached_property=1.5.2=pyha770c72_1
+  - cachetools=5.5.0=pyhd8ed1ab_0
+  - certifi=2024.8.30=pyhd8ed1ab_0
+  - cffi=1.15.0=py38h3931269_0
+  - chardet=4.0.0=py38h578d9bd_3
+  - charset-normalizer=3.4.0=pyhd8ed1ab_0
+  - click=8.1.7=unix_pyh707e725_0
+  - colorama=0.4.6=pyhd8ed1ab_0
+  - comm=0.2.2=pyhd8ed1ab_0
+  - cryptography=43.0.0=py38hdda0065_0
+  - cuda=11.8.0=0
+  - cuda-cccl=11.8.89=0
+  - cuda-command-line-tools=11.8.0=0
+  - cuda-compiler=11.8.0=0
+  - cuda-cudart=11.8.89=0
+  - cuda-cudart-dev=11.8.89=0
+  - cuda-cuobjdump=11.8.86=0
+  - cuda-cupti=11.8.87=0
+  - cuda-cuxxfilt=11.8.86=0
+  - cuda-demo-suite=11.8.86=0
+  - cuda-documentation=11.8.86=0
+  - cuda-driver-dev=11.8.89=0
+  - cuda-gdb=11.8.86=0
+  - cuda-libraries=11.8.0=0
+  - cuda-libraries-dev=11.8.0=0
+  - cuda-memcheck=11.8.86=0
+  - cuda-nsight=11.8.86=0
+  - cuda-nsight-compute=11.8.0=0
+  - cuda-nvcc=11.8.89=0
+  - cuda-nvdisasm=11.8.86=0
+  - cuda-nvml-dev=11.8.86=0
+  - cuda-nvprof=11.8.87=0
+  - cuda-nvprune=11.8.86=0
+  - cuda-nvrtc=11.8.89=0
+  - cuda-nvrtc-dev=11.8.89=0
+  - cuda-nvtx=11.8.86=0
+  - cuda-nvvp=11.8.87=0
+  - cuda-opencl=12.4.127=0
+  - cuda-profiler-api=11.8.86=0
+  - cuda-runtime=11.8.0=0
+  - cuda-sanitizer-api=11.8.86=0
+  - cuda-toolkit=11.8.0=0
+  - cuda-tools=11.8.0=0
+  - cuda-visual-tools=11.8.0=0
+  - cycler=0.12.1=pyhd8ed1ab_0
+  - dbus=1.13.18=hb2f20db_0
+  - debugpy=1.6.7=py38h6a678d5_0
+  - defusedxml=0.7.1=pyhd8ed1ab_0
+  - dill=0.3.9=pyhd8ed1ab_0
+  - docker-pycreds=0.4.0=py_0
+  - entrypoints=0.4=pyhd8ed1ab_0
+  - exceptiongroup=1.2.2=pyhd8ed1ab_0
+  - executing=2.1.0=pyhd8ed1ab_0
+  - expat=2.6.4=h5888daf_0
+  - fastcache=1.1.0=py38h7b6447c_0
+  - ffmpeg=4.3=hf484d3e_0
+  - filelock=3.13.1=py38h06a4308_0
+  - fontconfig=2.14.0=h8e229c2_0
+  - fqdn=1.5.1=pyhd8ed1ab_0
+  - freetype=2.10.4=h0708190_1
+  - fvcore=0.1.5.post20210915=py38
+  - gds-tools=1.4.0.31=0
+  - geos=3.10.2=h9c3ff4c_0
+  - giflib=5.2.2=h5eee18b_0
+  - glib=2.78.4=h6a678d5_0
+  - glib-tools=2.78.4=h6a678d5_0
+  - gmp=6.3.0=h6a678d5_0
+  - gmpy2=2.1.2=py38heeb90bb_0
+  - gnutls=3.6.15=he1e5248_0
+  - google-auth=2.35.0=pyhff2d567_0
+  - google-auth-oauthlib=1.0.0=pyhd8ed1ab_1
+  - grpcio=1.62.2=py38h6a678d5_0
+  - gst-plugins-base=1.14.1=h6a678d5_1
+  - gstreamer=1.14.1=h5eee18b_1
+  - gym-notices=0.0.8=pyhd8ed1ab_0
+  - h11=0.14.0=pyhd8ed1ab_0
+  - h2=4.1.0=pyhd8ed1ab_0
+  - hpack=4.0.0=pyh9f0ad1d_0
+  - httpcore=1.0.7=pyh29332c3_1
+  - httpx=0.27.2=pyhd8ed1ab_0
+  - hyperframe=6.0.1=pyhd8ed1ab_0
+  - icu=58.2=hf484d3e_1000
+  - idna=3.10=pyhd8ed1ab_0
+  - importlib-metadata=8.5.0=pyha770c72_0
+  - importlib_metadata=8.5.0=hd8ed1ab_1
+  - importlib_resources=6.4.5=pyhd8ed1ab_0
+  - intel-openmp=2021.4.0=h06a4308_3561
+  - iopath=0.1.9=py38
+  - ipykernel=6.29.5=pyh3099207_0
+  - ipython=8.12.2=pyh41d4057_0
+  - ipywidgets=8.1.5=pyhd8ed1ab_0
+  - isoduration=20.11.0=pyhd8ed1ab_0
+  - jbig=2.1=h7f98852_2003
+  - jedi=0.19.1=pyhd8ed1ab_0
+  - jinja2=3.1.4=pyhd8ed1ab_0
+  - jpeg=9e=h166bdaf_1
+  - json5=0.9.25=pyhd8ed1ab_0
+  - jsonpointer=3.0.0=py38h578d9bd_0
+  - jsonschema=4.23.0=pyhd8ed1ab_0
+  - jsonschema-specifications=2024.10.1=pyhd8ed1ab_0
+  - jsonschema-with-format-nongpl=4.23.0=hd8ed1ab_1
+  - jupyter=1.1.1=pyhd8ed1ab_0
+  - jupyter-lsp=2.2.5=pyhd8ed1ab_0
+  - jupyter_client=8.6.3=pyhd8ed1ab_0
+  - jupyter_console=6.6.3=pyhd8ed1ab_0
+  - jupyter_core=5.7.2=pyh31011fe_1
+  - jupyter_events=0.10.0=pyhd8ed1ab_0
+  - jupyter_server=2.14.2=pyhd8ed1ab_0
+  - jupyter_server_terminals=0.5.3=pyhd8ed1ab_0
+  - jupyterlab=4.2.5=pyhd8ed1ab_0
+  - jupyterlab_pygments=0.3.0=pyhd8ed1ab_1
+  - jupyterlab_server=2.27.3=pyhd8ed1ab_0
+  - jupyterlab_widgets=3.0.13=pyhd8ed1ab_0
+  - krb5=1.20.1=h143b758_1
+  - lame=3.100=h7b6447c_0
+  - lcms2=2.12=hddcbb42_0
+  - ld_impl_linux-64=2.40=h12ee557_0
+  - lerc=2.2.1=h9c3ff4c_0
+  - libabseil=20240116.2=cxx17_h6a678d5_0
+  - libblas=3.9.0=12_linux64_mkl
+  - libbrotlicommon=1.1.0=hb9d3cd8_2
+  - libbrotlidec=1.1.0=hb9d3cd8_2
+  - libbrotlienc=1.1.0=hb9d3cd8_2
+  - libcblas=3.9.0=12_linux64_mkl
+  - libclang=10.0.1=default_hde54327_1
+  - libcublas=11.11.3.6=0
+  - libcublas-dev=11.11.3.6=0
+  - libcufft=10.9.0.58=0
+  - libcufft-dev=10.9.0.58=0
+  - libcufile=1.9.1.3=0
+  - libcufile-dev=1.4.0.31=0
+  - libcurand=10.3.5.147=0
+  - libcurand-dev=10.3.0.86=0
+  - libcusolver=11.4.1.48=0
+  - libcusolver-dev=11.4.1.48=0
+  - libcusparse=11.7.5.86=0
+  - libcusparse-dev=11.7.5.86=0
+  - libdeflate=1.7=h7f98852_5
+  - libedit=3.1.20230828=h5eee18b_0
+  - libevent=2.1.12=hf998b51_1
+  - libexpat=2.6.4=h5888daf_0
+  - libffi=3.4.4=h6a678d5_1
+  - libgcc=14.2.0=h767d61c_2
+  - libgcc-ng=14.2.0=h69a702a_2
+  - libgfortran-ng=13.2.0=h69a702a_0
+  - libgfortran5=13.2.0=ha4646dd_0
+  - libglib=2.78.4=hdc74915_0
+  - libgomp=14.2.0=h767d61c_2
+  - libgrpc=1.62.2=h2d74bed_0
+  - libiconv=1.16=h5eee18b_3
+  - libidn2=2.3.4=h5eee18b_0
+  - libjpeg-turbo=2.0.0=h9bf148f_0
+  - liblapack=3.9.0=12_linux64_mkl
+  - libllvm10=10.0.1=he513fc3_3
+  - libnpp=11.8.0.86=0
+  - libnpp-dev=11.8.0.86=0
+  - libnvfatbin=12.4.127=0
+  - libnvjitlink=12.4.127=0
+  - libnvjpeg=11.9.0.86=0
+  - libnvjpeg-dev=11.9.0.86=0
+  - libopenblas=0.3.21=h043d6bf_0
+  - libpng=1.6.37=h21135ba_2
+  - libpq=12.20=hdbd6064_0
+  - libprotobuf=4.25.3=he621ea3_0
+  - libsodium=1.0.18=h36c2ea0_1
+  - libstdcxx=14.2.0=h8f9b012_2
+  - libstdcxx-ng=11.2.0=h1234567_1
+  - libtasn1=4.19.0=h5eee18b_0
+  - libtiff=4.3.0=hf544144_1
+  - libunistring=0.9.10=h27cfd23_0
+  - libuuid=2.38.1=h0b41bf4_0
+  - libwebp=1.2.2=h55f646e_0
+  - libwebp-base=1.2.2=h7f98852_1
+  - libxcb=1.17.0=h8a09558_0
+  - libxkbcommon=1.0.3=he3ba5ed_0
+  - libxml2=2.9.14=h74e7548_0
+  - llvm-openmp=14.0.6=h9e868ea_0
+  - lz4-c=1.9.4=h6a678d5_1
+  - markdown=3.6=pyhd8ed1ab_0
+  - markupsafe=2.1.1=py38h0a891b7_1
+  - matplotlib-base=3.7.2=py38h1128e8f_0
+  - matplotlib-inline=0.1.7=pyhd8ed1ab_0
+  - metis=5.1.0=hd0bcaf9_1007
+  - mistune=3.0.2=pyhd8ed1ab_0
+  - mkl=2021.4.0=h06a4308_640
+  - mkl-service=2.4.0=py38h7f8727e_0
+  - mkl_fft=1.3.1=py38hd3c417c_0
+  - mkl_random=1.2.2=py38h51133e4_0
+  - mpc=1.3.1=h5eee18b_0
+  - mpfr=4.2.1=h90cbb55_3
+  - mpmath=1.3.0=py38h06a4308_0
+  - multidict=6.0.2=py38h0a891b7_1
+  - munkres=1.1.4=pyh9f0ad1d_0
+  - nbclient=0.10.2=pyhd8ed1ab_0
+  - nbconvert-core=7.16.4=pyhff2d567_2
+  - nbformat=5.10.4=pyhd8ed1ab_0
+  - ncurses=6.4=h6a678d5_0
+  - nest-asyncio=1.6.0=pyhd8ed1ab_0
+  - nettle=3.7.3=hbbd107a_1
+  - ninja-base=1.12.1=hdb19cb5_0
+  - notebook=7.2.2=pyhd8ed1ab_0
+  - notebook-shim=0.2.4=pyhd8ed1ab_0
+  - nsight-compute=2022.3.0.22=0
+  - nspr=4.36=h5888daf_0
+  - nss=3.89.1=h6a678d5_0
+  - oauthlib=3.2.2=pyhd8ed1ab_0
+  - olefile=0.47=pyhd8ed1ab_0
+  - omegaconf=2.3.0=pyhd8ed1ab_0
+  - openh264=2.1.1=h4ff587b_0
+  - openjpeg=2.4.0=hb52868f_1
+  - openssl=3.4.1=h7b32b05_0
+  - overrides=7.7.0=pyhd8ed1ab_0
+  - packaging=24.2=pyhd8ed1ab_2
+  - pandas=1.4.2=py38h47df419_1
+  - pandocfilters=1.5.0=pyhd8ed1ab_0
+  - parso=0.8.4=pyhd8ed1ab_0
+  - pcre2=10.42=hebb0a14_1
+  - pexpect=4.9.0=pyhd8ed1ab_0
+  - pickleshare=0.7.5=py_1003
+  - pillow=9.4.0=py38h6a678d5_0
+  - pip=24.2=py38h06a4308_0
+  - pkgutil-resolve-name=1.3.10=pyhd8ed1ab_1
+  - platformdirs=4.3.6=pyhd8ed1ab_0
+  - plotly=5.24.1=pyhd8ed1ab_0
+  - portalocker=2.10.1=py38h578d9bd_0
+  - prometheus_client=0.21.0=pyhd8ed1ab_0
+  - prompt-toolkit=3.0.48=pyha770c72_0
+  - prompt_toolkit=3.0.48=hd8ed1ab_1
+  - pthread-stubs=0.4=hb9d3cd8_1002
+  - ptyprocess=0.7.0=pyhd3deb0d_0
+  - pure_eval=0.2.3=pyhd8ed1ab_0
+  - pyasn1=0.6.1=pyhd8ed1ab_1
+  - pyasn1-modules=0.4.1=pyhd8ed1ab_0
+  - pybullet=3.21=py38h43a58ef_1
+  - pycparser=2.22=pyhd8ed1ab_0
+  - pygments=2.18.0=pyhd8ed1ab_0
+  - pyjwt=2.9.0=pyhd8ed1ab_1
+  - pyopenssl=24.2.1=pyhd8ed1ab_2
+  - pyqt=5.15.4=py38hfa26641_0
+  - pyqt5-sip=12.9.0=py38hfa26641_0
+  - pysocks=1.7.1=pyha2e5f31_6
+  - python=3.8.20=he870216_0
+  - python-fastjsonschema=2.20.0=pyhd8ed1ab_0
+  - python-json-logger=2.0.7=pyhd8ed1ab_0
+  - python_abi=3.8=2_cp38
+  - pytorch=2.2.0=py3.8_cuda11.8_cudnn8.7.0_0
+  - pytorch-cuda=11.8=h7e8668a_6
+  - pytorch-mutex=1.0=cuda
+  - pytorch3d=0.7.8=py38_cu118_pyt220
+  - pytz=2024.2=pyhd8ed1ab_0
+  - pyu2f=0.1.5=pyhd8ed1ab_0
+  - pyyaml=6.0=py38h0a891b7_5
+  - pyzmq=25.1.2=py38h6a678d5_0
+  - qt-main=5.15.2=h327a75a_7
+  - re2=2022.04.01=h27087fc_0
+  - readline=8.2=h5eee18b_0
+  - referencing=0.35.1=pyhd8ed1ab_0
+  - requests=2.32.3=pyhd8ed1ab_0
+  - requests-oauthlib=2.0.0=pyhd8ed1ab_0
+  - rfc3339-validator=0.1.4=pyhd8ed1ab_0
+  - rfc3986-validator=0.1.1=pyh9f0ad1d_0
+  - rpds-py=0.20.0=py38h4005ec7_0
+  - rsa=4.9=pyhd8ed1ab_0
+  - send2trash=1.8.3=pyh0d859eb_0
+  - setuptools=75.1.0=py38h06a4308_0
+  - shapely=1.8.2=py38h97f7145_1
+  - sip=6.5.1=py38h709712a_2
+  - six=1.16.0=pyh6c4a22f_0
+  - sniffio=1.3.1=pyhd8ed1ab_0
+  - soupsieve=2.5=pyhd8ed1ab_1
+  - sqlite=3.45.3=h5eee18b_0
+  - stack_data=0.6.2=pyhd8ed1ab_0
+  - suitesparse=5.10.1=h9e50725_1
+  - sympy=1.5.1=py38_0
+  - tabulate=0.9.0=pyhd8ed1ab_1
+  - tbb=2021.5.0=h924138e_1
+  - tenacity=9.0.0=pyhd8ed1ab_0
+  - tensorboard=2.13.0=pyhd8ed1ab_0
+  - tensorboard-data-server=0.7.0=py38h52d8a92_1
+  - termcolor=2.4.0=pyhd8ed1ab_0
+  - terminado=0.18.1=pyh0d859eb_0
+  - tinycss2=1.4.0=pyhd8ed1ab_0
+  - tk=8.6.14=h39e8969_0
+  - toml=0.10.2=pyhd8ed1ab_0
+  - tomli=2.0.2=pyhd8ed1ab_0
+  - torchaudio=2.2.0=py38_cu118
+  - torchtriton=2.2.0=py38
+  - torchvision=0.17.0=py38_cu118
+  - tornado=6.4.1=py38hfb59056_0
+  - tqdm=4.67.1=pyhd8ed1ab_0
+  - traitlets=5.14.3=pyhd8ed1ab_0
+  - types-python-dateutil=2.9.0.20241003=pyhff2d567_0
+  - typing-extensions=4.12.2=hd8ed1ab_0
+  - typing_extensions=4.12.2=pyha770c72_0
+  - typing_utils=0.1.0=pyhd8ed1ab_0
+  - unicodedata2=15.1.0=py38h01eb140_0
+  - uri-template=1.3.0=pyhd8ed1ab_0
+  - urllib3=2.2.3=pyhd8ed1ab_0
+  - wcwidth=0.2.13=pyhd8ed1ab_0
+  - webcolors=24.8.0=pyhd8ed1ab_0
+  - webencodings=0.5.1=pyhd8ed1ab_2
+  - websocket-client=1.8.0=pyhd8ed1ab_0
+  - werkzeug=3.0.6=pyhd8ed1ab_0
+  - wheel=0.44.0=py38h06a4308_0
+  - widgetsnbextension=4.0.13=pyhd8ed1ab_0
+  - xorg-libx11=1.8.11=h4f16b4b_0
+  - xorg-libxau=1.0.12=hb9d3cd8_0
+  - xorg-libxdmcp=1.1.5=hb9d3cd8_0
+  - xorg-libxext=1.3.6=hb9d3cd8_0
+  - xz=5.6.4=h5eee18b_1
+  - yacs=0.1.8=pyhd8ed1ab_0
+  - yaml=0.2.5=h7f98852_2
+  - yarl=1.7.2=py38h0a891b7_2
+  - zeromq=4.3.5=h6a678d5_0
+  - zipp=3.21.0=pyhd8ed1ab_0
+  - zlib=1.2.13=h5eee18b_1
+  - zstandard=0.23.0=py38h2c38b39_0
+  - zstd=1.5.6=hc292b87_0
+  - pip:
+      - aerial-gym==2.0.0
+      - cloudpickle==3.1.1
+      - colorlog==6.9.0
+      - contourpy==1.1.1
+      - cython==3.0.12
+      - decorator==5.2.1
+      - farama-notifications==0.0.4
+      - faster-fifo==1.4.7
+      - fonttools==4.56.0
+      - freetype-py==2.5.1
+      - fsspec==2025.2.0
+      - gitdb==4.0.12
+      - gitpython==3.1.44
+      - gym==0.23.1
+      - gymnasium==0.29.1
+      - huggingface-hub==0.29.1
+      - imageio==2.35.1
+      - kiwisolver==1.4.7
+      - lxml==5.3.1
+      - matplotlib==3.7.5
+      - networkx==2.2
+      - ninja==1.11.1.3
+      - numpy==1.23.0
+      - opencv-python==4.11.0.86
+      - pathtools==0.1.2
+      - promise==2.3
+      - protobuf==3.20.3
+      - psutil==5.9.8
+      - pycollada==0.6
+      - pygame==2.1.0
+      - pyglet==2.1.3
+      - pyopengl==3.1.0
+      - pyparsing==3.1.4
+      - pyrender==0.1.45
+      - python-dateutil==2.9.0.post0
+      - rl-games==1.6.1
+      - sample-factory==2.1.1
+      - scipy==1.10.1
+      - sentry-sdk==2.22.0
+      - setproctitle==1.3.5
+      - shortuuid==1.0.13
+      - signal-slot-mp==1.0.5
+      - smmap==5.0.2
+      - tensorboardx==2.6.2.2
+      - threadpoolctl==3.5.0
+      - trimesh==4.6.3
+      - wandb==0.12.21
+      - warp-lang==1.0.0b5
+prefix: /home/shruti/miniconda3/envs/aerialgym
diff --git a/aerial_gym/rl_training/rl_games/wandb/run-20250226_214852-m94ohb22/files/config.yaml b/aerial_gym/rl_training/rl_games/wandb/run-20250226_214852-m94ohb22/files/config.yaml
new file mode 100644
index 0000000..2bdcf32
--- /dev/null
+++ b/aerial_gym/rl_training/rl_games/wandb/run-20250226_214852-m94ohb22/files/config.yaml
@@ -0,0 +1,94 @@
+wandb_version: 1
+
+params:
+  desc: null
+  value:
+    seed: 10
+    algo:
+      name: a2c_continuous
+    model:
+      name: continuous_a2c_logstd
+    load_checkpoint: false
+    network:
+      name: actor_critic
+      separate: false
+      space:
+        continuous:
+          mu_activation: None
+          sigma_activation: None
+          mu_init:
+            name: default
+          sigma_init:
+            name: const_initializer
+            val: 0
+          fixed_sigma: true
+      mlp:
+        units:
+        - 256
+        - 128
+        - 64
+        d2rl: false
+        activation: elu
+        initializer:
+          name: default
+          scale: 2
+    config:
+      env_name: navigation_task
+      env_config:
+        num_envs: 16
+        headless: false
+        use_warp: true
+      name: gen_ppo
+      reward_shaper:
+        scale_value: 0.1
+      normalize_advantage: true
+      gamma: 0.98
+      tau: 0.95
+      ppo: true
+      learning_rate: 1e-4
+      lr_schedule: adaptive
+      kl_threshold: 0.016
+      save_best_after: 10
+      score_to_win: 100000
+      grad_norm: 1.0
+      entropy_coef: 0
+      truncate_grads: true
+      e_clip: 0.2
+      clip_value: false
+      num_actors: 16
+      horizon_length: 32
+      minibatch_size: 2048
+      mini_epochs: 4
+      critic_coef: 2
+      normalize_input: true
+      bounds_loss_coef: 0.0001
+      max_epochs: 500
+      normalize_value: true
+      use_diagnostics: true
+      value_bootstrap: true
+      use_smooth_clamp: false
+      player:
+        use_vecenv: true
+_wandb:
+  desc: null
+  value:
+    code_path: code/aerial_gym/rl_training/rl_games/runner.py
+    python_version: 3.8.20
+    cli_version: 0.16.6
+    framework: torch
+    is_jupyter_run: false
+    is_kaggle_kernel: false
+    start_time: 1740624532.0
+    t:
+      1:
+      - 1
+      - 55
+      3:
+      - 16
+      - 23
+      - 35
+      4: 3.8.20
+      5: 0.16.6
+      8:
+      - 5
+      13: linux-x86_64
diff --git a/aerial_gym/rl_training/rl_games/wandb/run-20250226_214852-m94ohb22/files/diff.patch b/aerial_gym/rl_training/rl_games/wandb/run-20250226_214852-m94ohb22/files/diff.patch
new file mode 100644
index 0000000..a7ff8db
--- /dev/null
+++ b/aerial_gym/rl_training/rl_games/wandb/run-20250226_214852-m94ohb22/files/diff.patch
@@ -0,0 +1,38 @@
+diff --git a/aerial_gym/config/task_config/navigation_task_config.py b/aerial_gym/config/task_config/navigation_task_config.py
+index 7ecbda5..2f838d7 100644
+--- a/aerial_gym/config/task_config/navigation_task_config.py
++++ b/aerial_gym/config/task_config/navigation_task_config.py
+@@ -19,7 +19,7 @@ class task_config:
+     episode_len_steps = 100  # real physics time for simulation is this value multiplied by sim.dt
+ 
+     return_state_before_reset = (
+-        False  # False as usually state is returned for next episode after reset
++        True  # False as usually state is returned for next episode after reset
+     )
+     # user can set the above to true if they so desire
+ 
+diff --git a/aerial_gym/rl_training/rl_games/runner.py b/aerial_gym/rl_training/rl_games/runner.py
+index 7e8ffb4..bd45a3c 100644
+--- a/aerial_gym/rl_training/rl_games/runner.py
++++ b/aerial_gym/rl_training/rl_games/runner.py
+@@ -255,7 +255,7 @@ def get_args():
+             "name": "--use_warp",
+             "type": lambda x: bool(distutils.util.strtobool(x)),
+             "default": "True",
+-            "help": "Choose whether to use warp or Isaac Gym rendeing pipeline.",
++            "help": "Choose whether to use warp or Isaac Gym rendering pipeline.",
+         },
+     ]
+ 
+diff --git a/aerial_gym/task/__init__.py b/aerial_gym/task/__init__.py
+index 7dd966d..7975a4d 100644
+--- a/aerial_gym/task/__init__.py
++++ b/aerial_gym/task/__init__.py
+@@ -95,5 +95,5 @@ task_registry.register_task(
+ 
+ ## Uncomment this to use custom tasks
+ 
+-# from aerial_gym.task.custom_task.custom_task import CustomTask
+-# task_registry.register_task("custom_task", CustomTask, custom_task.task_config)
++#from aerial_gym.task.custom_task.custom_task import CustomTask
++#task_registry.register_task("custom_task", CustomTask, custom_task.task_config)
diff --git a/aerial_gym/rl_training/rl_games/wandb/run-20250226_214852-m94ohb22/files/output.log b/aerial_gym/rl_training/rl_games/wandb/run-20250226_214852-m94ohb22/files/output.log
new file mode 100644
index 0000000..020759e
--- /dev/null
+++ b/aerial_gym/rl_training/rl_games/wandb/run-20250226_214852-m94ohb22/files/output.log
@@ -0,0 +1,57 @@
+Started to play
+[BasePlayer] Creating vecenv:  navigation_task
+[isaacgym:gymutil.py] Unknown args:  ['--file=./ppo_aerial_quad_navigation.yaml', '--play', '--checkpoint=./runs/gen_ppo_26-16-11-42/nn/last_gen_ppo_ep_500_rew__377.14606_.pth', '--track', 'wandb-project-name=Trained_RL_Navigation', 'wandb-entity=shrutiroy03']
+[37m[4610 ms][base_task] - INFO : Setting seed: 3948385287 (base_task.py:38)
+[37m[4610 ms][navigation_task] - INFO : Building environment for navigation task. (navigation_task.py:44)
+[37m[4610 ms][navigation_task] - INFO : Sim Name: base_sim, Env Name: env_with_obstacles, Robot Name: lmf2, Controller Name: lmf2_velocity_control (navigation_task.py:45)
+[37m[4610 ms][env_manager] - INFO : Populating environments. (env_manager.py:73)
+[37m[4610 ms][env_manager] - INFO : Creating simulation instance. (env_manager.py:87)
+[37m[4610 ms][env_manager] - INFO : Instantiating IGE object. (env_manager.py:88)
+[37m[4610 ms][IsaacGymEnvManager] - INFO : Creating Isaac Gym Environment (IGE_env_manager.py:41)
+[37m[4610 ms][IsaacGymEnvManager] - INFO : Acquiring gym object (IGE_env_manager.py:73)
+[37m[4611 ms][IsaacGymEnvManager] - INFO : Acquired gym object (IGE_env_manager.py:75)
+[37m[4611 ms][IsaacGymEnvManager] - INFO : Fixing devices (IGE_env_manager.py:89)
+[37m[4611 ms][IsaacGymEnvManager] - INFO : Using GPU pipeline for simulation. (IGE_env_manager.py:102)
+[37m[4612 ms][IsaacGymEnvManager] - INFO : Sim Device type: cuda, Sim Device ID: 0 (IGE_env_manager.py:105)
+[37m[4612 ms][IsaacGymEnvManager] - INFO : Graphics Device ID: 0 (IGE_env_manager.py:119)
+[37m[4612 ms][IsaacGymEnvManager] - INFO : Creating Isaac Gym Simulation Object (IGE_env_manager.py:120)
+[33m[4612 ms][IsaacGymEnvManager] - WARNING : If you have set the CUDA_VISIBLE_DEVICES environment variable, please ensure that you set it
+[33mto a particular one that works for your system to use the viewer or Isaac Gym cameras.
+[33mIf you want to run parallel simulations on multiple GPUs with camera sensors,
+[33mplease disable Isaac Gym and use warp (by setting use_warp=True), set the viewer to headless. (IGE_env_manager.py:127)
+[33m[4612 ms][IsaacGymEnvManager] - WARNING : If you see a segfault in the next lines, it is because of the discrepancy between the CUDA device and the graphics device.
+[33mPlease ensure that the CUDA device and the graphics device are the same. (IGE_env_manager.py:132)
+[37m[5425 ms][IsaacGymEnvManager] - INFO : Created Isaac Gym Simulation Object (IGE_env_manager.py:136)
+[37m[5425 ms][IsaacGymEnvManager] - INFO : Created Isaac Gym Environment (IGE_env_manager.py:43)
+[37m[5529 ms][env_manager] - INFO : IGE object instantiated. (env_manager.py:109)
+[37m[5529 ms][env_manager] - INFO : Creating warp environment. (env_manager.py:112)
+[37m[5529 ms][env_manager] - INFO : Warp environment created. (env_manager.py:114)
+[37m[5529 ms][env_manager] - INFO : Creating robot manager. (env_manager.py:118)
+[37m[5529 ms][BaseRobot] - INFO : [DONE] Initializing controller (base_robot.py:26)
+[37m[5529 ms][BaseRobot] - INFO : Initializing controller lmf2_velocity_control (base_robot.py:29)
+[33m[5529 ms][base_multirotor] - WARNING : Creating 16 multirotors. (base_multirotor.py:32)
+[37m[5529 ms][env_manager] - INFO : [DONE] Creating robot manager. (env_manager.py:123)
+[37m[5529 ms][env_manager] - INFO : [DONE] Creating simulation instance. (env_manager.py:125)
+[37m[5529 ms][asset_loader] - INFO : Loading asset: model.urdf for the first time. Next use of this asset will be via the asset buffer. (asset_loader.py:71)
+[37m[5530 ms][asset_loader] - INFO : Loading asset: panel.urdf for the first time. Next use of this asset will be via the asset buffer. (asset_loader.py:71)
+[37m[5532 ms][asset_loader] - INFO : Loading asset: 1_x_1_wall.urdf for the first time. Next use of this asset will be via the asset buffer. (asset_loader.py:71)
+[37m[5533 ms][asset_loader] - INFO : Loading asset: cuboidal_rod.urdf for the first time. Next use of this asset will be via the asset buffer. (asset_loader.py:71)
+[37m[5533 ms][asset_loader] - INFO : Loading asset: small_cube.urdf for the first time. Next use of this asset will be via the asset buffer. (asset_loader.py:71)
+[37m[5534 ms][asset_loader] - INFO : Loading asset: left_wall.urdf for the first time. Next use of this asset will be via the asset buffer. (asset_loader.py:71)
+[37m[5535 ms][asset_loader] - INFO : Loading asset: right_wall.urdf for the first time. Next use of this asset will be via the asset buffer. (asset_loader.py:71)
+[37m[5536 ms][asset_loader] - INFO : Loading asset: back_wall.urdf for the first time. Next use of this asset will be via the asset buffer. (asset_loader.py:71)
+[37m[5537 ms][asset_loader] - INFO : Loading asset: front_wall.urdf for the first time. Next use of this asset will be via the asset buffer. (asset_loader.py:71)
+[37m[5537 ms][asset_loader] - INFO : Loading asset: bottom_wall.urdf for the first time. Next use of this asset will be via the asset buffer. (asset_loader.py:71)
+[37m[5538 ms][asset_loader] - INFO : Loading asset: top_wall.urdf for the first time. Next use of this asset will be via the asset buffer. (asset_loader.py:71)
+[37m[5539 ms][asset_loader] - INFO : Loading asset: 0_5_x_0_5_wall.urdf for the first time. Next use of this asset will be via the asset buffer. (asset_loader.py:71)
+[37m[5541 ms][env_manager] - INFO : Populating environment 0 (env_manager.py:179)
+[33m[5636 ms][robot_manager] - WARNING : 
+[33mRobot mass: 1.2400000467896461,
+[33mInertia: tensor([[0.0134, 0.0000, 0.0000],
+[33m        [0.0000, 0.0144, 0.0000],
+[33m        [0.0000, 0.0000, 0.0138]], device='cuda:0'),
+[33mRobot COM: tensor([[0., 0., 0., 1.]], device='cuda:0') (robot_manager.py:427)
+[33m[5637 ms][robot_manager] - WARNING : Calculated robot mass and inertia for this robot. This code assumes that your robot is the same across environments. (robot_manager.py:430)
+[31m[5637 ms][robot_manager] - CRITICAL : If your robot differs across environments you need to perform this computation for each different robot here. (robot_manager.py:433)
+[37m[5656 ms][env_manager] - INFO : [DONE] Populating environments. (env_manager.py:75)
+[33m[5664 ms][IsaacGymEnvManager] - WARNING : Headless: False (IGE_env_manager.py:424)
diff --git a/aerial_gym/rl_training/rl_games/wandb/run-20250226_214852-m94ohb22/files/requirements.txt b/aerial_gym/rl_training/rl_games/wandb/run-20250226_214852-m94ohb22/files/requirements.txt
new file mode 100644
index 0000000..a906a9d
--- /dev/null
+++ b/aerial_gym/rl_training/rl_games/wandb/run-20250226_214852-m94ohb22/files/requirements.txt
@@ -0,0 +1,264 @@
+Brotli==1.0.9
+Cython==3.0.12
+Farama-Notifications==0.0.4
+GitPython==3.1.43
+GitPython==3.1.44
+Jinja2==3.1.4
+Markdown==3.6
+MarkupSafe==2.1.1
+Pillow==9.4.0
+PyJWT==2.9.0
+PyOpenGL==3.1.0
+PyQt5-sip==12.9.0
+PyQt5==5.15.4
+PySocks==1.7.1
+PyYAML==6.0
+Pygments==2.18.0
+Send2Trash==1.8.3
+Shapely==1.8.2
+Werkzeug==3.0.6
+absl-py==2.1.0
+aerial_gym==2.0.0
+aiohttp==3.7.4.post0
+antlr4-python3-runtime==4.9.3
+anyio==4.5.0
+appdirs==1.4.4
+argon2-cffi-bindings==21.2.0
+argon2-cffi==23.1.0
+arrow==1.3.0
+asttokens==3.0.0
+async-lru==2.0.4
+async-timeout==3.0.1
+attrs==24.2.0
+autocommand==2.2.2
+babel==2.16.0
+backcall==0.2.0
+backports.tarfile==1.2.0
+beautifulsoup4==4.12.3
+bleach==6.1.0
+blinker==1.8.2
+cached-property==1.5.2
+cachetools==5.5.0
+certifi==2024.8.30
+cffi==1.15.0
+chardet==4.0.0
+charset-normalizer==3.4.0
+click==8.1.7
+cloudpickle==3.1.0
+cloudpickle==3.1.1
+colorama==0.4.6
+colorlog==6.9.0
+comm==0.2.2
+contourpy==1.0.2
+contourpy==1.1.1
+cryptography==43.0.0
+cycler==0.12.1
+debugpy==1.6.7
+decorator==5.1.1
+decorator==5.2.1
+defusedxml==0.7.1
+dill==0.3.9
+docker-pycreds==0.4.0
+entrypoints==0.4
+exceptiongroup==1.2.2
+executing==2.1.0
+fastcache==1.1.0
+faster-fifo==1.4.7
+fastjsonschema==2.20.0
+filelock==3.13.1
+fonttools==4.53.1
+fonttools==4.56.0
+fqdn==1.5.1
+freetype-py==2.5.1
+fsspec==2025.2.0
+fvcore==0.1.5.post20210915
+gitdb==4.0.11
+gitdb==4.0.12
+gmpy2==2.1.2
+google-auth-oauthlib==1.0.0
+google-auth==2.35.0
+grpcio==1.62.2
+gym-notices==0.0.8
+gym==0.23.1
+gym==0.26.1
+gymnasium==0.29.1
+h11==0.14.0
+h2==4.1.0
+hpack==4.0.0
+httpcore==1.0.7
+httpx==0.27.2
+huggingface-hub==0.29.1
+hyperframe==6.0.1
+idna==3.10
+imageio==2.35.1
+importlib_metadata==8.0.0
+importlib_metadata==8.5.0
+importlib_resources==6.4.0
+importlib_resources==6.4.5
+inflect==7.3.1
+iopath==0.1.9
+ipykernel==6.29.5
+ipython==8.12.2
+ipywidgets==8.1.5
+isaacgym==1.0rc4
+isoduration==20.11.0
+jaraco.collections==5.1.0
+jaraco.context==5.3.0
+jaraco.functools==4.0.1
+jaraco.text==3.12.1
+jedi==0.19.1
+json5==0.9.25
+jsonpointer==3.0.0
+jsonschema-specifications==2024.10.1
+jsonschema==4.23.0
+jupyter-console==6.6.3
+jupyter-events==0.10.0
+jupyter-lsp==2.2.5
+jupyter==1.1.1
+jupyter_client==8.6.3
+jupyter_core==5.7.2
+jupyter_server==2.14.2
+jupyter_server_terminals==0.5.3
+jupyterlab==4.2.5
+jupyterlab_pygments==0.3.0
+jupyterlab_server==2.27.3
+jupyterlab_widgets==3.0.13
+kiwisolver==1.4.2
+kiwisolver==1.4.7
+lxml==5.3.1
+matplotlib-inline==0.1.7
+matplotlib==3.7.2
+matplotlib==3.7.5
+mistune==3.0.2
+mkl-fft==1.3.1
+mkl-random==1.2.2
+mkl-service==2.4.0
+more-itertools==10.3.0
+mpmath==1.3.0
+multidict==6.0.2
+munkres==1.1.4
+nbclient==0.10.2
+nbconvert==7.16.4
+nbformat==5.10.4
+nest_asyncio==1.6.0
+networkx==2.2
+networkx==3.1
+ninja==1.11.1.3
+notebook==7.2.2
+notebook_shim==0.2.4
+numpy==1.23.0
+oauthlib==3.2.2
+olefile==0.47
+omegaconf==2.3.0
+opencv-python==4.11.0.86
+overrides==7.7.0
+packaging==24.1
+packaging==24.2
+pandas==1.4.2
+pandocfilters==1.5.0
+parso==0.8.4
+pathtools==0.1.2
+pexpect==4.9.0
+pickleshare==0.7.5
+pip==24.2
+pkgutil_resolve_name==1.3.10
+platformdirs==4.2.2
+platformdirs==4.3.6
+plotly==5.24.1
+portalocker==2.10.1
+prometheus_client==0.21.0
+promise==2.3
+prompt_toolkit==3.0.48
+protobuf==3.20.3
+protobuf==4.25.3
+psutil==5.9.8
+psutil==6.0.0
+ptyprocess==0.7.0
+pure_eval==0.2.3
+pyOpenSSL==24.2.1
+pyasn1==0.6.1
+pyasn1_modules==0.4.1
+pybullet==3.2.0
+pycollada==0.6
+pycparser==2.22
+pygame==2.1.0
+pyglet==2.1.3
+pyparsing==3.0.9
+pyparsing==3.1.4
+pyrender==0.1.45
+python-dateutil==2.9.0
+python-dateutil==2.9.0.post0
+python-json-logger==2.0.7
+pytorch3d==0.7.8
+pytz==2024.2
+pyu2f==0.1.5
+pyzmq==25.1.2
+referencing==0.35.1
+requests-oauthlib==2.0.0
+requests==2.32.3
+rfc3339-validator==0.1.4
+rfc3986-validator==0.1.1
+rl_games==1.6.1
+rpds-py==0.20.0
+rsa==4.9
+sample-factory==2.1.1
+scipy==1.10.1
+sentry-sdk==2.19.2
+sentry-sdk==2.22.0
+setproctitle==1.3.3
+setproctitle==1.3.5
+setuptools==75.1.0
+shortuuid==1.0.13
+signal-slot-mp==1.0.5
+sip==6.5.1
+six==1.16.0
+smmap==5.0.0
+smmap==5.0.2
+sniffio==1.3.1
+soupsieve==2.5
+stack-data==0.6.2
+sympy==1.5.1
+tabulate==0.9.0
+tenacity==9.0.0
+tensorboard==2.13.0
+tensorboardX==2.6.2.2
+tensorboard_data_server==0.7.0
+termcolor==2.4.0
+terminado==0.18.1
+threadpoolctl==3.5.0
+tinycss2==1.4.0
+toml==0.10.2
+tomli==2.0.1
+tomli==2.0.2
+torch==2.2.0
+torchaudio==2.2.0
+torchvision==0.17.0
+tornado==6.4.1
+tqdm==4.67.1
+traitlets==5.14.3
+trimesh==4.6.3
+triton==2.2.0
+typeguard==4.3.0
+types-python-dateutil==2.9.0.20241003
+typing-utils==0.1.0
+typing_extensions==4.12.2
+typing_extensions==4.12.2
+unicodedata2==15.1.0
+urdfpy==0.0.22
+uri-template==1.3.0
+urllib3==2.2.3
+wandb==0.12.21
+wandb==0.16.6
+warp-lang==1.0.0b5
+wcwidth==0.2.13
+webcolors==24.8.0
+webencodings==0.5.1
+websocket-client==1.8.0
+wheel==0.43.0
+wheel==0.44.0
+widgetsnbextension==4.0.13
+yacs==0.1.8
+yarl==1.7.2
+zipp==3.19.2
+zipp==3.21.0
+zstandard==0.23.0
\ No newline at end of file
diff --git a/aerial_gym/rl_training/rl_games/wandb/run-20250226_214852-m94ohb22/files/wandb-metadata.json b/aerial_gym/rl_training/rl_games/wandb/run-20250226_214852-m94ohb22/files/wandb-metadata.json
new file mode 100644
index 0000000..845f144
--- /dev/null
+++ b/aerial_gym/rl_training/rl_games/wandb/run-20250226_214852-m94ohb22/files/wandb-metadata.json
@@ -0,0 +1,156 @@
+{
+    "os": "Linux-6.5.0-44-generic-x86_64-with-glibc2.17",
+    "python": "3.8.20",
+    "heartbeatAt": "2025-02-27T02:48:53.485067",
+    "startedAt": "2025-02-27T02:48:52.990285",
+    "docker": null,
+    "cuda": null,
+    "args": [
+        "--file=./ppo_aerial_quad_navigation.yaml",
+        "--num_envs=16",
+        "--play",
+        "--checkpoint=./runs/gen_ppo_26-16-11-42/nn/last_gen_ppo_ep_500_rew__377.14606_.pth",
+        "--track",
+        "wandb-project-name=Trained_RL_Navigation",
+        "wandb-entity=shrutiroy03"
+    ],
+    "state": "running",
+    "program": "runner.py",
+    "codePathLocal": "runner.py",
+    "codePath": "aerial_gym/rl_training/rl_games/runner.py",
+    "git": {
+        "remote": "https://github.com/ntnu-arl/aerial_gym_simulator.git",
+        "commit": "85114e7514ed0f3f8cfecfa23c40dad106c528a1"
+    },
+    "email": null,
+    "root": "/home/shruti/workspaces/aerial_gym_ws/src/aerial_gym_simulator",
+    "host": "saferoboticslab-ASUS-TUF-Gaming-F15-FX507ZM-FX507ZM",
+    "username": "shruti",
+    "executable": "/home/shruti/miniconda3/envs/aerialgym/bin/python3",
+    "cpu_count": 14,
+    "cpu_count_logical": 20,
+    "cpu_freq": {
+        "current": 936.2165500000001,
+        "min": 400.0,
+        "max": 4180.0
+    },
+    "cpu_freq_per_core": [
+        {
+            "current": 2683.406,
+            "min": 400.0,
+            "max": 4600.0
+        },
+        {
+            "current": 400.0,
+            "min": 400.0,
+            "max": 4600.0
+        },
+        {
+            "current": 2668.605,
+            "min": 400.0,
+            "max": 4600.0
+        },
+        {
+            "current": 400.0,
+            "min": 400.0,
+            "max": 4600.0
+        },
+        {
+            "current": 2335.785,
+            "min": 400.0,
+            "max": 4700.0
+        },
+        {
+            "current": 400.0,
+            "min": 400.0,
+            "max": 4700.0
+        },
+        {
+            "current": 2429.199,
+            "min": 400.0,
+            "max": 4700.0
+        },
+        {
+            "current": 2511.13,
+            "min": 400.0,
+            "max": 4700.0
+        },
+        {
+            "current": 400.0,
+            "min": 400.0,
+            "max": 4600.0
+        },
+        {
+            "current": 2491.147,
+            "min": 400.0,
+            "max": 4600.0
+        },
+        {
+            "current": 400.0,
+            "min": 400.0,
+            "max": 4600.0
+        },
+        {
+            "current": 2493.035,
+            "min": 400.0,
+            "max": 4600.0
+        },
+        {
+            "current": 400.0,
+            "min": 400.0,
+            "max": 3500.0
+        },
+        {
+            "current": 400.0,
+            "min": 400.0,
+            "max": 3500.0
+        },
+        {
+            "current": 400.0,
+            "min": 400.0,
+            "max": 3500.0
+        },
+        {
+            "current": 400.0,
+            "min": 400.0,
+            "max": 3500.0
+        },
+        {
+            "current": 952.073,
+            "min": 400.0,
+            "max": 3500.0
+        },
+        {
+            "current": 400.0,
+            "min": 400.0,
+            "max": 3500.0
+        },
+        {
+            "current": 400.0,
+            "min": 400.0,
+            "max": 3500.0
+        },
+        {
+            "current": 400.0,
+            "min": 400.0,
+            "max": 3500.0
+        }
+    ],
+    "disk": {
+        "/": {
+            "total": 937.3305015563965,
+            "used": 231.4600372314453
+        }
+    },
+    "gpu": "NVIDIA GeForce RTX 3060 Laptop GPU",
+    "gpu_count": 1,
+    "gpu_devices": [
+        {
+            "name": "NVIDIA GeForce RTX 3060 Laptop GPU",
+            "memory_total": 6442450944
+        }
+    ],
+    "memory": {
+        "total": 15.238014221191406
+    }
+}
diff --git a/aerial_gym/rl_training/rl_games/wandb/run-20250226_214852-m94ohb22/logs/debug-internal.log b/aerial_gym/rl_training/rl_games/wandb/run-20250226_214852-m94ohb22/logs/debug-internal.log
new file mode 100644
index 0000000..553e499
--- /dev/null
+++ b/aerial_gym/rl_training/rl_games/wandb/run-20250226_214852-m94ohb22/logs/debug-internal.log
@@ -0,0 +1,65 @@
+2025-02-26 21:48:52,994 INFO    StreamThr :18503 [internal.py:wandb_internal():86] W&B internal server running at pid: 18503, started at: 2025-02-26 21:48:52.994420
+2025-02-26 21:48:52,998 DEBUG   HandlerThread:18503 [handler.py:handle_request():146] handle_request: status
+2025-02-26 21:48:52,999 INFO    WriterThread:18503 [datastore.py:open_for_write():87] open: /home/shruti/workspaces/aerial_gym_ws/src/aerial_gym_simulator/aerial_gym/rl_training/rl_games/wandb/run-20250226_214852-m94ohb22/run-m94ohb22.wandb
+2025-02-26 21:48:52,999 DEBUG   SenderThread:18503 [sender.py:send():379] send: header
+2025-02-26 21:48:53,011 DEBUG   SenderThread:18503 [sender.py:send():379] send: run
+2025-02-26 21:48:53,393 INFO    SenderThread:18503 [dir_watcher.py:__init__():211] watching files in: /home/shruti/workspaces/aerial_gym_ws/src/aerial_gym_simulator/aerial_gym/rl_training/rl_games/wandb/run-20250226_214852-m94ohb22/files
+2025-02-26 21:48:53,393 INFO    SenderThread:18503 [sender.py:_start_run_threads():1124] run started: m94ohb22 with start time 1740624532.994205
+2025-02-26 21:48:53,399 DEBUG   HandlerThread:18503 [handler.py:handle_request():146] handle_request: check_version
+2025-02-26 21:48:53,400 DEBUG   SenderThread:18503 [sender.py:send_request():406] send_request: check_version
+2025-02-26 21:48:53,461 DEBUG   HandlerThread:18503 [handler.py:handle_request():146] handle_request: run_start
+2025-02-26 21:48:53,470 DEBUG   HandlerThread:18503 [system_info.py:__init__():26] System info init
+2025-02-26 21:48:53,470 DEBUG   HandlerThread:18503 [system_info.py:__init__():41] System info init done
+2025-02-26 21:48:53,471 INFO    HandlerThread:18503 [system_monitor.py:start():194] Starting system monitor
+2025-02-26 21:48:53,471 INFO    SystemMonitor:18503 [system_monitor.py:_start():158] Starting system asset monitoring threads
+2025-02-26 21:48:53,471 INFO    HandlerThread:18503 [system_monitor.py:probe():214] Collecting system info
+2025-02-26 21:48:53,471 INFO    SystemMonitor:18503 [interfaces.py:start():190] Started cpu monitoring
+2025-02-26 21:48:53,473 INFO    SystemMonitor:18503 [interfaces.py:start():190] Started disk monitoring
+2025-02-26 21:48:53,473 INFO    SystemMonitor:18503 [interfaces.py:start():190] Started gpu monitoring
+2025-02-26 21:48:53,474 INFO    SystemMonitor:18503 [interfaces.py:start():190] Started memory monitoring
+2025-02-26 21:48:53,475 INFO    SystemMonitor:18503 [interfaces.py:start():190] Started network monitoring
+2025-02-26 21:48:53,485 DEBUG   HandlerThread:18503 [system_info.py:probe():150] Probing system
+2025-02-26 21:48:53,489 DEBUG   HandlerThread:18503 [system_info.py:_probe_git():135] Probing git
+2025-02-26 21:48:53,496 DEBUG   HandlerThread:18503 [system_info.py:_probe_git():143] Probing git done
+2025-02-26 21:48:53,497 DEBUG   HandlerThread:18503 [system_info.py:probe():198] Probing system done
+2025-02-26 21:48:53,497 DEBUG   HandlerThread:18503 [system_monitor.py:probe():223] {'os': 'Linux-6.5.0-44-generic-x86_64-with-glibc2.17', 'python': '3.8.20', 'heartbeatAt': '2025-02-27T02:48:53.485067', 'startedAt': '2025-02-27T02:48:52.990285', 'docker': None, 'cuda': None, 'args': ('--file=./ppo_aerial_quad_navigation.yaml', '--num_envs=16', '--play', '--checkpoint=./runs/gen_ppo_26-16-11-42/nn/last_gen_ppo_ep_500_rew__377.14606_.pth', '--track', 'wandb-project-name=Trained_RL_Navigation', 'wandb-entity=shrutiroy03'), 'state': 'running', 'program': 'runner.py', 'codePathLocal': 'runner.py', 'codePath': 'aerial_gym/rl_training/rl_games/runner.py', 'git': {'remote': 'https://github.com/ntnu-arl/aerial_gym_simulator.git', 'commit': '85114e7514ed0f3f8cfecfa23c40dad106c528a1'}, 'email': None, 'root': '/home/shruti/workspaces/aerial_gym_ws/src/aerial_gym_simulator', 'host': 'saferoboticslab-ASUS-TUF-Gaming-F15-FX507ZM-FX507ZM', 'username': 'shruti', 'executable': '/home/shruti/miniconda3/envs/aerialgym/bin/python3', 'cpu_count': 14, 'cpu_count_logical': 20, 'cpu_freq': {'current': 936.2165500000001, 'min': 400.0, 'max': 4180.0}, 'cpu_freq_per_core': [{'current': 2683.406, 'min': 400.0, 'max': 4600.0}, {'current': 400.0, 'min': 400.0, 'max': 4600.0}, {'current': 2668.605, 'min': 400.0, 'max': 4600.0}, {'current': 400.0, 'min': 400.0, 'max': 4600.0}, {'current': 2335.785, 'min': 400.0, 'max': 4700.0}, {'current': 400.0, 'min': 400.0, 'max': 4700.0}, {'current': 2429.199, 'min': 400.0, 'max': 4700.0}, {'current': 2511.13, 'min': 400.0, 'max': 4700.0}, {'current': 400.0, 'min': 400.0, 'max': 4600.0}, {'current': 2491.147, 'min': 400.0, 'max': 4600.0}, {'current': 400.0, 'min': 400.0, 'max': 4600.0}, {'current': 2493.035, 'min': 400.0, 'max': 4600.0}, {'current': 400.0, 'min': 400.0, 'max': 3500.0}, {'current': 400.0, 'min': 400.0, 'max': 3500.0}, {'current': 400.0, 'min': 400.0, 'max': 3500.0}, {'current': 400.0, 'min': 400.0, 'max': 3500.0}, {'current': 952.073, 'min': 400.0, 'max': 3500.0}, {'current': 400.0, 'min': 400.0, 'max': 3500.0}, {'current': 400.0, 'min': 400.0, 'max': 3500.0}, {'current': 400.0, 'min': 400.0, 'max': 3500.0}], 'disk': {'/': {'total': 937.3305015563965, 'used': 231.4600372314453}}, 'gpu': 'NVIDIA GeForce RTX 3060 Laptop GPU', 'gpu_count': 1, 'gpu_devices': [{'name': 'NVIDIA GeForce RTX 3060 Laptop GPU', 'memory_total': 6442450944}], 'memory': {'total': 15.238014221191406}}
+2025-02-26 21:48:53,497 INFO    HandlerThread:18503 [system_monitor.py:probe():224] Finished collecting system info
+2025-02-26 21:48:53,497 INFO    HandlerThread:18503 [system_monitor.py:probe():227] Publishing system info
+2025-02-26 21:48:53,497 DEBUG   HandlerThread:18503 [system_info.py:_save_conda():207] Saving list of conda packages installed into the current environment
+2025-02-26 21:48:54,394 INFO    Thread-12 :18503 [dir_watcher.py:_on_file_created():271] file/dir created: /home/shruti/workspaces/aerial_gym_ws/src/aerial_gym_simulator/aerial_gym/rl_training/rl_games/wandb/run-20250226_214852-m94ohb22/files/conda-environment.yaml
+2025-02-26 21:48:55,216 DEBUG   HandlerThread:18503 [system_info.py:_save_conda():222] Saving conda packages done
+2025-02-26 21:48:55,216 DEBUG   HandlerThread:18503 [system_info.py:_save_code():44] Saving code
+2025-02-26 21:48:55,220 DEBUG   HandlerThread:18503 [system_info.py:_save_code():65] Saving code done
+2025-02-26 21:48:55,220 DEBUG   HandlerThread:18503 [system_info.py:_save_patches():82] Saving git patches
+2025-02-26 21:48:55,241 DEBUG   HandlerThread:18503 [system_info.py:_save_patches():124] Saving git patches done
+2025-02-26 21:48:55,241 INFO    HandlerThread:18503 [system_monitor.py:probe():229] Finished publishing system info
+2025-02-26 21:48:55,244 DEBUG   SenderThread:18503 [sender.py:send():379] send: files
+2025-02-26 21:48:55,244 INFO    SenderThread:18503 [sender.py:_save_file():1390] saving file wandb-metadata.json with policy now
+2025-02-26 21:48:55,244 INFO    SenderThread:18503 [sender.py:_save_file():1390] saving file code/aerial_gym/rl_training/rl_games/runner.py with policy now
+2025-02-26 21:48:55,244 INFO    SenderThread:18503 [sender.py:_save_file():1390] saving file diff.patch with policy now
+2025-02-26 21:48:55,322 DEBUG   HandlerThread:18503 [handler.py:handle_request():146] handle_request: python_packages
+2025-02-26 21:48:55,323 DEBUG   SenderThread:18503 [sender.py:send_request():406] send_request: python_packages
+2025-02-26 21:48:55,323 DEBUG   HandlerThread:18503 [handler.py:handle_request():146] handle_request: stop_status
+2025-02-26 21:48:55,323 DEBUG   HandlerThread:18503 [handler.py:handle_request():146] handle_request: internal_messages
+2025-02-26 21:48:55,323 DEBUG   SenderThread:18503 [sender.py:send_request():406] send_request: stop_status
+2025-02-26 21:48:55,393 INFO    Thread-12 :18503 [dir_watcher.py:_on_file_modified():288] file/dir modified: /home/shruti/workspaces/aerial_gym_ws/src/aerial_gym_simulator/aerial_gym/rl_training/rl_games/wandb/run-20250226_214852-m94ohb22/files/conda-environment.yaml
+2025-02-26 21:48:55,394 INFO    Thread-12 :18503 [dir_watcher.py:_on_file_created():271] file/dir created: /home/shruti/workspaces/aerial_gym_ws/src/aerial_gym_simulator/aerial_gym/rl_training/rl_games/wandb/run-20250226_214852-m94ohb22/files/wandb-metadata.json
+2025-02-26 21:48:55,394 INFO    Thread-12 :18503 [dir_watcher.py:_on_file_created():271] file/dir created: /home/shruti/workspaces/aerial_gym_ws/src/aerial_gym_simulator/aerial_gym/rl_training/rl_games/wandb/run-20250226_214852-m94ohb22/files/diff.patch
+2025-02-26 21:48:55,394 INFO    Thread-12 :18503 [dir_watcher.py:_on_file_created():271] file/dir created: /home/shruti/workspaces/aerial_gym_ws/src/aerial_gym_simulator/aerial_gym/rl_training/rl_games/wandb/run-20250226_214852-m94ohb22/files/code/aerial_gym/rl_training/rl_games/runner.py
+2025-02-26 21:48:55,394 INFO    Thread-12 :18503 [dir_watcher.py:_on_file_created():271] file/dir created: /home/shruti/workspaces/aerial_gym_ws/src/aerial_gym_simulator/aerial_gym/rl_training/rl_games/wandb/run-20250226_214852-m94ohb22/files/requirements.txt
+2025-02-26 21:48:55,394 INFO    Thread-12 :18503 [dir_watcher.py:_on_file_created():271] file/dir created: /home/shruti/workspaces/aerial_gym_ws/src/aerial_gym_simulator/aerial_gym/rl_training/rl_games/wandb/run-20250226_214852-m94ohb22/files/code/aerial_gym/rl_training/rl_games
+2025-02-26 21:48:55,394 INFO    Thread-12 :18503 [dir_watcher.py:_on_file_created():271] file/dir created: /home/shruti/workspaces/aerial_gym_ws/src/aerial_gym_simulator/aerial_gym/rl_training/rl_games/wandb/run-20250226_214852-m94ohb22/files/code
+2025-02-26 21:48:55,394 INFO    Thread-12 :18503 [dir_watcher.py:_on_file_created():271] file/dir created: /home/shruti/workspaces/aerial_gym_ws/src/aerial_gym_simulator/aerial_gym/rl_training/rl_games/wandb/run-20250226_214852-m94ohb22/files/code/aerial_gym
+2025-02-26 21:48:55,394 INFO    Thread-12 :18503 [dir_watcher.py:_on_file_created():271] file/dir created: /home/shruti/workspaces/aerial_gym_ws/src/aerial_gym_simulator/aerial_gym/rl_training/rl_games/wandb/run-20250226_214852-m94ohb22/files/code/aerial_gym/rl_training
+2025-02-26 21:48:55,420 DEBUG   SenderThread:18503 [sender.py:send():379] send: telemetry
+2025-02-26 21:48:55,499 INFO    wandb-upload_0:18503 [upload_job.py:push():131] Uploaded file /tmp/tmp1p6wgnzfwandb/rcaohuny-wandb-metadata.json
+2025-02-26 21:48:55,522 INFO    wandb-upload_2:18503 [upload_job.py:push():131] Uploaded file /tmp/tmp1p6wgnzfwandb/1z1yus7d-diff.patch
+2025-02-26 21:48:55,526 INFO    wandb-upload_1:18503 [upload_job.py:push():131] Uploaded file /tmp/tmp1p6wgnzfwandb/1ll433bh-code/aerial_gym/rl_training/rl_games/runner.py
+2025-02-26 21:48:56,394 INFO    Thread-12 :18503 [dir_watcher.py:_on_file_created():271] file/dir created: /home/shruti/workspaces/aerial_gym_ws/src/aerial_gym_simulator/aerial_gym/rl_training/rl_games/wandb/run-20250226_214852-m94ohb22/files/output.log
+2025-02-26 21:48:57,476 INFO    cpu       :18503 [interfaces.py:monitor():140] Process cpu has exited.
+2025-02-26 21:48:57,478 DEBUG   SystemMonitor:18503 [system_monitor.py:_start():172] Starting system metrics aggregation loop
+2025-02-26 21:48:57,478 DEBUG   SystemMonitor:18503 [system_monitor.py:_start():179] Finished system metrics aggregation loop
+2025-02-26 21:48:57,479 DEBUG   SystemMonitor:18503 [system_monitor.py:_start():183] Publishing last batch of metrics
+2025-02-26 21:48:57,481 DEBUG   SenderThread:18503 [sender.py:send():379] send: stats
+2025-02-26 21:48:58,395 INFO    Thread-12 :18503 [dir_watcher.py:_on_file_modified():288] file/dir modified: /home/shruti/workspaces/aerial_gym_ws/src/aerial_gym_simulator/aerial_gym/rl_training/rl_games/wandb/run-20250226_214852-m94ohb22/files/output.log
+2025-02-26 21:48:58,464 INFO    MainThread:18503 [internal.py:handle_exit():76] Internal process exited
diff --git a/aerial_gym/rl_training/rl_games/wandb/run-20250226_214852-m94ohb22/logs/debug.log b/aerial_gym/rl_training/rl_games/wandb/run-20250226_214852-m94ohb22/logs/debug.log
new file mode 100644
index 0000000..e18fec6
--- /dev/null
+++ b/aerial_gym/rl_training/rl_games/wandb/run-20250226_214852-m94ohb22/logs/debug.log
@@ -0,0 +1,28 @@
+2025-02-26 21:48:52,992 INFO    MainThread:18443 [wandb_setup.py:_flush():76] Current SDK version is 0.16.6
+2025-02-26 21:48:52,992 INFO    MainThread:18443 [wandb_setup.py:_flush():76] Configure stats pid to 18443
+2025-02-26 21:48:52,992 INFO    MainThread:18443 [wandb_setup.py:_flush():76] Loading settings from /home/shruti/.config/wandb/settings
+2025-02-26 21:48:52,992 INFO    MainThread:18443 [wandb_setup.py:_flush():76] Loading settings from /home/shruti/workspaces/aerial_gym_ws/src/aerial_gym_simulator/aerial_gym/rl_training/rl_games/wandb/settings
+2025-02-26 21:48:52,992 INFO    MainThread:18443 [wandb_setup.py:_flush():76] Loading settings from environment variables: {}
+2025-02-26 21:48:52,992 INFO    MainThread:18443 [wandb_setup.py:_flush():76] Applying setup settings: {'_disable_service': False}
+2025-02-26 21:48:52,992 INFO    MainThread:18443 [wandb_setup.py:_flush():76] Inferring run settings from compute environment: {'program_relpath': 'aerial_gym/rl_training/rl_games/runner.py', 'program_abspath': '/home/shruti/workspaces/aerial_gym_ws/src/aerial_gym_simulator/aerial_gym/rl_training/rl_games/runner.py', 'program': 'runner.py'}
+2025-02-26 21:48:52,992 INFO    MainThread:18443 [wandb_setup.py:_flush():76] Applying login settings: {}
+2025-02-26 21:48:52,992 INFO    MainThread:18443 [wandb_init.py:_log_setup():521] Logging user logs to /home/shruti/workspaces/aerial_gym_ws/src/aerial_gym_simulator/aerial_gym/rl_training/rl_games/wandb/run-20250226_214852-m94ohb22/logs/debug.log
+2025-02-26 21:48:52,992 INFO    MainThread:18443 [wandb_init.py:_log_setup():522] Logging internal logs to /home/shruti/workspaces/aerial_gym_ws/src/aerial_gym_simulator/aerial_gym/rl_training/rl_games/wandb/run-20250226_214852-m94ohb22/logs/debug-internal.log
+2025-02-26 21:48:52,992 INFO    MainThread:18443 [wandb_init.py:init():561] calling init triggers
+2025-02-26 21:48:52,992 INFO    MainThread:18443 [wandb_init.py:init():568] wandb.init called with sweep_config: {}
+config: {'params': {'seed': 10, 'algo': {'name': 'a2c_continuous'}, 'model': {'name': 'continuous_a2c_logstd'}, 'load_checkpoint': False, 'network': {'name': 'actor_critic', 'separate': False, 'space': {'continuous': {'mu_activation': 'None', 'sigma_activation': 'None', 'mu_init': {'name': 'default'}, 'sigma_init': {'name': 'const_initializer', 'val': 0}, 'fixed_sigma': True}}, 'mlp': {'units': [256, 128, 64], 'd2rl': False, 'activation': 'elu', 'initializer': {'name': 'default', 'scale': 2}}}, 'config': {'env_name': 'navigation_task', 'env_config': {'num_envs': 16, 'headless': False, 'use_warp': True}, 'name': 'gen_ppo', 'reward_shaper': {'scale_value': 0.1}, 'normalize_advantage': True, 'gamma': 0.98, 'tau': 0.95, 'ppo': True, 'learning_rate': '1e-4', 'lr_schedule': 'adaptive', 'kl_threshold': 0.016, 'save_best_after': 10, 'score_to_win': 100000, 'grad_norm': 1.0, 'entropy_coef': 0, 'truncate_grads': True, 'e_clip': 0.2, 'clip_value': False, 'num_actors': 16, 'horizon_length': 32, 'minibatch_size': 2048, 'mini_epochs': 4, 'critic_coef': 2, 'normalize_input': True, 'bounds_loss_coef': 0.0001, 'max_epochs': 500, 'normalize_value': True, 'use_diagnostics': True, 'value_bootstrap': True, 'use_smooth_clamp': False, 'player': {'use_vecenv': True}}}}
+2025-02-26 21:48:52,992 INFO    MainThread:18443 [wandb_init.py:init():611] starting backend
+2025-02-26 21:48:52,992 INFO    MainThread:18443 [wandb_init.py:init():615] setting up manager
+2025-02-26 21:48:52,993 INFO    MainThread:18443 [backend.py:_multiprocessing_setup():105] multiprocessing start_methods=fork,spawn,forkserver, using: spawn
+2025-02-26 21:48:52,994 INFO    MainThread:18443 [wandb_init.py:init():623] backend started and connected
+2025-02-26 21:48:52,996 INFO    MainThread:18443 [wandb_init.py:init():715] updated telemetry
+2025-02-26 21:48:53,010 INFO    MainThread:18443 [wandb_init.py:init():748] communicating run to backend with 90.0 second timeout
+2025-02-26 21:48:53,399 INFO    MainThread:18443 [wandb_run.py:_on_init():2357] communicating current version
+2025-02-26 21:48:53,456 INFO    MainThread:18443 [wandb_run.py:_on_init():2366] got version response upgrade_message: "wandb version 0.19.7 is available!  To upgrade, please run:\n $ pip install wandb --upgrade"
+
+2025-02-26 21:48:53,456 INFO    MainThread:18443 [wandb_init.py:init():799] starting run threads in backend
+2025-02-26 21:48:55,323 INFO    MainThread:18443 [wandb_run.py:_console_start():2335] atexit reg
+2025-02-26 21:48:55,323 INFO    MainThread:18443 [wandb_run.py:_redirect():2190] redirect: wrap_raw
+2025-02-26 21:48:55,323 INFO    MainThread:18443 [wandb_run.py:_redirect():2255] Wrapping output streams.
+2025-02-26 21:48:55,323 INFO    MainThread:18443 [wandb_run.py:_redirect():2280] Redirects installed.
+2025-02-26 21:48:55,323 INFO    MainThread:18443 [wandb_init.py:init():842] run started, returning control to user process
diff --git a/aerial_gym/rl_training/rl_games/wandb/run-20250226_214852-m94ohb22/run-m94ohb22.wandb b/aerial_gym/rl_training/rl_games/wandb/run-20250226_214852-m94ohb22/run-m94ohb22.wandb
new file mode 100644
index 0000000..e40a647
Binary files /dev/null and b/aerial_gym/rl_training/rl_games/wandb/run-20250226_214852-m94ohb22/run-m94ohb22.wandb differ
diff --git a/aerial_gym/rl_training/rl_games/wandb/run-20250226_214902-wkejie5v/files/code/aerial_gym/rl_training/rl_games/runner.py b/aerial_gym/rl_training/rl_games/wandb/run-20250226_214902-wkejie5v/files/code/aerial_gym/rl_training/rl_games/runner.py
new file mode 100644
index 0000000..bd45a3c
--- /dev/null
+++ b/aerial_gym/rl_training/rl_games/wandb/run-20250226_214902-wkejie5v/files/code/aerial_gym/rl_training/rl_games/runner.py
@@ -0,0 +1,331 @@
+import numpy as np
+import os
+import yaml
+
+
+import isaacgym
+
+
+from aerial_gym.registry.task_registry import task_registry
+from aerial_gym.utils.helpers import parse_arguments
+
+import gym
+from gym import spaces
+from argparse import Namespace
+
+from rl_games.common import env_configurations, vecenv
+
+import torch
+import distutils
+
+os.environ["XLA_PYTHON_CLIENT_PREALLOCATE"] = "false"
+# import warnings
+# warnings.filterwarnings("error")
+
+
+class ExtractObsWrapper(gym.Wrapper):
+    def __init__(self, env):
+        super().__init__(env)
+
+    def reset(self, **kwargs):
+        observations, *_ = super().reset(**kwargs)
+        return observations["observations"]
+
+    def step(self, action):
+        observations, rewards, terminated, truncated, infos = super().step(action)
+
+        dones = torch.where(
+            terminated | truncated,
+            torch.ones_like(terminated),
+            torch.zeros_like(terminated),
+        )
+
+        return (
+            observations["observations"],
+            rewards,
+            dones,
+            infos,
+        )
+
+
+class AERIALRLGPUEnv(vecenv.IVecEnv):
+    def __init__(self, config_name, num_actors, **kwargs):
+        self.env = env_configurations.configurations[config_name]["env_creator"](**kwargs)
+        self.env = ExtractObsWrapper(self.env)
+
+    def step(self, actions):
+        return self.env.step(actions)
+
+    def reset(self):
+        return self.env.reset()
+
+    def reset_done(self):
+        return self.env.reset_done()
+
+    def get_number_of_agents(self):
+        return self.env.get_number_of_agents()
+
+    def get_env_info(self):
+        info = {}
+        info["action_space"] = spaces.Box(
+            -np.ones(self.env.task_config.action_space_dim),
+            np.ones(self.env.task_config.action_space_dim),
+        )
+        info["observation_space"] = spaces.Box(
+            np.ones(self.env.task_config.observation_space_dim) * -np.Inf,
+            np.ones(self.env.task_config.observation_space_dim) * np.Inf,
+        )
+        print(info["action_space"], info["observation_space"])
+        return info
+
+
+env_configurations.register(
+    "position_setpoint_task",
+    {
+        "env_creator": lambda **kwargs: task_registry.make_task("position_setpoint_task", **kwargs),
+        "vecenv_type": "AERIAL-RLGPU",
+    },
+)
+
+env_configurations.register(
+    "position_setpoint_task_sim2real",
+    {
+        "env_creator": lambda **kwargs: task_registry.make_task(
+            "position_setpoint_task_sim2real", **kwargs
+        ),
+        "vecenv_type": "AERIAL-RLGPU",
+    },
+)
+
+env_configurations.register(
+    "position_setpoint_task_acceleration_sim2real",
+    {
+        "env_creator": lambda **kwargs: task_registry.make_task(
+            "position_setpoint_task_acceleration_sim2real", **kwargs
+        ),
+        "vecenv_type": "AERIAL-RLGPU",
+    },
+)
+
+env_configurations.register(
+    "navigation_task",
+    {
+        "env_creator": lambda **kwargs: task_registry.make_task("navigation_task", **kwargs),
+        "vecenv_type": "AERIAL-RLGPU",
+    },
+)
+
+env_configurations.register(
+    "position_setpoint_task_reconfigurable",
+    {
+        "env_creator": lambda **kwargs: task_registry.make_task(
+            "position_setpoint_task_reconfigurable", **kwargs
+        ),
+        "vecenv_type": "AERIAL-RLGPU",
+    },
+)
+
+env_configurations.register(
+    "position_setpoint_task_morphy",
+    {
+        "env_creator": lambda **kwargs: task_registry.make_task(
+            "position_setpoint_task_morphy", **kwargs
+        ),
+        "vecenv_type": "AERIAL-RLGPU",
+    },
+)
+
+env_configurations.register(
+    "position_setpoint_task_sim2real_end_to_end",
+    {
+        "env_creator": lambda **kwargs: task_registry.make_task(
+            "position_setpoint_task_sim2real_end_to_end", **kwargs
+        ),
+        "vecenv_type": "AERIAL-RLGPU",
+    },
+)
+
+vecenv.register(
+    "AERIAL-RLGPU",
+    lambda config_name, num_actors, **kwargs: AERIALRLGPUEnv(config_name, num_actors, **kwargs),
+)
+
+
+def get_args():
+    from isaacgym import gymutil
+
+    custom_parameters = [
+        {
+            "name": "--seed",
+            "type": int,
+            "default": 0,
+            "required": False,
+            "help": "Random seed, if larger than 0 will overwrite the value in yaml config.",
+        },
+        {
+            "name": "--tf",
+            "required": False,
+            "help": "run tensorflow runner",
+            "action": "store_true",
+        },
+        {
+            "name": "--train",
+            "required": False,
+            "help": "train network",
+            "action": "store_true",
+        },
+        {
+            "name": "--play",
+            "required": False,
+            "help": "play(test) network",
+            "action": "store_true",
+        },
+        {
+            "name": "--checkpoint",
+            "type": str,
+            "required": False,
+            "help": "path to checkpoint",
+        },
+        {
+            "name": "--file",
+            "type": str,
+            "default": "ppo_aerial_quad.yaml",
+            "required": False,
+            "help": "path to config",
+        },
+        {
+            "name": "--num_envs",
+            "type": int,
+            "default": "1024",
+            "help": "Number of environments to create. Overrides config file if provided.",
+        },
+        {
+            "name": "--sigma",
+            "type": float,
+            "required": False,
+            "help": "sets new sigma value in case if 'fixed_sigma: True' in yaml config",
+        },
+        {
+            "name": "--track",
+            "action": "store_true",
+            "help": "if toggled, this experiment will be tracked with Weights and Biases",
+        },
+        {
+            "name": "--wandb-project-name",
+            "type": str,
+            "default": "rl_games",
+            "help": "the wandb's project name",
+        },
+        {
+            "name": "--wandb-entity",
+            "type": str,
+            "default": None,
+            "help": "the entity (team) of wandb's project",
+        },
+        {
+            "name": "--task",
+            "type": str,
+            "default": "navigation_task",
+            "help": "Override task from config file if provided.",
+        },
+        {
+            "name": "--experiment_name",
+            "type": str,
+            "help": "Name of the experiment to run or load. Overrides config file if provided.",
+        },
+        {
+            "name": "--headless",
+            "type": lambda x: bool(distutils.util.strtobool(x)),
+            "default": "False",
+            "help": "Force display off at all times",
+        },
+        {
+            "name": "--horovod",
+            "action": "store_true",
+            "default": False,
+            "help": "Use horovod for multi-gpu training",
+        },
+        {
+            "name": "--rl_device",
+            "type": str,
+            "default": "cuda:0",
+            "help": "Device used by the RL algorithm, (cpu, gpu, cuda:0, cuda:1 etc..)",
+        },
+        {
+            "name": "--use_warp",
+            "type": lambda x: bool(distutils.util.strtobool(x)),
+            "default": "True",
+            "help": "Choose whether to use warp or Isaac Gym rendering pipeline.",
+        },
+    ]
+
+    # parse arguments
+    args = parse_arguments(description="RL Policy", custom_parameters=custom_parameters)
+
+    # name allignment
+    args.sim_device_id = args.compute_device_id
+    args.sim_device = args.sim_device_type
+    if args.sim_device == "cuda":
+        args.sim_device += f":{args.sim_device_id}"
+    return args
+
+
+def update_config(config, args):
+
+    if args["task"] is not None:
+        config["params"]["config"]["env_name"] = args["task"]
+    if args["experiment_name"] is not None:
+        config["params"]["config"]["name"] = args["experiment_name"]
+    config["params"]["config"]["env_config"]["headless"] = args["headless"]
+    config["params"]["config"]["env_config"]["num_envs"] = args["num_envs"]
+    config["params"]["config"]["env_config"]["use_warp"] = args["use_warp"]
+    if args["num_envs"] > 0:
+        config["params"]["config"]["num_actors"] = args["num_envs"]
+        # config['params']['config']['num_envs'] = args['num_envs']
+        config["params"]["config"]["env_config"]["num_envs"] = args["num_envs"]
+    if args["seed"] > 0:
+        config["params"]["seed"] = args["seed"]
+        config["params"]["config"]["env_config"]["seed"] = args["seed"]
+
+    config["params"]["config"]["player"] = {"use_vecenv": True}
+    return config
+
+
+if __name__ == "__main__":
+    os.makedirs("nn", exist_ok=True)
+    os.makedirs("runs", exist_ok=True)
+
+    args = vars(get_args())
+
+    config_name = args["file"]
+
+    print("Loading config: ", config_name)
+    with open(config_name, "r") as stream:
+        config = yaml.safe_load(stream)
+
+        config = update_config(config, args)
+
+        from rl_games.torch_runner import Runner
+
+        runner = Runner()
+        try:
+            runner.load(config)
+        except yaml.YAMLError as exc:
+            print(exc)
+
+    rank = int(os.getenv("LOCAL_RANK", "0"))
+    if args["track"] and rank == 0:
+        import wandb
+
+        wandb.init(
+            project=args["wandb_project_name"],
+            entity=args["wandb_entity"],
+            sync_tensorboard=True,
+            config=config,
+            monitor_gym=True,
+            save_code=True,
+        )
+    runner.run(args)
+
+    if args["track"] and rank == 0:
+        wandb.finish()
diff --git a/aerial_gym/rl_training/rl_games/wandb/run-20250226_214902-wkejie5v/files/conda-environment.yaml b/aerial_gym/rl_training/rl_games/wandb/run-20250226_214902-wkejie5v/files/conda-environment.yaml
new file mode 100644
index 0000000..b5e6902
--- /dev/null
+++ b/aerial_gym/rl_training/rl_games/wandb/run-20250226_214902-wkejie5v/files/conda-environment.yaml
@@ -0,0 +1,409 @@
+name: aerialgym
+channels:
+  - pytorch3d
+  - iopath
+  - fvcore
+  - pytorch
+  - nvidia
+  - nvidia/label/cuda-11.8.0
+  - conda-forge
+  - defaults
+  - https://repo.anaconda.com/pkgs/main
+  - https://repo.anaconda.com/pkgs/r
+dependencies:
+  - _libgcc_mutex=0.1=main
+  - _openmp_mutex=5.1=1_gnu
+  - absl-py=2.1.0=pyhd8ed1ab_0
+  - aiohttp=3.7.4.post0=py38h497a2fe_1
+  - antlr-python-runtime=4.9.3=pyhd8ed1ab_1
+  - anyio=4.5.0=pyhd8ed1ab_0
+  - appdirs=1.4.4=pyh9f0ad1d_0
+  - argon2-cffi=23.1.0=pyhd8ed1ab_0
+  - argon2-cffi-bindings=21.2.0=py38h01eb140_4
+  - arrow=1.3.0=pyhd8ed1ab_0
+  - asttokens=3.0.0=pyhd8ed1ab_0
+  - async-lru=2.0.4=pyhd8ed1ab_0
+  - async-timeout=3.0.1=py_1000
+  - attrs=24.2.0=pyh71513ae_0
+  - babel=2.16.0=pyhd8ed1ab_0
+  - backcall=0.2.0=pyh9f0ad1d_0
+  - beautifulsoup4=4.12.3=pyha770c72_0
+  - blas=1.0=mkl
+  - bleach=6.1.0=pyhd8ed1ab_0
+  - blinker=1.8.2=pyhd8ed1ab_0
+  - brotli=1.1.0=hb9d3cd8_2
+  - brotli-bin=1.1.0=hb9d3cd8_2
+  - brotli-python=1.0.9=py38hfa26641_7
+  - bullet-cpp=3.21=h43a58ef_1
+  - bzip2=1.0.8=h5eee18b_6
+  - c-ares=1.19.1=h5eee18b_0
+  - ca-certificates=2025.2.25=h06a4308_0
+  - cached-property=1.5.2=hd8ed1ab_1
+  - cached_property=1.5.2=pyha770c72_1
+  - cachetools=5.5.0=pyhd8ed1ab_0
+  - certifi=2024.8.30=pyhd8ed1ab_0
+  - cffi=1.15.0=py38h3931269_0
+  - chardet=4.0.0=py38h578d9bd_3
+  - charset-normalizer=3.4.0=pyhd8ed1ab_0
+  - click=8.1.7=unix_pyh707e725_0
+  - colorama=0.4.6=pyhd8ed1ab_0
+  - comm=0.2.2=pyhd8ed1ab_0
+  - cryptography=43.0.0=py38hdda0065_0
+  - cuda=11.8.0=0
+  - cuda-cccl=11.8.89=0
+  - cuda-command-line-tools=11.8.0=0
+  - cuda-compiler=11.8.0=0
+  - cuda-cudart=11.8.89=0
+  - cuda-cudart-dev=11.8.89=0
+  - cuda-cuobjdump=11.8.86=0
+  - cuda-cupti=11.8.87=0
+  - cuda-cuxxfilt=11.8.86=0
+  - cuda-demo-suite=11.8.86=0
+  - cuda-documentation=11.8.86=0
+  - cuda-driver-dev=11.8.89=0
+  - cuda-gdb=11.8.86=0
+  - cuda-libraries=11.8.0=0
+  - cuda-libraries-dev=11.8.0=0
+  - cuda-memcheck=11.8.86=0
+  - cuda-nsight=11.8.86=0
+  - cuda-nsight-compute=11.8.0=0
+  - cuda-nvcc=11.8.89=0
+  - cuda-nvdisasm=11.8.86=0
+  - cuda-nvml-dev=11.8.86=0
+  - cuda-nvprof=11.8.87=0
+  - cuda-nvprune=11.8.86=0
+  - cuda-nvrtc=11.8.89=0
+  - cuda-nvrtc-dev=11.8.89=0
+  - cuda-nvtx=11.8.86=0
+  - cuda-nvvp=11.8.87=0
+  - cuda-opencl=12.4.127=0
+  - cuda-profiler-api=11.8.86=0
+  - cuda-runtime=11.8.0=0
+  - cuda-sanitizer-api=11.8.86=0
+  - cuda-toolkit=11.8.0=0
+  - cuda-tools=11.8.0=0
+  - cuda-visual-tools=11.8.0=0
+  - cycler=0.12.1=pyhd8ed1ab_0
+  - dbus=1.13.18=hb2f20db_0
+  - debugpy=1.6.7=py38h6a678d5_0
+  - defusedxml=0.7.1=pyhd8ed1ab_0
+  - dill=0.3.9=pyhd8ed1ab_0
+  - docker-pycreds=0.4.0=py_0
+  - entrypoints=0.4=pyhd8ed1ab_0
+  - exceptiongroup=1.2.2=pyhd8ed1ab_0
+  - executing=2.1.0=pyhd8ed1ab_0
+  - expat=2.6.4=h5888daf_0
+  - fastcache=1.1.0=py38h7b6447c_0
+  - ffmpeg=4.3=hf484d3e_0
+  - filelock=3.13.1=py38h06a4308_0
+  - fontconfig=2.14.0=h8e229c2_0
+  - fqdn=1.5.1=pyhd8ed1ab_0
+  - freetype=2.10.4=h0708190_1
+  - fvcore=0.1.5.post20210915=py38
+  - gds-tools=1.4.0.31=0
+  - geos=3.10.2=h9c3ff4c_0
+  - giflib=5.2.2=h5eee18b_0
+  - glib=2.78.4=h6a678d5_0
+  - glib-tools=2.78.4=h6a678d5_0
+  - gmp=6.3.0=h6a678d5_0
+  - gmpy2=2.1.2=py38heeb90bb_0
+  - gnutls=3.6.15=he1e5248_0
+  - google-auth=2.35.0=pyhff2d567_0
+  - google-auth-oauthlib=1.0.0=pyhd8ed1ab_1
+  - grpcio=1.62.2=py38h6a678d5_0
+  - gst-plugins-base=1.14.1=h6a678d5_1
+  - gstreamer=1.14.1=h5eee18b_1
+  - gym-notices=0.0.8=pyhd8ed1ab_0
+  - h11=0.14.0=pyhd8ed1ab_0
+  - h2=4.1.0=pyhd8ed1ab_0
+  - hpack=4.0.0=pyh9f0ad1d_0
+  - httpcore=1.0.7=pyh29332c3_1
+  - httpx=0.27.2=pyhd8ed1ab_0
+  - hyperframe=6.0.1=pyhd8ed1ab_0
+  - icu=58.2=hf484d3e_1000
+  - idna=3.10=pyhd8ed1ab_0
+  - importlib-metadata=8.5.0=pyha770c72_0
+  - importlib_metadata=8.5.0=hd8ed1ab_1
+  - importlib_resources=6.4.5=pyhd8ed1ab_0
+  - intel-openmp=2021.4.0=h06a4308_3561
+  - iopath=0.1.9=py38
+  - ipykernel=6.29.5=pyh3099207_0
+  - ipython=8.12.2=pyh41d4057_0
+  - ipywidgets=8.1.5=pyhd8ed1ab_0
+  - isoduration=20.11.0=pyhd8ed1ab_0
+  - jbig=2.1=h7f98852_2003
+  - jedi=0.19.1=pyhd8ed1ab_0
+  - jinja2=3.1.4=pyhd8ed1ab_0
+  - jpeg=9e=h166bdaf_1
+  - json5=0.9.25=pyhd8ed1ab_0
+  - jsonpointer=3.0.0=py38h578d9bd_0
+  - jsonschema=4.23.0=pyhd8ed1ab_0
+  - jsonschema-specifications=2024.10.1=pyhd8ed1ab_0
+  - jsonschema-with-format-nongpl=4.23.0=hd8ed1ab_1
+  - jupyter=1.1.1=pyhd8ed1ab_0
+  - jupyter-lsp=2.2.5=pyhd8ed1ab_0
+  - jupyter_client=8.6.3=pyhd8ed1ab_0
+  - jupyter_console=6.6.3=pyhd8ed1ab_0
+  - jupyter_core=5.7.2=pyh31011fe_1
+  - jupyter_events=0.10.0=pyhd8ed1ab_0
+  - jupyter_server=2.14.2=pyhd8ed1ab_0
+  - jupyter_server_terminals=0.5.3=pyhd8ed1ab_0
+  - jupyterlab=4.2.5=pyhd8ed1ab_0
+  - jupyterlab_pygments=0.3.0=pyhd8ed1ab_1
+  - jupyterlab_server=2.27.3=pyhd8ed1ab_0
+  - jupyterlab_widgets=3.0.13=pyhd8ed1ab_0
+  - krb5=1.20.1=h143b758_1
+  - lame=3.100=h7b6447c_0
+  - lcms2=2.12=hddcbb42_0
+  - ld_impl_linux-64=2.40=h12ee557_0
+  - lerc=2.2.1=h9c3ff4c_0
+  - libabseil=20240116.2=cxx17_h6a678d5_0
+  - libblas=3.9.0=12_linux64_mkl
+  - libbrotlicommon=1.1.0=hb9d3cd8_2
+  - libbrotlidec=1.1.0=hb9d3cd8_2
+  - libbrotlienc=1.1.0=hb9d3cd8_2
+  - libcblas=3.9.0=12_linux64_mkl
+  - libclang=10.0.1=default_hde54327_1
+  - libcublas=11.11.3.6=0
+  - libcublas-dev=11.11.3.6=0
+  - libcufft=10.9.0.58=0
+  - libcufft-dev=10.9.0.58=0
+  - libcufile=1.9.1.3=0
+  - libcufile-dev=1.4.0.31=0
+  - libcurand=10.3.5.147=0
+  - libcurand-dev=10.3.0.86=0
+  - libcusolver=11.4.1.48=0
+  - libcusolver-dev=11.4.1.48=0
+  - libcusparse=11.7.5.86=0
+  - libcusparse-dev=11.7.5.86=0
+  - libdeflate=1.7=h7f98852_5
+  - libedit=3.1.20230828=h5eee18b_0
+  - libevent=2.1.12=hf998b51_1
+  - libexpat=2.6.4=h5888daf_0
+  - libffi=3.4.4=h6a678d5_1
+  - libgcc=14.2.0=h767d61c_2
+  - libgcc-ng=14.2.0=h69a702a_2
+  - libgfortran-ng=13.2.0=h69a702a_0
+  - libgfortran5=13.2.0=ha4646dd_0
+  - libglib=2.78.4=hdc74915_0
+  - libgomp=14.2.0=h767d61c_2
+  - libgrpc=1.62.2=h2d74bed_0
+  - libiconv=1.16=h5eee18b_3
+  - libidn2=2.3.4=h5eee18b_0
+  - libjpeg-turbo=2.0.0=h9bf148f_0
+  - liblapack=3.9.0=12_linux64_mkl
+  - libllvm10=10.0.1=he513fc3_3
+  - libnpp=11.8.0.86=0
+  - libnpp-dev=11.8.0.86=0
+  - libnvfatbin=12.4.127=0
+  - libnvjitlink=12.4.127=0
+  - libnvjpeg=11.9.0.86=0
+  - libnvjpeg-dev=11.9.0.86=0
+  - libopenblas=0.3.21=h043d6bf_0
+  - libpng=1.6.37=h21135ba_2
+  - libpq=12.20=hdbd6064_0
+  - libprotobuf=4.25.3=he621ea3_0
+  - libsodium=1.0.18=h36c2ea0_1
+  - libstdcxx=14.2.0=h8f9b012_2
+  - libstdcxx-ng=11.2.0=h1234567_1
+  - libtasn1=4.19.0=h5eee18b_0
+  - libtiff=4.3.0=hf544144_1
+  - libunistring=0.9.10=h27cfd23_0
+  - libuuid=2.38.1=h0b41bf4_0
+  - libwebp=1.2.2=h55f646e_0
+  - libwebp-base=1.2.2=h7f98852_1
+  - libxcb=1.17.0=h8a09558_0
+  - libxkbcommon=1.0.3=he3ba5ed_0
+  - libxml2=2.9.14=h74e7548_0
+  - llvm-openmp=14.0.6=h9e868ea_0
+  - lz4-c=1.9.4=h6a678d5_1
+  - markdown=3.6=pyhd8ed1ab_0
+  - markupsafe=2.1.1=py38h0a891b7_1
+  - matplotlib-base=3.7.2=py38h1128e8f_0
+  - matplotlib-inline=0.1.7=pyhd8ed1ab_0
+  - metis=5.1.0=hd0bcaf9_1007
+  - mistune=3.0.2=pyhd8ed1ab_0
+  - mkl=2021.4.0=h06a4308_640
+  - mkl-service=2.4.0=py38h7f8727e_0
+  - mkl_fft=1.3.1=py38hd3c417c_0
+  - mkl_random=1.2.2=py38h51133e4_0
+  - mpc=1.3.1=h5eee18b_0
+  - mpfr=4.2.1=h90cbb55_3
+  - mpmath=1.3.0=py38h06a4308_0
+  - multidict=6.0.2=py38h0a891b7_1
+  - munkres=1.1.4=pyh9f0ad1d_0
+  - nbclient=0.10.2=pyhd8ed1ab_0
+  - nbconvert-core=7.16.4=pyhff2d567_2
+  - nbformat=5.10.4=pyhd8ed1ab_0
+  - ncurses=6.4=h6a678d5_0
+  - nest-asyncio=1.6.0=pyhd8ed1ab_0
+  - nettle=3.7.3=hbbd107a_1
+  - ninja-base=1.12.1=hdb19cb5_0
+  - notebook=7.2.2=pyhd8ed1ab_0
+  - notebook-shim=0.2.4=pyhd8ed1ab_0
+  - nsight-compute=2022.3.0.22=0
+  - nspr=4.36=h5888daf_0
+  - nss=3.89.1=h6a678d5_0
+  - oauthlib=3.2.2=pyhd8ed1ab_0
+  - olefile=0.47=pyhd8ed1ab_0
+  - omegaconf=2.3.0=pyhd8ed1ab_0
+  - openh264=2.1.1=h4ff587b_0
+  - openjpeg=2.4.0=hb52868f_1
+  - openssl=3.4.1=h7b32b05_0
+  - overrides=7.7.0=pyhd8ed1ab_0
+  - packaging=24.2=pyhd8ed1ab_2
+  - pandas=1.4.2=py38h47df419_1
+  - pandocfilters=1.5.0=pyhd8ed1ab_0
+  - parso=0.8.4=pyhd8ed1ab_0
+  - pcre2=10.42=hebb0a14_1
+  - pexpect=4.9.0=pyhd8ed1ab_0
+  - pickleshare=0.7.5=py_1003
+  - pillow=9.4.0=py38h6a678d5_0
+  - pip=24.2=py38h06a4308_0
+  - pkgutil-resolve-name=1.3.10=pyhd8ed1ab_1
+  - platformdirs=4.3.6=pyhd8ed1ab_0
+  - plotly=5.24.1=pyhd8ed1ab_0
+  - portalocker=2.10.1=py38h578d9bd_0
+  - prometheus_client=0.21.0=pyhd8ed1ab_0
+  - prompt-toolkit=3.0.48=pyha770c72_0
+  - prompt_toolkit=3.0.48=hd8ed1ab_1
+  - pthread-stubs=0.4=hb9d3cd8_1002
+  - ptyprocess=0.7.0=pyhd3deb0d_0
+  - pure_eval=0.2.3=pyhd8ed1ab_0
+  - pyasn1=0.6.1=pyhd8ed1ab_1
+  - pyasn1-modules=0.4.1=pyhd8ed1ab_0
+  - pybullet=3.21=py38h43a58ef_1
+  - pycparser=2.22=pyhd8ed1ab_0
+  - pygments=2.18.0=pyhd8ed1ab_0
+  - pyjwt=2.9.0=pyhd8ed1ab_1
+  - pyopenssl=24.2.1=pyhd8ed1ab_2
+  - pyqt=5.15.4=py38hfa26641_0
+  - pyqt5-sip=12.9.0=py38hfa26641_0
+  - pysocks=1.7.1=pyha2e5f31_6
+  - python=3.8.20=he870216_0
+  - python-fastjsonschema=2.20.0=pyhd8ed1ab_0
+  - python-json-logger=2.0.7=pyhd8ed1ab_0
+  - python_abi=3.8=2_cp38
+  - pytorch=2.2.0=py3.8_cuda11.8_cudnn8.7.0_0
+  - pytorch-cuda=11.8=h7e8668a_6
+  - pytorch-mutex=1.0=cuda
+  - pytorch3d=0.7.8=py38_cu118_pyt220
+  - pytz=2024.2=pyhd8ed1ab_0
+  - pyu2f=0.1.5=pyhd8ed1ab_0
+  - pyyaml=6.0=py38h0a891b7_5
+  - pyzmq=25.1.2=py38h6a678d5_0
+  - qt-main=5.15.2=h327a75a_7
+  - re2=2022.04.01=h27087fc_0
+  - readline=8.2=h5eee18b_0
+  - referencing=0.35.1=pyhd8ed1ab_0
+  - requests=2.32.3=pyhd8ed1ab_0
+  - requests-oauthlib=2.0.0=pyhd8ed1ab_0
+  - rfc3339-validator=0.1.4=pyhd8ed1ab_0
+  - rfc3986-validator=0.1.1=pyh9f0ad1d_0
+  - rpds-py=0.20.0=py38h4005ec7_0
+  - rsa=4.9=pyhd8ed1ab_0
+  - send2trash=1.8.3=pyh0d859eb_0
+  - setuptools=75.1.0=py38h06a4308_0
+  - shapely=1.8.2=py38h97f7145_1
+  - sip=6.5.1=py38h709712a_2
+  - six=1.16.0=pyh6c4a22f_0
+  - sniffio=1.3.1=pyhd8ed1ab_0
+  - soupsieve=2.5=pyhd8ed1ab_1
+  - sqlite=3.45.3=h5eee18b_0
+  - stack_data=0.6.2=pyhd8ed1ab_0
+  - suitesparse=5.10.1=h9e50725_1
+  - sympy=1.5.1=py38_0
+  - tabulate=0.9.0=pyhd8ed1ab_1
+  - tbb=2021.5.0=h924138e_1
+  - tenacity=9.0.0=pyhd8ed1ab_0
+  - tensorboard=2.13.0=pyhd8ed1ab_0
+  - tensorboard-data-server=0.7.0=py38h52d8a92_1
+  - termcolor=2.4.0=pyhd8ed1ab_0
+  - terminado=0.18.1=pyh0d859eb_0
+  - tinycss2=1.4.0=pyhd8ed1ab_0
+  - tk=8.6.14=h39e8969_0
+  - toml=0.10.2=pyhd8ed1ab_0
+  - tomli=2.0.2=pyhd8ed1ab_0
+  - torchaudio=2.2.0=py38_cu118
+  - torchtriton=2.2.0=py38
+  - torchvision=0.17.0=py38_cu118
+  - tornado=6.4.1=py38hfb59056_0
+  - tqdm=4.67.1=pyhd8ed1ab_0
+  - traitlets=5.14.3=pyhd8ed1ab_0
+  - types-python-dateutil=2.9.0.20241003=pyhff2d567_0
+  - typing-extensions=4.12.2=hd8ed1ab_0
+  - typing_extensions=4.12.2=pyha770c72_0
+  - typing_utils=0.1.0=pyhd8ed1ab_0
+  - unicodedata2=15.1.0=py38h01eb140_0
+  - uri-template=1.3.0=pyhd8ed1ab_0
+  - urllib3=2.2.3=pyhd8ed1ab_0
+  - wcwidth=0.2.13=pyhd8ed1ab_0
+  - webcolors=24.8.0=pyhd8ed1ab_0
+  - webencodings=0.5.1=pyhd8ed1ab_2
+  - websocket-client=1.8.0=pyhd8ed1ab_0
+  - werkzeug=3.0.6=pyhd8ed1ab_0
+  - wheel=0.44.0=py38h06a4308_0
+  - widgetsnbextension=4.0.13=pyhd8ed1ab_0
+  - xorg-libx11=1.8.11=h4f16b4b_0
+  - xorg-libxau=1.0.12=hb9d3cd8_0
+  - xorg-libxdmcp=1.1.5=hb9d3cd8_0
+  - xorg-libxext=1.3.6=hb9d3cd8_0
+  - xz=5.6.4=h5eee18b_1
+  - yacs=0.1.8=pyhd8ed1ab_0
+  - yaml=0.2.5=h7f98852_2
+  - yarl=1.7.2=py38h0a891b7_2
+  - zeromq=4.3.5=h6a678d5_0
+  - zipp=3.21.0=pyhd8ed1ab_0
+  - zlib=1.2.13=h5eee18b_1
+  - zstandard=0.23.0=py38h2c38b39_0
+  - zstd=1.5.6=hc292b87_0
+  - pip:
+      - aerial-gym==2.0.0
+      - cloudpickle==3.1.1
+      - colorlog==6.9.0
+      - contourpy==1.1.1
+      - cython==3.0.12
+      - decorator==5.2.1
+      - farama-notifications==0.0.4
+      - faster-fifo==1.4.7
+      - fonttools==4.56.0
+      - freetype-py==2.5.1
+      - fsspec==2025.2.0
+      - gitdb==4.0.12
+      - gitpython==3.1.44
+      - gym==0.23.1
+      - gymnasium==0.29.1
+      - huggingface-hub==0.29.1
+      - imageio==2.35.1
+      - kiwisolver==1.4.7
+      - lxml==5.3.1
+      - matplotlib==3.7.5
+      - networkx==2.2
+      - ninja==1.11.1.3
+      - numpy==1.23.0
+      - opencv-python==4.11.0.86
+      - pathtools==0.1.2
+      - promise==2.3
+      - protobuf==3.20.3
+      - psutil==5.9.8
+      - pycollada==0.6
+      - pygame==2.1.0
+      - pyglet==2.1.3
+      - pyopengl==3.1.0
+      - pyparsing==3.1.4
+      - pyrender==0.1.45
+      - python-dateutil==2.9.0.post0
+      - rl-games==1.6.1
+      - sample-factory==2.1.1
+      - scipy==1.10.1
+      - sentry-sdk==2.22.0
+      - setproctitle==1.3.5
+      - shortuuid==1.0.13
+      - signal-slot-mp==1.0.5
+      - smmap==5.0.2
+      - tensorboardx==2.6.2.2
+      - threadpoolctl==3.5.0
+      - trimesh==4.6.3
+      - wandb==0.12.21
+      - warp-lang==1.0.0b5
+prefix: /home/shruti/miniconda3/envs/aerialgym
diff --git a/aerial_gym/rl_training/rl_games/wandb/run-20250226_214902-wkejie5v/files/config.yaml b/aerial_gym/rl_training/rl_games/wandb/run-20250226_214902-wkejie5v/files/config.yaml
new file mode 100644
index 0000000..9cb5873
--- /dev/null
+++ b/aerial_gym/rl_training/rl_games/wandb/run-20250226_214902-wkejie5v/files/config.yaml
@@ -0,0 +1,94 @@
+wandb_version: 1
+
+params:
+  desc: null
+  value:
+    seed: 10
+    algo:
+      name: a2c_continuous
+    model:
+      name: continuous_a2c_logstd
+    load_checkpoint: false
+    network:
+      name: actor_critic
+      separate: false
+      space:
+        continuous:
+          mu_activation: None
+          sigma_activation: None
+          mu_init:
+            name: default
+          sigma_init:
+            name: const_initializer
+            val: 0
+          fixed_sigma: true
+      mlp:
+        units:
+        - 256
+        - 128
+        - 64
+        d2rl: false
+        activation: elu
+        initializer:
+          name: default
+          scale: 2
+    config:
+      env_name: navigation_task
+      env_config:
+        num_envs: 16
+        headless: false
+        use_warp: true
+      name: gen_ppo
+      reward_shaper:
+        scale_value: 0.1
+      normalize_advantage: true
+      gamma: 0.98
+      tau: 0.95
+      ppo: true
+      learning_rate: 1e-4
+      lr_schedule: adaptive
+      kl_threshold: 0.016
+      save_best_after: 10
+      score_to_win: 100000
+      grad_norm: 1.0
+      entropy_coef: 0
+      truncate_grads: true
+      e_clip: 0.2
+      clip_value: false
+      num_actors: 16
+      horizon_length: 32
+      minibatch_size: 2048
+      mini_epochs: 4
+      critic_coef: 2
+      normalize_input: true
+      bounds_loss_coef: 0.0001
+      max_epochs: 500
+      normalize_value: true
+      use_diagnostics: true
+      value_bootstrap: true
+      use_smooth_clamp: false
+      player:
+        use_vecenv: true
+_wandb:
+  desc: null
+  value:
+    code_path: code/aerial_gym/rl_training/rl_games/runner.py
+    python_version: 3.8.20
+    cli_version: 0.16.6
+    framework: torch
+    is_jupyter_run: false
+    is_kaggle_kernel: false
+    start_time: 1740624542.0
+    t:
+      1:
+      - 1
+      - 55
+      3:
+      - 16
+      - 23
+      - 35
+      4: 3.8.20
+      5: 0.16.6
+      8:
+      - 5
+      13: linux-x86_64
diff --git a/aerial_gym/rl_training/rl_games/wandb/run-20250226_214902-wkejie5v/files/diff.patch b/aerial_gym/rl_training/rl_games/wandb/run-20250226_214902-wkejie5v/files/diff.patch
new file mode 100644
index 0000000..a7ff8db
--- /dev/null
+++ b/aerial_gym/rl_training/rl_games/wandb/run-20250226_214902-wkejie5v/files/diff.patch
@@ -0,0 +1,38 @@
+diff --git a/aerial_gym/config/task_config/navigation_task_config.py b/aerial_gym/config/task_config/navigation_task_config.py
+index 7ecbda5..2f838d7 100644
+--- a/aerial_gym/config/task_config/navigation_task_config.py
++++ b/aerial_gym/config/task_config/navigation_task_config.py
+@@ -19,7 +19,7 @@ class task_config:
+     episode_len_steps = 100  # real physics time for simulation is this value multiplied by sim.dt
+ 
+     return_state_before_reset = (
+-        False  # False as usually state is returned for next episode after reset
++        True  # False as usually state is returned for next episode after reset
+     )
+     # user can set the above to true if they so desire
+ 
+diff --git a/aerial_gym/rl_training/rl_games/runner.py b/aerial_gym/rl_training/rl_games/runner.py
+index 7e8ffb4..bd45a3c 100644
+--- a/aerial_gym/rl_training/rl_games/runner.py
++++ b/aerial_gym/rl_training/rl_games/runner.py
+@@ -255,7 +255,7 @@ def get_args():
+             "name": "--use_warp",
+             "type": lambda x: bool(distutils.util.strtobool(x)),
+             "default": "True",
+-            "help": "Choose whether to use warp or Isaac Gym rendeing pipeline.",
++            "help": "Choose whether to use warp or Isaac Gym rendering pipeline.",
+         },
+     ]
+ 
+diff --git a/aerial_gym/task/__init__.py b/aerial_gym/task/__init__.py
+index 7dd966d..7975a4d 100644
+--- a/aerial_gym/task/__init__.py
++++ b/aerial_gym/task/__init__.py
+@@ -95,5 +95,5 @@ task_registry.register_task(
+ 
+ ## Uncomment this to use custom tasks
+ 
+-# from aerial_gym.task.custom_task.custom_task import CustomTask
+-# task_registry.register_task("custom_task", CustomTask, custom_task.task_config)
++#from aerial_gym.task.custom_task.custom_task import CustomTask
++#task_registry.register_task("custom_task", CustomTask, custom_task.task_config)
diff --git a/aerial_gym/rl_training/rl_games/wandb/run-20250226_214902-wkejie5v/files/output.log b/aerial_gym/rl_training/rl_games/wandb/run-20250226_214902-wkejie5v/files/output.log
new file mode 100644
index 0000000..88265ec
--- /dev/null
+++ b/aerial_gym/rl_training/rl_games/wandb/run-20250226_214902-wkejie5v/files/output.log
@@ -0,0 +1,57 @@
+Started to play
+[BasePlayer] Creating vecenv:  navigation_task
+[isaacgym:gymutil.py] Unknown args:  ['--file=./ppo_aerial_quad_navigation.yaml', '--play', '--checkpoint=./runs/gen_ppo_26-16-11-42/nn/last_gen_ppo_ep_500_rew__377.14606_.pth', '--track', 'wandb-project-name=Trained_RL_Navigation', 'wandb-entity=shrutiroy03']
+[37m[4406 ms][base_task] - INFO : Setting seed: 345868382 (base_task.py:38)
+[37m[4406 ms][navigation_task] - INFO : Building environment for navigation task. (navigation_task.py:44)
+[37m[4406 ms][navigation_task] - INFO : Sim Name: base_sim, Env Name: env_with_obstacles, Robot Name: lmf2, Controller Name: lmf2_velocity_control (navigation_task.py:45)
+[37m[4407 ms][env_manager] - INFO : Populating environments. (env_manager.py:73)
+[37m[4407 ms][env_manager] - INFO : Creating simulation instance. (env_manager.py:87)
+[37m[4407 ms][env_manager] - INFO : Instantiating IGE object. (env_manager.py:88)
+[37m[4407 ms][IsaacGymEnvManager] - INFO : Creating Isaac Gym Environment (IGE_env_manager.py:41)
+[37m[4407 ms][IsaacGymEnvManager] - INFO : Acquiring gym object (IGE_env_manager.py:73)
+[37m[4407 ms][IsaacGymEnvManager] - INFO : Acquired gym object (IGE_env_manager.py:75)
+[37m[4407 ms][IsaacGymEnvManager] - INFO : Fixing devices (IGE_env_manager.py:89)
+[37m[4408 ms][IsaacGymEnvManager] - INFO : Using GPU pipeline for simulation. (IGE_env_manager.py:102)
+[37m[4408 ms][IsaacGymEnvManager] - INFO : Sim Device type: cuda, Sim Device ID: 0 (IGE_env_manager.py:105)
+[37m[4408 ms][IsaacGymEnvManager] - INFO : Graphics Device ID: 0 (IGE_env_manager.py:119)
+[37m[4408 ms][IsaacGymEnvManager] - INFO : Creating Isaac Gym Simulation Object (IGE_env_manager.py:120)
+[33m[4408 ms][IsaacGymEnvManager] - WARNING : If you have set the CUDA_VISIBLE_DEVICES environment variable, please ensure that you set it
+[33mto a particular one that works for your system to use the viewer or Isaac Gym cameras.
+[33mIf you want to run parallel simulations on multiple GPUs with camera sensors,
+[33mplease disable Isaac Gym and use warp (by setting use_warp=True), set the viewer to headless. (IGE_env_manager.py:127)
+[33m[4408 ms][IsaacGymEnvManager] - WARNING : If you see a segfault in the next lines, it is because of the discrepancy between the CUDA device and the graphics device.
+[33mPlease ensure that the CUDA device and the graphics device are the same. (IGE_env_manager.py:132)
+[37m[5219 ms][IsaacGymEnvManager] - INFO : Created Isaac Gym Simulation Object (IGE_env_manager.py:136)
+[37m[5219 ms][IsaacGymEnvManager] - INFO : Created Isaac Gym Environment (IGE_env_manager.py:43)
+[37m[5321 ms][env_manager] - INFO : IGE object instantiated. (env_manager.py:109)
+[37m[5321 ms][env_manager] - INFO : Creating warp environment. (env_manager.py:112)
+[37m[5321 ms][env_manager] - INFO : Warp environment created. (env_manager.py:114)
+[37m[5321 ms][env_manager] - INFO : Creating robot manager. (env_manager.py:118)
+[37m[5321 ms][BaseRobot] - INFO : [DONE] Initializing controller (base_robot.py:26)
+[37m[5321 ms][BaseRobot] - INFO : Initializing controller lmf2_velocity_control (base_robot.py:29)
+[33m[5321 ms][base_multirotor] - WARNING : Creating 16 multirotors. (base_multirotor.py:32)
+[37m[5321 ms][env_manager] - INFO : [DONE] Creating robot manager. (env_manager.py:123)
+[37m[5322 ms][env_manager] - INFO : [DONE] Creating simulation instance. (env_manager.py:125)
+[37m[5322 ms][asset_loader] - INFO : Loading asset: model.urdf for the first time. Next use of this asset will be via the asset buffer. (asset_loader.py:71)
+[37m[5322 ms][asset_loader] - INFO : Loading asset: panel.urdf for the first time. Next use of this asset will be via the asset buffer. (asset_loader.py:71)
+[37m[5324 ms][asset_loader] - INFO : Loading asset: 0_5_x_0_5_wall.urdf for the first time. Next use of this asset will be via the asset buffer. (asset_loader.py:71)
+[37m[5325 ms][asset_loader] - INFO : Loading asset: cuboidal_rod.urdf for the first time. Next use of this asset will be via the asset buffer. (asset_loader.py:71)
+[37m[5326 ms][asset_loader] - INFO : Loading asset: 1_x_1_wall.urdf for the first time. Next use of this asset will be via the asset buffer. (asset_loader.py:71)
+[37m[5327 ms][asset_loader] - INFO : Loading asset: left_wall.urdf for the first time. Next use of this asset will be via the asset buffer. (asset_loader.py:71)
+[37m[5327 ms][asset_loader] - INFO : Loading asset: right_wall.urdf for the first time. Next use of this asset will be via the asset buffer. (asset_loader.py:71)
+[37m[5328 ms][asset_loader] - INFO : Loading asset: back_wall.urdf for the first time. Next use of this asset will be via the asset buffer. (asset_loader.py:71)
+[37m[5329 ms][asset_loader] - INFO : Loading asset: front_wall.urdf for the first time. Next use of this asset will be via the asset buffer. (asset_loader.py:71)
+[37m[5330 ms][asset_loader] - INFO : Loading asset: bottom_wall.urdf for the first time. Next use of this asset will be via the asset buffer. (asset_loader.py:71)
+[37m[5331 ms][asset_loader] - INFO : Loading asset: top_wall.urdf for the first time. Next use of this asset will be via the asset buffer. (asset_loader.py:71)
+[37m[5332 ms][asset_loader] - INFO : Loading asset: small_cube.urdf for the first time. Next use of this asset will be via the asset buffer. (asset_loader.py:71)
+[37m[5333 ms][env_manager] - INFO : Populating environment 0 (env_manager.py:179)
+[33m[5413 ms][robot_manager] - WARNING : 
+[33mRobot mass: 1.2400000467896461,
+[33mInertia: tensor([[0.0134, 0.0000, 0.0000],
+[33m        [0.0000, 0.0144, 0.0000],
+[33m        [0.0000, 0.0000, 0.0138]], device='cuda:0'),
+[33mRobot COM: tensor([[0., 0., 0., 1.]], device='cuda:0') (robot_manager.py:427)
+[33m[5413 ms][robot_manager] - WARNING : Calculated robot mass and inertia for this robot. This code assumes that your robot is the same across environments. (robot_manager.py:430)
+[31m[5413 ms][robot_manager] - CRITICAL : If your robot differs across environments you need to perform this computation for each different robot here. (robot_manager.py:433)
+[37m[5432 ms][env_manager] - INFO : [DONE] Populating environments. (env_manager.py:75)
+[33m[5439 ms][IsaacGymEnvManager] - WARNING : Headless: False (IGE_env_manager.py:424)
diff --git a/aerial_gym/rl_training/rl_games/wandb/run-20250226_214902-wkejie5v/files/requirements.txt b/aerial_gym/rl_training/rl_games/wandb/run-20250226_214902-wkejie5v/files/requirements.txt
new file mode 100644
index 0000000..a906a9d
--- /dev/null
+++ b/aerial_gym/rl_training/rl_games/wandb/run-20250226_214902-wkejie5v/files/requirements.txt
@@ -0,0 +1,264 @@
+Brotli==1.0.9
+Cython==3.0.12
+Farama-Notifications==0.0.4
+GitPython==3.1.43
+GitPython==3.1.44
+Jinja2==3.1.4
+Markdown==3.6
+MarkupSafe==2.1.1
+Pillow==9.4.0
+PyJWT==2.9.0
+PyOpenGL==3.1.0
+PyQt5-sip==12.9.0
+PyQt5==5.15.4
+PySocks==1.7.1
+PyYAML==6.0
+Pygments==2.18.0
+Send2Trash==1.8.3
+Shapely==1.8.2
+Werkzeug==3.0.6
+absl-py==2.1.0
+aerial_gym==2.0.0
+aiohttp==3.7.4.post0
+antlr4-python3-runtime==4.9.3
+anyio==4.5.0
+appdirs==1.4.4
+argon2-cffi-bindings==21.2.0
+argon2-cffi==23.1.0
+arrow==1.3.0
+asttokens==3.0.0
+async-lru==2.0.4
+async-timeout==3.0.1
+attrs==24.2.0
+autocommand==2.2.2
+babel==2.16.0
+backcall==0.2.0
+backports.tarfile==1.2.0
+beautifulsoup4==4.12.3
+bleach==6.1.0
+blinker==1.8.2
+cached-property==1.5.2
+cachetools==5.5.0
+certifi==2024.8.30
+cffi==1.15.0
+chardet==4.0.0
+charset-normalizer==3.4.0
+click==8.1.7
+cloudpickle==3.1.0
+cloudpickle==3.1.1
+colorama==0.4.6
+colorlog==6.9.0
+comm==0.2.2
+contourpy==1.0.2
+contourpy==1.1.1
+cryptography==43.0.0
+cycler==0.12.1
+debugpy==1.6.7
+decorator==5.1.1
+decorator==5.2.1
+defusedxml==0.7.1
+dill==0.3.9
+docker-pycreds==0.4.0
+entrypoints==0.4
+exceptiongroup==1.2.2
+executing==2.1.0
+fastcache==1.1.0
+faster-fifo==1.4.7
+fastjsonschema==2.20.0
+filelock==3.13.1
+fonttools==4.53.1
+fonttools==4.56.0
+fqdn==1.5.1
+freetype-py==2.5.1
+fsspec==2025.2.0
+fvcore==0.1.5.post20210915
+gitdb==4.0.11
+gitdb==4.0.12
+gmpy2==2.1.2
+google-auth-oauthlib==1.0.0
+google-auth==2.35.0
+grpcio==1.62.2
+gym-notices==0.0.8
+gym==0.23.1
+gym==0.26.1
+gymnasium==0.29.1
+h11==0.14.0
+h2==4.1.0
+hpack==4.0.0
+httpcore==1.0.7
+httpx==0.27.2
+huggingface-hub==0.29.1
+hyperframe==6.0.1
+idna==3.10
+imageio==2.35.1
+importlib_metadata==8.0.0
+importlib_metadata==8.5.0
+importlib_resources==6.4.0
+importlib_resources==6.4.5
+inflect==7.3.1
+iopath==0.1.9
+ipykernel==6.29.5
+ipython==8.12.2
+ipywidgets==8.1.5
+isaacgym==1.0rc4
+isoduration==20.11.0
+jaraco.collections==5.1.0
+jaraco.context==5.3.0
+jaraco.functools==4.0.1
+jaraco.text==3.12.1
+jedi==0.19.1
+json5==0.9.25
+jsonpointer==3.0.0
+jsonschema-specifications==2024.10.1
+jsonschema==4.23.0
+jupyter-console==6.6.3
+jupyter-events==0.10.0
+jupyter-lsp==2.2.5
+jupyter==1.1.1
+jupyter_client==8.6.3
+jupyter_core==5.7.2
+jupyter_server==2.14.2
+jupyter_server_terminals==0.5.3
+jupyterlab==4.2.5
+jupyterlab_pygments==0.3.0
+jupyterlab_server==2.27.3
+jupyterlab_widgets==3.0.13
+kiwisolver==1.4.2
+kiwisolver==1.4.7
+lxml==5.3.1
+matplotlib-inline==0.1.7
+matplotlib==3.7.2
+matplotlib==3.7.5
+mistune==3.0.2
+mkl-fft==1.3.1
+mkl-random==1.2.2
+mkl-service==2.4.0
+more-itertools==10.3.0
+mpmath==1.3.0
+multidict==6.0.2
+munkres==1.1.4
+nbclient==0.10.2
+nbconvert==7.16.4
+nbformat==5.10.4
+nest_asyncio==1.6.0
+networkx==2.2
+networkx==3.1
+ninja==1.11.1.3
+notebook==7.2.2
+notebook_shim==0.2.4
+numpy==1.23.0
+oauthlib==3.2.2
+olefile==0.47
+omegaconf==2.3.0
+opencv-python==4.11.0.86
+overrides==7.7.0
+packaging==24.1
+packaging==24.2
+pandas==1.4.2
+pandocfilters==1.5.0
+parso==0.8.4
+pathtools==0.1.2
+pexpect==4.9.0
+pickleshare==0.7.5
+pip==24.2
+pkgutil_resolve_name==1.3.10
+platformdirs==4.2.2
+platformdirs==4.3.6
+plotly==5.24.1
+portalocker==2.10.1
+prometheus_client==0.21.0
+promise==2.3
+prompt_toolkit==3.0.48
+protobuf==3.20.3
+protobuf==4.25.3
+psutil==5.9.8
+psutil==6.0.0
+ptyprocess==0.7.0
+pure_eval==0.2.3
+pyOpenSSL==24.2.1
+pyasn1==0.6.1
+pyasn1_modules==0.4.1
+pybullet==3.2.0
+pycollada==0.6
+pycparser==2.22
+pygame==2.1.0
+pyglet==2.1.3
+pyparsing==3.0.9
+pyparsing==3.1.4
+pyrender==0.1.45
+python-dateutil==2.9.0
+python-dateutil==2.9.0.post0
+python-json-logger==2.0.7
+pytorch3d==0.7.8
+pytz==2024.2
+pyu2f==0.1.5
+pyzmq==25.1.2
+referencing==0.35.1
+requests-oauthlib==2.0.0
+requests==2.32.3
+rfc3339-validator==0.1.4
+rfc3986-validator==0.1.1
+rl_games==1.6.1
+rpds-py==0.20.0
+rsa==4.9
+sample-factory==2.1.1
+scipy==1.10.1
+sentry-sdk==2.19.2
+sentry-sdk==2.22.0
+setproctitle==1.3.3
+setproctitle==1.3.5
+setuptools==75.1.0
+shortuuid==1.0.13
+signal-slot-mp==1.0.5
+sip==6.5.1
+six==1.16.0
+smmap==5.0.0
+smmap==5.0.2
+sniffio==1.3.1
+soupsieve==2.5
+stack-data==0.6.2
+sympy==1.5.1
+tabulate==0.9.0
+tenacity==9.0.0
+tensorboard==2.13.0
+tensorboardX==2.6.2.2
+tensorboard_data_server==0.7.0
+termcolor==2.4.0
+terminado==0.18.1
+threadpoolctl==3.5.0
+tinycss2==1.4.0
+toml==0.10.2
+tomli==2.0.1
+tomli==2.0.2
+torch==2.2.0
+torchaudio==2.2.0
+torchvision==0.17.0
+tornado==6.4.1
+tqdm==4.67.1
+traitlets==5.14.3
+trimesh==4.6.3
+triton==2.2.0
+typeguard==4.3.0
+types-python-dateutil==2.9.0.20241003
+typing-utils==0.1.0
+typing_extensions==4.12.2
+typing_extensions==4.12.2
+unicodedata2==15.1.0
+urdfpy==0.0.22
+uri-template==1.3.0
+urllib3==2.2.3
+wandb==0.12.21
+wandb==0.16.6
+warp-lang==1.0.0b5
+wcwidth==0.2.13
+webcolors==24.8.0
+webencodings==0.5.1
+websocket-client==1.8.0
+wheel==0.43.0
+wheel==0.44.0
+widgetsnbextension==4.0.13
+yacs==0.1.8
+yarl==1.7.2
+zipp==3.19.2
+zipp==3.21.0
+zstandard==0.23.0
\ No newline at end of file
diff --git a/aerial_gym/rl_training/rl_games/wandb/run-20250226_214902-wkejie5v/files/wandb-metadata.json b/aerial_gym/rl_training/rl_games/wandb/run-20250226_214902-wkejie5v/files/wandb-metadata.json
new file mode 100644
index 0000000..1855582
--- /dev/null
+++ b/aerial_gym/rl_training/rl_games/wandb/run-20250226_214902-wkejie5v/files/wandb-metadata.json
@@ -0,0 +1,156 @@
+{
+    "os": "Linux-6.5.0-44-generic-x86_64-with-glibc2.17",
+    "python": "3.8.20",
+    "heartbeatAt": "2025-02-27T02:49:02.752803",
+    "startedAt": "2025-02-27T02:49:02.467344",
+    "docker": null,
+    "cuda": null,
+    "args": [
+        "--file=./ppo_aerial_quad_navigation.yaml",
+        "--num_envs=16",
+        "--play",
+        "--checkpoint=./runs/gen_ppo_26-16-11-42/nn/last_gen_ppo_ep_500_rew__377.14606_.pth",
+        "--track",
+        "wandb-project-name=Trained_RL_Navigation",
+        "wandb-entity=shrutiroy03"
+    ],
+    "state": "running",
+    "program": "runner.py",
+    "codePathLocal": "runner.py",
+    "codePath": "aerial_gym/rl_training/rl_games/runner.py",
+    "git": {
+        "remote": "https://github.com/ntnu-arl/aerial_gym_simulator.git",
+        "commit": "85114e7514ed0f3f8cfecfa23c40dad106c528a1"
+    },
+    "email": null,
+    "root": "/home/shruti/workspaces/aerial_gym_ws/src/aerial_gym_simulator",
+    "host": "saferoboticslab-ASUS-TUF-Gaming-F15-FX507ZM-FX507ZM",
+    "username": "shruti",
+    "executable": "/home/shruti/miniconda3/envs/aerialgym/bin/python3",
+    "cpu_count": 14,
+    "cpu_count_logical": 20,
+    "cpu_freq": {
+        "current": 1284.35135,
+        "min": 400.0,
+        "max": 4180.0
+    },
+    "cpu_freq_per_core": [
+        {
+            "current": 400.0,
+            "min": 400.0,
+            "max": 4600.0
+        },
+        {
+            "current": 3382.316,
+            "min": 400.0,
+            "max": 4600.0
+        },
+        {
+            "current": 2113.273,
+            "min": 400.0,
+            "max": 4600.0
+        },
+        {
+            "current": 400.0,
+            "min": 400.0,
+            "max": 4600.0
+        },
+        {
+            "current": 3659.24,
+            "min": 400.0,
+            "max": 4700.0
+        },
+        {
+            "current": 400.0,
+            "min": 400.0,
+            "max": 4700.0
+        },
+        {
+            "current": 3973.88,
+            "min": 400.0,
+            "max": 4700.0
+        },
+        {
+            "current": 400.0,
+            "min": 400.0,
+            "max": 4700.0
+        },
+        {
+            "current": 3928.695,
+            "min": 400.0,
+            "max": 4600.0
+        },
+        {
+            "current": 400.0,
+            "min": 400.0,
+            "max": 4600.0
+        },
+        {
+            "current": 877.592,
+            "min": 400.0,
+            "max": 4600.0
+        },
+        {
+            "current": 3765.385,
+            "min": 400.0,
+            "max": 4600.0
+        },
+        {
+            "current": 2820.902,
+            "min": 400.0,
+            "max": 3500.0
+        },
+        {
+            "current": 400.0,
+            "min": 400.0,
+            "max": 3500.0
+        },
+        {
+            "current": 400.0,
+            "min": 400.0,
+            "max": 3500.0
+        },
+        {
+            "current": 400.0,
+            "min": 400.0,
+            "max": 3500.0
+        },
+        {
+            "current": 400.0,
+            "min": 400.0,
+            "max": 3500.0
+        },
+        {
+            "current": 1122.266,
+            "min": 400.0,
+            "max": 3500.0
+        },
+        {
+            "current": 400.0,
+            "min": 400.0,
+            "max": 3500.0
+        },
+        {
+            "current": 400.0,
+            "min": 400.0,
+            "max": 3500.0
+        }
+    ],
+    "disk": {
+        "/": {
+            "total": 937.3305015563965,
+            "used": 231.46016311645508
+        }
+    },
+    "gpu": "NVIDIA GeForce RTX 3060 Laptop GPU",
+    "gpu_count": 1,
+    "gpu_devices": [
+        {
+            "name": "NVIDIA GeForce RTX 3060 Laptop GPU",
+            "memory_total": 6442450944
+        }
+    ],
+    "memory": {
+        "total": 15.238014221191406
+    }
+}
diff --git a/aerial_gym/rl_training/rl_games/wandb/run-20250226_214902-wkejie5v/logs/debug-internal.log b/aerial_gym/rl_training/rl_games/wandb/run-20250226_214902-wkejie5v/logs/debug-internal.log
new file mode 100644
index 0000000..5f3788b
--- /dev/null
+++ b/aerial_gym/rl_training/rl_games/wandb/run-20250226_214902-wkejie5v/logs/debug-internal.log
@@ -0,0 +1,65 @@
+2025-02-26 21:49:02,471 INFO    StreamThr :18673 [internal.py:wandb_internal():86] W&B internal server running at pid: 18673, started at: 2025-02-26 21:49:02.471224
+2025-02-26 21:49:02,473 DEBUG   HandlerThread:18673 [handler.py:handle_request():146] handle_request: status
+2025-02-26 21:49:02,474 INFO    WriterThread:18673 [datastore.py:open_for_write():87] open: /home/shruti/workspaces/aerial_gym_ws/src/aerial_gym_simulator/aerial_gym/rl_training/rl_games/wandb/run-20250226_214902-wkejie5v/run-wkejie5v.wandb
+2025-02-26 21:49:02,474 DEBUG   SenderThread:18673 [sender.py:send():379] send: header
+2025-02-26 21:49:02,486 DEBUG   SenderThread:18673 [sender.py:send():379] send: run
+2025-02-26 21:49:02,668 INFO    SenderThread:18673 [dir_watcher.py:__init__():211] watching files in: /home/shruti/workspaces/aerial_gym_ws/src/aerial_gym_simulator/aerial_gym/rl_training/rl_games/wandb/run-20250226_214902-wkejie5v/files
+2025-02-26 21:49:02,668 INFO    SenderThread:18673 [sender.py:_start_run_threads():1124] run started: wkejie5v with start time 1740624542.470835
+2025-02-26 21:49:02,676 DEBUG   HandlerThread:18673 [handler.py:handle_request():146] handle_request: check_version
+2025-02-26 21:49:02,677 DEBUG   SenderThread:18673 [sender.py:send_request():406] send_request: check_version
+2025-02-26 21:49:02,733 DEBUG   HandlerThread:18673 [handler.py:handle_request():146] handle_request: run_start
+2025-02-26 21:49:02,743 DEBUG   HandlerThread:18673 [system_info.py:__init__():26] System info init
+2025-02-26 21:49:02,743 DEBUG   HandlerThread:18673 [system_info.py:__init__():41] System info init done
+2025-02-26 21:49:02,743 INFO    HandlerThread:18673 [system_monitor.py:start():194] Starting system monitor
+2025-02-26 21:49:02,744 INFO    SystemMonitor:18673 [system_monitor.py:_start():158] Starting system asset monitoring threads
+2025-02-26 21:49:02,744 INFO    HandlerThread:18673 [system_monitor.py:probe():214] Collecting system info
+2025-02-26 21:49:02,745 INFO    SystemMonitor:18673 [interfaces.py:start():190] Started cpu monitoring
+2025-02-26 21:49:02,745 INFO    SystemMonitor:18673 [interfaces.py:start():190] Started disk monitoring
+2025-02-26 21:49:02,745 INFO    SystemMonitor:18673 [interfaces.py:start():190] Started gpu monitoring
+2025-02-26 21:49:02,746 INFO    SystemMonitor:18673 [interfaces.py:start():190] Started memory monitoring
+2025-02-26 21:49:02,747 INFO    SystemMonitor:18673 [interfaces.py:start():190] Started network monitoring
+2025-02-26 21:49:02,752 DEBUG   HandlerThread:18673 [system_info.py:probe():150] Probing system
+2025-02-26 21:49:02,756 DEBUG   HandlerThread:18673 [system_info.py:_probe_git():135] Probing git
+2025-02-26 21:49:02,763 DEBUG   HandlerThread:18673 [system_info.py:_probe_git():143] Probing git done
+2025-02-26 21:49:02,763 DEBUG   HandlerThread:18673 [system_info.py:probe():198] Probing system done
+2025-02-26 21:49:02,763 DEBUG   HandlerThread:18673 [system_monitor.py:probe():223] {'os': 'Linux-6.5.0-44-generic-x86_64-with-glibc2.17', 'python': '3.8.20', 'heartbeatAt': '2025-02-27T02:49:02.752803', 'startedAt': '2025-02-27T02:49:02.467344', 'docker': None, 'cuda': None, 'args': ('--file=./ppo_aerial_quad_navigation.yaml', '--num_envs=16', '--play', '--checkpoint=./runs/gen_ppo_26-16-11-42/nn/last_gen_ppo_ep_500_rew__377.14606_.pth', '--track', 'wandb-project-name=Trained_RL_Navigation', 'wandb-entity=shrutiroy03'), 'state': 'running', 'program': 'runner.py', 'codePathLocal': 'runner.py', 'codePath': 'aerial_gym/rl_training/rl_games/runner.py', 'git': {'remote': 'https://github.com/ntnu-arl/aerial_gym_simulator.git', 'commit': '85114e7514ed0f3f8cfecfa23c40dad106c528a1'}, 'email': None, 'root': '/home/shruti/workspaces/aerial_gym_ws/src/aerial_gym_simulator', 'host': 'saferoboticslab-ASUS-TUF-Gaming-F15-FX507ZM-FX507ZM', 'username': 'shruti', 'executable': '/home/shruti/miniconda3/envs/aerialgym/bin/python3', 'cpu_count': 14, 'cpu_count_logical': 20, 'cpu_freq': {'current': 1284.35135, 'min': 400.0, 'max': 4180.0}, 'cpu_freq_per_core': [{'current': 400.0, 'min': 400.0, 'max': 4600.0}, {'current': 3382.316, 'min': 400.0, 'max': 4600.0}, {'current': 2113.273, 'min': 400.0, 'max': 4600.0}, {'current': 400.0, 'min': 400.0, 'max': 4600.0}, {'current': 3659.24, 'min': 400.0, 'max': 4700.0}, {'current': 400.0, 'min': 400.0, 'max': 4700.0}, {'current': 3973.88, 'min': 400.0, 'max': 4700.0}, {'current': 400.0, 'min': 400.0, 'max': 4700.0}, {'current': 3928.695, 'min': 400.0, 'max': 4600.0}, {'current': 400.0, 'min': 400.0, 'max': 4600.0}, {'current': 877.592, 'min': 400.0, 'max': 4600.0}, {'current': 3765.385, 'min': 400.0, 'max': 4600.0}, {'current': 2820.902, 'min': 400.0, 'max': 3500.0}, {'current': 400.0, 'min': 400.0, 'max': 3500.0}, {'current': 400.0, 'min': 400.0, 'max': 3500.0}, {'current': 400.0, 'min': 400.0, 'max': 3500.0}, {'current': 400.0, 'min': 400.0, 'max': 3500.0}, {'current': 1122.266, 'min': 400.0, 'max': 3500.0}, {'current': 400.0, 'min': 400.0, 'max': 3500.0}, {'current': 400.0, 'min': 400.0, 'max': 3500.0}], 'disk': {'/': {'total': 937.3305015563965, 'used': 231.46016311645508}}, 'gpu': 'NVIDIA GeForce RTX 3060 Laptop GPU', 'gpu_count': 1, 'gpu_devices': [{'name': 'NVIDIA GeForce RTX 3060 Laptop GPU', 'memory_total': 6442450944}], 'memory': {'total': 15.238014221191406}}
+2025-02-26 21:49:02,763 INFO    HandlerThread:18673 [system_monitor.py:probe():224] Finished collecting system info
+2025-02-26 21:49:02,763 INFO    HandlerThread:18673 [system_monitor.py:probe():227] Publishing system info
+2025-02-26 21:49:02,763 DEBUG   HandlerThread:18673 [system_info.py:_save_conda():207] Saving list of conda packages installed into the current environment
+2025-02-26 21:49:03,668 INFO    Thread-12 :18673 [dir_watcher.py:_on_file_created():271] file/dir created: /home/shruti/workspaces/aerial_gym_ws/src/aerial_gym_simulator/aerial_gym/rl_training/rl_games/wandb/run-20250226_214902-wkejie5v/files/conda-environment.yaml
+2025-02-26 21:49:04,485 DEBUG   HandlerThread:18673 [system_info.py:_save_conda():222] Saving conda packages done
+2025-02-26 21:49:04,485 DEBUG   HandlerThread:18673 [system_info.py:_save_code():44] Saving code
+2025-02-26 21:49:04,489 DEBUG   HandlerThread:18673 [system_info.py:_save_code():65] Saving code done
+2025-02-26 21:49:04,490 DEBUG   HandlerThread:18673 [system_info.py:_save_patches():82] Saving git patches
+2025-02-26 21:49:04,523 DEBUG   HandlerThread:18673 [system_info.py:_save_patches():124] Saving git patches done
+2025-02-26 21:49:04,523 INFO    HandlerThread:18673 [system_monitor.py:probe():229] Finished publishing system info
+2025-02-26 21:49:04,526 DEBUG   SenderThread:18673 [sender.py:send():379] send: files
+2025-02-26 21:49:04,526 INFO    SenderThread:18673 [sender.py:_save_file():1390] saving file wandb-metadata.json with policy now
+2025-02-26 21:49:04,526 INFO    SenderThread:18673 [sender.py:_save_file():1390] saving file code/aerial_gym/rl_training/rl_games/runner.py with policy now
+2025-02-26 21:49:04,526 INFO    SenderThread:18673 [sender.py:_save_file():1390] saving file diff.patch with policy now
+2025-02-26 21:49:04,605 DEBUG   HandlerThread:18673 [handler.py:handle_request():146] handle_request: python_packages
+2025-02-26 21:49:04,605 DEBUG   HandlerThread:18673 [handler.py:handle_request():146] handle_request: stop_status
+2025-02-26 21:49:04,605 DEBUG   SenderThread:18673 [sender.py:send_request():406] send_request: python_packages
+2025-02-26 21:49:04,605 DEBUG   SenderThread:18673 [sender.py:send_request():406] send_request: stop_status
+2025-02-26 21:49:04,607 DEBUG   HandlerThread:18673 [handler.py:handle_request():146] handle_request: internal_messages
+2025-02-26 21:49:04,668 INFO    Thread-12 :18673 [dir_watcher.py:_on_file_modified():288] file/dir modified: /home/shruti/workspaces/aerial_gym_ws/src/aerial_gym_simulator/aerial_gym/rl_training/rl_games/wandb/run-20250226_214902-wkejie5v/files/conda-environment.yaml
+2025-02-26 21:49:04,668 INFO    Thread-12 :18673 [dir_watcher.py:_on_file_created():271] file/dir created: /home/shruti/workspaces/aerial_gym_ws/src/aerial_gym_simulator/aerial_gym/rl_training/rl_games/wandb/run-20250226_214902-wkejie5v/files/requirements.txt
+2025-02-26 21:49:04,668 INFO    Thread-12 :18673 [dir_watcher.py:_on_file_created():271] file/dir created: /home/shruti/workspaces/aerial_gym_ws/src/aerial_gym_simulator/aerial_gym/rl_training/rl_games/wandb/run-20250226_214902-wkejie5v/files/wandb-metadata.json
+2025-02-26 21:49:04,668 INFO    Thread-12 :18673 [dir_watcher.py:_on_file_created():271] file/dir created: /home/shruti/workspaces/aerial_gym_ws/src/aerial_gym_simulator/aerial_gym/rl_training/rl_games/wandb/run-20250226_214902-wkejie5v/files/diff.patch
+2025-02-26 21:49:04,668 INFO    Thread-12 :18673 [dir_watcher.py:_on_file_created():271] file/dir created: /home/shruti/workspaces/aerial_gym_ws/src/aerial_gym_simulator/aerial_gym/rl_training/rl_games/wandb/run-20250226_214902-wkejie5v/files/code/aerial_gym/rl_training/rl_games/runner.py
+2025-02-26 21:49:04,668 INFO    Thread-12 :18673 [dir_watcher.py:_on_file_created():271] file/dir created: /home/shruti/workspaces/aerial_gym_ws/src/aerial_gym_simulator/aerial_gym/rl_training/rl_games/wandb/run-20250226_214902-wkejie5v/files/code/aerial_gym
+2025-02-26 21:49:04,668 INFO    Thread-12 :18673 [dir_watcher.py:_on_file_created():271] file/dir created: /home/shruti/workspaces/aerial_gym_ws/src/aerial_gym_simulator/aerial_gym/rl_training/rl_games/wandb/run-20250226_214902-wkejie5v/files/code/aerial_gym/rl_training
+2025-02-26 21:49:04,668 INFO    Thread-12 :18673 [dir_watcher.py:_on_file_created():271] file/dir created: /home/shruti/workspaces/aerial_gym_ws/src/aerial_gym_simulator/aerial_gym/rl_training/rl_games/wandb/run-20250226_214902-wkejie5v/files/code
+2025-02-26 21:49:04,668 INFO    Thread-12 :18673 [dir_watcher.py:_on_file_created():271] file/dir created: /home/shruti/workspaces/aerial_gym_ws/src/aerial_gym_simulator/aerial_gym/rl_training/rl_games/wandb/run-20250226_214902-wkejie5v/files/code/aerial_gym/rl_training/rl_games
+2025-02-26 21:49:04,695 DEBUG   SenderThread:18673 [sender.py:send():379] send: telemetry
+2025-02-26 21:49:04,787 INFO    wandb-upload_0:18673 [upload_job.py:push():131] Uploaded file /tmp/tmpmye7l2bzwandb/l0k5svyg-wandb-metadata.json
+2025-02-26 21:49:04,827 INFO    wandb-upload_1:18673 [upload_job.py:push():131] Uploaded file /tmp/tmpmye7l2bzwandb/3qi0u7dd-code/aerial_gym/rl_training/rl_games/runner.py
+2025-02-26 21:49:04,844 INFO    wandb-upload_2:18673 [upload_job.py:push():131] Uploaded file /tmp/tmpmye7l2bzwandb/13ehf7uy-diff.patch
+2025-02-26 21:49:05,668 INFO    Thread-12 :18673 [dir_watcher.py:_on_file_created():271] file/dir created: /home/shruti/workspaces/aerial_gym_ws/src/aerial_gym_simulator/aerial_gym/rl_training/rl_games/wandb/run-20250226_214902-wkejie5v/files/output.log
+2025-02-26 21:49:06,748 INFO    cpu       :18673 [interfaces.py:monitor():140] Process cpu has exited.
+2025-02-26 21:49:06,749 DEBUG   SystemMonitor:18673 [system_monitor.py:_start():172] Starting system metrics aggregation loop
+2025-02-26 21:49:06,751 DEBUG   SystemMonitor:18673 [system_monitor.py:_start():179] Finished system metrics aggregation loop
+2025-02-26 21:49:06,751 DEBUG   SystemMonitor:18673 [system_monitor.py:_start():183] Publishing last batch of metrics
+2025-02-26 21:49:06,753 DEBUG   SenderThread:18673 [sender.py:send():379] send: stats
+2025-02-26 21:49:07,672 INFO    Thread-12 :18673 [dir_watcher.py:_on_file_modified():288] file/dir modified: /home/shruti/workspaces/aerial_gym_ws/src/aerial_gym_simulator/aerial_gym/rl_training/rl_games/wandb/run-20250226_214902-wkejie5v/files/output.log
+2025-02-26 21:49:07,735 INFO    MainThread:18673 [internal.py:handle_exit():76] Internal process exited
diff --git a/aerial_gym/rl_training/rl_games/wandb/run-20250226_214902-wkejie5v/logs/debug.log b/aerial_gym/rl_training/rl_games/wandb/run-20250226_214902-wkejie5v/logs/debug.log
new file mode 100644
index 0000000..8bf97d6
--- /dev/null
+++ b/aerial_gym/rl_training/rl_games/wandb/run-20250226_214902-wkejie5v/logs/debug.log
@@ -0,0 +1,28 @@
+2025-02-26 21:49:02,469 INFO    MainThread:18613 [wandb_setup.py:_flush():76] Current SDK version is 0.16.6
+2025-02-26 21:49:02,469 INFO    MainThread:18613 [wandb_setup.py:_flush():76] Configure stats pid to 18613
+2025-02-26 21:49:02,469 INFO    MainThread:18613 [wandb_setup.py:_flush():76] Loading settings from /home/shruti/.config/wandb/settings
+2025-02-26 21:49:02,469 INFO    MainThread:18613 [wandb_setup.py:_flush():76] Loading settings from /home/shruti/workspaces/aerial_gym_ws/src/aerial_gym_simulator/aerial_gym/rl_training/rl_games/wandb/settings
+2025-02-26 21:49:02,469 INFO    MainThread:18613 [wandb_setup.py:_flush():76] Loading settings from environment variables: {}
+2025-02-26 21:49:02,469 INFO    MainThread:18613 [wandb_setup.py:_flush():76] Applying setup settings: {'_disable_service': False}
+2025-02-26 21:49:02,469 INFO    MainThread:18613 [wandb_setup.py:_flush():76] Inferring run settings from compute environment: {'program_relpath': 'aerial_gym/rl_training/rl_games/runner.py', 'program_abspath': '/home/shruti/workspaces/aerial_gym_ws/src/aerial_gym_simulator/aerial_gym/rl_training/rl_games/runner.py', 'program': 'runner.py'}
+2025-02-26 21:49:02,469 INFO    MainThread:18613 [wandb_setup.py:_flush():76] Applying login settings: {}
+2025-02-26 21:49:02,469 INFO    MainThread:18613 [wandb_init.py:_log_setup():521] Logging user logs to /home/shruti/workspaces/aerial_gym_ws/src/aerial_gym_simulator/aerial_gym/rl_training/rl_games/wandb/run-20250226_214902-wkejie5v/logs/debug.log
+2025-02-26 21:49:02,469 INFO    MainThread:18613 [wandb_init.py:_log_setup():522] Logging internal logs to /home/shruti/workspaces/aerial_gym_ws/src/aerial_gym_simulator/aerial_gym/rl_training/rl_games/wandb/run-20250226_214902-wkejie5v/logs/debug-internal.log
+2025-02-26 21:49:02,469 INFO    MainThread:18613 [wandb_init.py:init():561] calling init triggers
+2025-02-26 21:49:02,469 INFO    MainThread:18613 [wandb_init.py:init():568] wandb.init called with sweep_config: {}
+config: {'params': {'seed': 10, 'algo': {'name': 'a2c_continuous'}, 'model': {'name': 'continuous_a2c_logstd'}, 'load_checkpoint': False, 'network': {'name': 'actor_critic', 'separate': False, 'space': {'continuous': {'mu_activation': 'None', 'sigma_activation': 'None', 'mu_init': {'name': 'default'}, 'sigma_init': {'name': 'const_initializer', 'val': 0}, 'fixed_sigma': True}}, 'mlp': {'units': [256, 128, 64], 'd2rl': False, 'activation': 'elu', 'initializer': {'name': 'default', 'scale': 2}}}, 'config': {'env_name': 'navigation_task', 'env_config': {'num_envs': 16, 'headless': False, 'use_warp': True}, 'name': 'gen_ppo', 'reward_shaper': {'scale_value': 0.1}, 'normalize_advantage': True, 'gamma': 0.98, 'tau': 0.95, 'ppo': True, 'learning_rate': '1e-4', 'lr_schedule': 'adaptive', 'kl_threshold': 0.016, 'save_best_after': 10, 'score_to_win': 100000, 'grad_norm': 1.0, 'entropy_coef': 0, 'truncate_grads': True, 'e_clip': 0.2, 'clip_value': False, 'num_actors': 16, 'horizon_length': 32, 'minibatch_size': 2048, 'mini_epochs': 4, 'critic_coef': 2, 'normalize_input': True, 'bounds_loss_coef': 0.0001, 'max_epochs': 500, 'normalize_value': True, 'use_diagnostics': True, 'value_bootstrap': True, 'use_smooth_clamp': False, 'player': {'use_vecenv': True}}}}
+2025-02-26 21:49:02,469 INFO    MainThread:18613 [wandb_init.py:init():611] starting backend
+2025-02-26 21:49:02,469 INFO    MainThread:18613 [wandb_init.py:init():615] setting up manager
+2025-02-26 21:49:02,470 INFO    MainThread:18613 [backend.py:_multiprocessing_setup():105] multiprocessing start_methods=fork,spawn,forkserver, using: spawn
+2025-02-26 21:49:02,470 INFO    MainThread:18613 [wandb_init.py:init():623] backend started and connected
+2025-02-26 21:49:02,472 INFO    MainThread:18613 [wandb_init.py:init():715] updated telemetry
+2025-02-26 21:49:02,485 INFO    MainThread:18613 [wandb_init.py:init():748] communicating run to backend with 90.0 second timeout
+2025-02-26 21:49:02,676 INFO    MainThread:18613 [wandb_run.py:_on_init():2357] communicating current version
+2025-02-26 21:49:02,727 INFO    MainThread:18613 [wandb_run.py:_on_init():2366] got version response upgrade_message: "wandb version 0.19.7 is available!  To upgrade, please run:\n $ pip install wandb --upgrade"
+
+2025-02-26 21:49:02,727 INFO    MainThread:18613 [wandb_init.py:init():799] starting run threads in backend
+2025-02-26 21:49:04,605 INFO    MainThread:18613 [wandb_run.py:_console_start():2335] atexit reg
+2025-02-26 21:49:04,605 INFO    MainThread:18613 [wandb_run.py:_redirect():2190] redirect: wrap_raw
+2025-02-26 21:49:04,605 INFO    MainThread:18613 [wandb_run.py:_redirect():2255] Wrapping output streams.
+2025-02-26 21:49:04,605 INFO    MainThread:18613 [wandb_run.py:_redirect():2280] Redirects installed.
+2025-02-26 21:49:04,606 INFO    MainThread:18613 [wandb_init.py:init():842] run started, returning control to user process
diff --git a/aerial_gym/rl_training/rl_games/wandb/run-20250226_214902-wkejie5v/run-wkejie5v.wandb b/aerial_gym/rl_training/rl_games/wandb/run-20250226_214902-wkejie5v/run-wkejie5v.wandb
new file mode 100644
index 0000000..f10b3e9
Binary files /dev/null and b/aerial_gym/rl_training/rl_games/wandb/run-20250226_214902-wkejie5v/run-wkejie5v.wandb differ
diff --git a/aerial_gym/rl_training/rl_games/wandb/run-20250226_214956-6wkwdl9e/files/code/aerial_gym/rl_training/rl_games/runner.py b/aerial_gym/rl_training/rl_games/wandb/run-20250226_214956-6wkwdl9e/files/code/aerial_gym/rl_training/rl_games/runner.py
new file mode 100644
index 0000000..bd45a3c
--- /dev/null
+++ b/aerial_gym/rl_training/rl_games/wandb/run-20250226_214956-6wkwdl9e/files/code/aerial_gym/rl_training/rl_games/runner.py
@@ -0,0 +1,331 @@
+import numpy as np
+import os
+import yaml
+
+
+import isaacgym
+
+
+from aerial_gym.registry.task_registry import task_registry
+from aerial_gym.utils.helpers import parse_arguments
+
+import gym
+from gym import spaces
+from argparse import Namespace
+
+from rl_games.common import env_configurations, vecenv
+
+import torch
+import distutils
+
+os.environ["XLA_PYTHON_CLIENT_PREALLOCATE"] = "false"
+# import warnings
+# warnings.filterwarnings("error")
+
+
+class ExtractObsWrapper(gym.Wrapper):
+    def __init__(self, env):
+        super().__init__(env)
+
+    def reset(self, **kwargs):
+        observations, *_ = super().reset(**kwargs)
+        return observations["observations"]
+
+    def step(self, action):
+        observations, rewards, terminated, truncated, infos = super().step(action)
+
+        dones = torch.where(
+            terminated | truncated,
+            torch.ones_like(terminated),
+            torch.zeros_like(terminated),
+        )
+
+        return (
+            observations["observations"],
+            rewards,
+            dones,
+            infos,
+        )
+
+
+class AERIALRLGPUEnv(vecenv.IVecEnv):
+    def __init__(self, config_name, num_actors, **kwargs):
+        self.env = env_configurations.configurations[config_name]["env_creator"](**kwargs)
+        self.env = ExtractObsWrapper(self.env)
+
+    def step(self, actions):
+        return self.env.step(actions)
+
+    def reset(self):
+        return self.env.reset()
+
+    def reset_done(self):
+        return self.env.reset_done()
+
+    def get_number_of_agents(self):
+        return self.env.get_number_of_agents()
+
+    def get_env_info(self):
+        info = {}
+        info["action_space"] = spaces.Box(
+            -np.ones(self.env.task_config.action_space_dim),
+            np.ones(self.env.task_config.action_space_dim),
+        )
+        info["observation_space"] = spaces.Box(
+            np.ones(self.env.task_config.observation_space_dim) * -np.Inf,
+            np.ones(self.env.task_config.observation_space_dim) * np.Inf,
+        )
+        print(info["action_space"], info["observation_space"])
+        return info
+
+
+env_configurations.register(
+    "position_setpoint_task",
+    {
+        "env_creator": lambda **kwargs: task_registry.make_task("position_setpoint_task", **kwargs),
+        "vecenv_type": "AERIAL-RLGPU",
+    },
+)
+
+env_configurations.register(
+    "position_setpoint_task_sim2real",
+    {
+        "env_creator": lambda **kwargs: task_registry.make_task(
+            "position_setpoint_task_sim2real", **kwargs
+        ),
+        "vecenv_type": "AERIAL-RLGPU",
+    },
+)
+
+env_configurations.register(
+    "position_setpoint_task_acceleration_sim2real",
+    {
+        "env_creator": lambda **kwargs: task_registry.make_task(
+            "position_setpoint_task_acceleration_sim2real", **kwargs
+        ),
+        "vecenv_type": "AERIAL-RLGPU",
+    },
+)
+
+env_configurations.register(
+    "navigation_task",
+    {
+        "env_creator": lambda **kwargs: task_registry.make_task("navigation_task", **kwargs),
+        "vecenv_type": "AERIAL-RLGPU",
+    },
+)
+
+env_configurations.register(
+    "position_setpoint_task_reconfigurable",
+    {
+        "env_creator": lambda **kwargs: task_registry.make_task(
+            "position_setpoint_task_reconfigurable", **kwargs
+        ),
+        "vecenv_type": "AERIAL-RLGPU",
+    },
+)
+
+env_configurations.register(
+    "position_setpoint_task_morphy",
+    {
+        "env_creator": lambda **kwargs: task_registry.make_task(
+            "position_setpoint_task_morphy", **kwargs
+        ),
+        "vecenv_type": "AERIAL-RLGPU",
+    },
+)
+
+env_configurations.register(
+    "position_setpoint_task_sim2real_end_to_end",
+    {
+        "env_creator": lambda **kwargs: task_registry.make_task(
+            "position_setpoint_task_sim2real_end_to_end", **kwargs
+        ),
+        "vecenv_type": "AERIAL-RLGPU",
+    },
+)
+
+vecenv.register(
+    "AERIAL-RLGPU",
+    lambda config_name, num_actors, **kwargs: AERIALRLGPUEnv(config_name, num_actors, **kwargs),
+)
+
+
+def get_args():
+    from isaacgym import gymutil
+
+    custom_parameters = [
+        {
+            "name": "--seed",
+            "type": int,
+            "default": 0,
+            "required": False,
+            "help": "Random seed, if larger than 0 will overwrite the value in yaml config.",
+        },
+        {
+            "name": "--tf",
+            "required": False,
+            "help": "run tensorflow runner",
+            "action": "store_true",
+        },
+        {
+            "name": "--train",
+            "required": False,
+            "help": "train network",
+            "action": "store_true",
+        },
+        {
+            "name": "--play",
+            "required": False,
+            "help": "play(test) network",
+            "action": "store_true",
+        },
+        {
+            "name": "--checkpoint",
+            "type": str,
+            "required": False,
+            "help": "path to checkpoint",
+        },
+        {
+            "name": "--file",
+            "type": str,
+            "default": "ppo_aerial_quad.yaml",
+            "required": False,
+            "help": "path to config",
+        },
+        {
+            "name": "--num_envs",
+            "type": int,
+            "default": "1024",
+            "help": "Number of environments to create. Overrides config file if provided.",
+        },
+        {
+            "name": "--sigma",
+            "type": float,
+            "required": False,
+            "help": "sets new sigma value in case if 'fixed_sigma: True' in yaml config",
+        },
+        {
+            "name": "--track",
+            "action": "store_true",
+            "help": "if toggled, this experiment will be tracked with Weights and Biases",
+        },
+        {
+            "name": "--wandb-project-name",
+            "type": str,
+            "default": "rl_games",
+            "help": "the wandb's project name",
+        },
+        {
+            "name": "--wandb-entity",
+            "type": str,
+            "default": None,
+            "help": "the entity (team) of wandb's project",
+        },
+        {
+            "name": "--task",
+            "type": str,
+            "default": "navigation_task",
+            "help": "Override task from config file if provided.",
+        },
+        {
+            "name": "--experiment_name",
+            "type": str,
+            "help": "Name of the experiment to run or load. Overrides config file if provided.",
+        },
+        {
+            "name": "--headless",
+            "type": lambda x: bool(distutils.util.strtobool(x)),
+            "default": "False",
+            "help": "Force display off at all times",
+        },
+        {
+            "name": "--horovod",
+            "action": "store_true",
+            "default": False,
+            "help": "Use horovod for multi-gpu training",
+        },
+        {
+            "name": "--rl_device",
+            "type": str,
+            "default": "cuda:0",
+            "help": "Device used by the RL algorithm, (cpu, gpu, cuda:0, cuda:1 etc..)",
+        },
+        {
+            "name": "--use_warp",
+            "type": lambda x: bool(distutils.util.strtobool(x)),
+            "default": "True",
+            "help": "Choose whether to use warp or Isaac Gym rendering pipeline.",
+        },
+    ]
+
+    # parse arguments
+    args = parse_arguments(description="RL Policy", custom_parameters=custom_parameters)
+
+    # name allignment
+    args.sim_device_id = args.compute_device_id
+    args.sim_device = args.sim_device_type
+    if args.sim_device == "cuda":
+        args.sim_device += f":{args.sim_device_id}"
+    return args
+
+
+def update_config(config, args):
+
+    if args["task"] is not None:
+        config["params"]["config"]["env_name"] = args["task"]
+    if args["experiment_name"] is not None:
+        config["params"]["config"]["name"] = args["experiment_name"]
+    config["params"]["config"]["env_config"]["headless"] = args["headless"]
+    config["params"]["config"]["env_config"]["num_envs"] = args["num_envs"]
+    config["params"]["config"]["env_config"]["use_warp"] = args["use_warp"]
+    if args["num_envs"] > 0:
+        config["params"]["config"]["num_actors"] = args["num_envs"]
+        # config['params']['config']['num_envs'] = args['num_envs']
+        config["params"]["config"]["env_config"]["num_envs"] = args["num_envs"]
+    if args["seed"] > 0:
+        config["params"]["seed"] = args["seed"]
+        config["params"]["config"]["env_config"]["seed"] = args["seed"]
+
+    config["params"]["config"]["player"] = {"use_vecenv": True}
+    return config
+
+
+if __name__ == "__main__":
+    os.makedirs("nn", exist_ok=True)
+    os.makedirs("runs", exist_ok=True)
+
+    args = vars(get_args())
+
+    config_name = args["file"]
+
+    print("Loading config: ", config_name)
+    with open(config_name, "r") as stream:
+        config = yaml.safe_load(stream)
+
+        config = update_config(config, args)
+
+        from rl_games.torch_runner import Runner
+
+        runner = Runner()
+        try:
+            runner.load(config)
+        except yaml.YAMLError as exc:
+            print(exc)
+
+    rank = int(os.getenv("LOCAL_RANK", "0"))
+    if args["track"] and rank == 0:
+        import wandb
+
+        wandb.init(
+            project=args["wandb_project_name"],
+            entity=args["wandb_entity"],
+            sync_tensorboard=True,
+            config=config,
+            monitor_gym=True,
+            save_code=True,
+        )
+    runner.run(args)
+
+    if args["track"] and rank == 0:
+        wandb.finish()
diff --git a/aerial_gym/rl_training/rl_games/wandb/run-20250226_214956-6wkwdl9e/files/conda-environment.yaml b/aerial_gym/rl_training/rl_games/wandb/run-20250226_214956-6wkwdl9e/files/conda-environment.yaml
new file mode 100644
index 0000000..b5e6902
--- /dev/null
+++ b/aerial_gym/rl_training/rl_games/wandb/run-20250226_214956-6wkwdl9e/files/conda-environment.yaml
@@ -0,0 +1,409 @@
+name: aerialgym
+channels:
+  - pytorch3d
+  - iopath
+  - fvcore
+  - pytorch
+  - nvidia
+  - nvidia/label/cuda-11.8.0
+  - conda-forge
+  - defaults
+  - https://repo.anaconda.com/pkgs/main
+  - https://repo.anaconda.com/pkgs/r
+dependencies:
+  - _libgcc_mutex=0.1=main
+  - _openmp_mutex=5.1=1_gnu
+  - absl-py=2.1.0=pyhd8ed1ab_0
+  - aiohttp=3.7.4.post0=py38h497a2fe_1
+  - antlr-python-runtime=4.9.3=pyhd8ed1ab_1
+  - anyio=4.5.0=pyhd8ed1ab_0
+  - appdirs=1.4.4=pyh9f0ad1d_0
+  - argon2-cffi=23.1.0=pyhd8ed1ab_0
+  - argon2-cffi-bindings=21.2.0=py38h01eb140_4
+  - arrow=1.3.0=pyhd8ed1ab_0
+  - asttokens=3.0.0=pyhd8ed1ab_0
+  - async-lru=2.0.4=pyhd8ed1ab_0
+  - async-timeout=3.0.1=py_1000
+  - attrs=24.2.0=pyh71513ae_0
+  - babel=2.16.0=pyhd8ed1ab_0
+  - backcall=0.2.0=pyh9f0ad1d_0
+  - beautifulsoup4=4.12.3=pyha770c72_0
+  - blas=1.0=mkl
+  - bleach=6.1.0=pyhd8ed1ab_0
+  - blinker=1.8.2=pyhd8ed1ab_0
+  - brotli=1.1.0=hb9d3cd8_2
+  - brotli-bin=1.1.0=hb9d3cd8_2
+  - brotli-python=1.0.9=py38hfa26641_7
+  - bullet-cpp=3.21=h43a58ef_1
+  - bzip2=1.0.8=h5eee18b_6
+  - c-ares=1.19.1=h5eee18b_0
+  - ca-certificates=2025.2.25=h06a4308_0
+  - cached-property=1.5.2=hd8ed1ab_1
+  - cached_property=1.5.2=pyha770c72_1
+  - cachetools=5.5.0=pyhd8ed1ab_0
+  - certifi=2024.8.30=pyhd8ed1ab_0
+  - cffi=1.15.0=py38h3931269_0
+  - chardet=4.0.0=py38h578d9bd_3
+  - charset-normalizer=3.4.0=pyhd8ed1ab_0
+  - click=8.1.7=unix_pyh707e725_0
+  - colorama=0.4.6=pyhd8ed1ab_0
+  - comm=0.2.2=pyhd8ed1ab_0
+  - cryptography=43.0.0=py38hdda0065_0
+  - cuda=11.8.0=0
+  - cuda-cccl=11.8.89=0
+  - cuda-command-line-tools=11.8.0=0
+  - cuda-compiler=11.8.0=0
+  - cuda-cudart=11.8.89=0
+  - cuda-cudart-dev=11.8.89=0
+  - cuda-cuobjdump=11.8.86=0
+  - cuda-cupti=11.8.87=0
+  - cuda-cuxxfilt=11.8.86=0
+  - cuda-demo-suite=11.8.86=0
+  - cuda-documentation=11.8.86=0
+  - cuda-driver-dev=11.8.89=0
+  - cuda-gdb=11.8.86=0
+  - cuda-libraries=11.8.0=0
+  - cuda-libraries-dev=11.8.0=0
+  - cuda-memcheck=11.8.86=0
+  - cuda-nsight=11.8.86=0
+  - cuda-nsight-compute=11.8.0=0
+  - cuda-nvcc=11.8.89=0
+  - cuda-nvdisasm=11.8.86=0
+  - cuda-nvml-dev=11.8.86=0
+  - cuda-nvprof=11.8.87=0
+  - cuda-nvprune=11.8.86=0
+  - cuda-nvrtc=11.8.89=0
+  - cuda-nvrtc-dev=11.8.89=0
+  - cuda-nvtx=11.8.86=0
+  - cuda-nvvp=11.8.87=0
+  - cuda-opencl=12.4.127=0
+  - cuda-profiler-api=11.8.86=0
+  - cuda-runtime=11.8.0=0
+  - cuda-sanitizer-api=11.8.86=0
+  - cuda-toolkit=11.8.0=0
+  - cuda-tools=11.8.0=0
+  - cuda-visual-tools=11.8.0=0
+  - cycler=0.12.1=pyhd8ed1ab_0
+  - dbus=1.13.18=hb2f20db_0
+  - debugpy=1.6.7=py38h6a678d5_0
+  - defusedxml=0.7.1=pyhd8ed1ab_0
+  - dill=0.3.9=pyhd8ed1ab_0
+  - docker-pycreds=0.4.0=py_0
+  - entrypoints=0.4=pyhd8ed1ab_0
+  - exceptiongroup=1.2.2=pyhd8ed1ab_0
+  - executing=2.1.0=pyhd8ed1ab_0
+  - expat=2.6.4=h5888daf_0
+  - fastcache=1.1.0=py38h7b6447c_0
+  - ffmpeg=4.3=hf484d3e_0
+  - filelock=3.13.1=py38h06a4308_0
+  - fontconfig=2.14.0=h8e229c2_0
+  - fqdn=1.5.1=pyhd8ed1ab_0
+  - freetype=2.10.4=h0708190_1
+  - fvcore=0.1.5.post20210915=py38
+  - gds-tools=1.4.0.31=0
+  - geos=3.10.2=h9c3ff4c_0
+  - giflib=5.2.2=h5eee18b_0
+  - glib=2.78.4=h6a678d5_0
+  - glib-tools=2.78.4=h6a678d5_0
+  - gmp=6.3.0=h6a678d5_0
+  - gmpy2=2.1.2=py38heeb90bb_0
+  - gnutls=3.6.15=he1e5248_0
+  - google-auth=2.35.0=pyhff2d567_0
+  - google-auth-oauthlib=1.0.0=pyhd8ed1ab_1
+  - grpcio=1.62.2=py38h6a678d5_0
+  - gst-plugins-base=1.14.1=h6a678d5_1
+  - gstreamer=1.14.1=h5eee18b_1
+  - gym-notices=0.0.8=pyhd8ed1ab_0
+  - h11=0.14.0=pyhd8ed1ab_0
+  - h2=4.1.0=pyhd8ed1ab_0
+  - hpack=4.0.0=pyh9f0ad1d_0
+  - httpcore=1.0.7=pyh29332c3_1
+  - httpx=0.27.2=pyhd8ed1ab_0
+  - hyperframe=6.0.1=pyhd8ed1ab_0
+  - icu=58.2=hf484d3e_1000
+  - idna=3.10=pyhd8ed1ab_0
+  - importlib-metadata=8.5.0=pyha770c72_0
+  - importlib_metadata=8.5.0=hd8ed1ab_1
+  - importlib_resources=6.4.5=pyhd8ed1ab_0
+  - intel-openmp=2021.4.0=h06a4308_3561
+  - iopath=0.1.9=py38
+  - ipykernel=6.29.5=pyh3099207_0
+  - ipython=8.12.2=pyh41d4057_0
+  - ipywidgets=8.1.5=pyhd8ed1ab_0
+  - isoduration=20.11.0=pyhd8ed1ab_0
+  - jbig=2.1=h7f98852_2003
+  - jedi=0.19.1=pyhd8ed1ab_0
+  - jinja2=3.1.4=pyhd8ed1ab_0
+  - jpeg=9e=h166bdaf_1
+  - json5=0.9.25=pyhd8ed1ab_0
+  - jsonpointer=3.0.0=py38h578d9bd_0
+  - jsonschema=4.23.0=pyhd8ed1ab_0
+  - jsonschema-specifications=2024.10.1=pyhd8ed1ab_0
+  - jsonschema-with-format-nongpl=4.23.0=hd8ed1ab_1
+  - jupyter=1.1.1=pyhd8ed1ab_0
+  - jupyter-lsp=2.2.5=pyhd8ed1ab_0
+  - jupyter_client=8.6.3=pyhd8ed1ab_0
+  - jupyter_console=6.6.3=pyhd8ed1ab_0
+  - jupyter_core=5.7.2=pyh31011fe_1
+  - jupyter_events=0.10.0=pyhd8ed1ab_0
+  - jupyter_server=2.14.2=pyhd8ed1ab_0
+  - jupyter_server_terminals=0.5.3=pyhd8ed1ab_0
+  - jupyterlab=4.2.5=pyhd8ed1ab_0
+  - jupyterlab_pygments=0.3.0=pyhd8ed1ab_1
+  - jupyterlab_server=2.27.3=pyhd8ed1ab_0
+  - jupyterlab_widgets=3.0.13=pyhd8ed1ab_0
+  - krb5=1.20.1=h143b758_1
+  - lame=3.100=h7b6447c_0
+  - lcms2=2.12=hddcbb42_0
+  - ld_impl_linux-64=2.40=h12ee557_0
+  - lerc=2.2.1=h9c3ff4c_0
+  - libabseil=20240116.2=cxx17_h6a678d5_0
+  - libblas=3.9.0=12_linux64_mkl
+  - libbrotlicommon=1.1.0=hb9d3cd8_2
+  - libbrotlidec=1.1.0=hb9d3cd8_2
+  - libbrotlienc=1.1.0=hb9d3cd8_2
+  - libcblas=3.9.0=12_linux64_mkl
+  - libclang=10.0.1=default_hde54327_1
+  - libcublas=11.11.3.6=0
+  - libcublas-dev=11.11.3.6=0
+  - libcufft=10.9.0.58=0
+  - libcufft-dev=10.9.0.58=0
+  - libcufile=1.9.1.3=0
+  - libcufile-dev=1.4.0.31=0
+  - libcurand=10.3.5.147=0
+  - libcurand-dev=10.3.0.86=0
+  - libcusolver=11.4.1.48=0
+  - libcusolver-dev=11.4.1.48=0
+  - libcusparse=11.7.5.86=0
+  - libcusparse-dev=11.7.5.86=0
+  - libdeflate=1.7=h7f98852_5
+  - libedit=3.1.20230828=h5eee18b_0
+  - libevent=2.1.12=hf998b51_1
+  - libexpat=2.6.4=h5888daf_0
+  - libffi=3.4.4=h6a678d5_1
+  - libgcc=14.2.0=h767d61c_2
+  - libgcc-ng=14.2.0=h69a702a_2
+  - libgfortran-ng=13.2.0=h69a702a_0
+  - libgfortran5=13.2.0=ha4646dd_0
+  - libglib=2.78.4=hdc74915_0
+  - libgomp=14.2.0=h767d61c_2
+  - libgrpc=1.62.2=h2d74bed_0
+  - libiconv=1.16=h5eee18b_3
+  - libidn2=2.3.4=h5eee18b_0
+  - libjpeg-turbo=2.0.0=h9bf148f_0
+  - liblapack=3.9.0=12_linux64_mkl
+  - libllvm10=10.0.1=he513fc3_3
+  - libnpp=11.8.0.86=0
+  - libnpp-dev=11.8.0.86=0
+  - libnvfatbin=12.4.127=0
+  - libnvjitlink=12.4.127=0
+  - libnvjpeg=11.9.0.86=0
+  - libnvjpeg-dev=11.9.0.86=0
+  - libopenblas=0.3.21=h043d6bf_0
+  - libpng=1.6.37=h21135ba_2
+  - libpq=12.20=hdbd6064_0
+  - libprotobuf=4.25.3=he621ea3_0
+  - libsodium=1.0.18=h36c2ea0_1
+  - libstdcxx=14.2.0=h8f9b012_2
+  - libstdcxx-ng=11.2.0=h1234567_1
+  - libtasn1=4.19.0=h5eee18b_0
+  - libtiff=4.3.0=hf544144_1
+  - libunistring=0.9.10=h27cfd23_0
+  - libuuid=2.38.1=h0b41bf4_0
+  - libwebp=1.2.2=h55f646e_0
+  - libwebp-base=1.2.2=h7f98852_1
+  - libxcb=1.17.0=h8a09558_0
+  - libxkbcommon=1.0.3=he3ba5ed_0
+  - libxml2=2.9.14=h74e7548_0
+  - llvm-openmp=14.0.6=h9e868ea_0
+  - lz4-c=1.9.4=h6a678d5_1
+  - markdown=3.6=pyhd8ed1ab_0
+  - markupsafe=2.1.1=py38h0a891b7_1
+  - matplotlib-base=3.7.2=py38h1128e8f_0
+  - matplotlib-inline=0.1.7=pyhd8ed1ab_0
+  - metis=5.1.0=hd0bcaf9_1007
+  - mistune=3.0.2=pyhd8ed1ab_0
+  - mkl=2021.4.0=h06a4308_640
+  - mkl-service=2.4.0=py38h7f8727e_0
+  - mkl_fft=1.3.1=py38hd3c417c_0
+  - mkl_random=1.2.2=py38h51133e4_0
+  - mpc=1.3.1=h5eee18b_0
+  - mpfr=4.2.1=h90cbb55_3
+  - mpmath=1.3.0=py38h06a4308_0
+  - multidict=6.0.2=py38h0a891b7_1
+  - munkres=1.1.4=pyh9f0ad1d_0
+  - nbclient=0.10.2=pyhd8ed1ab_0
+  - nbconvert-core=7.16.4=pyhff2d567_2
+  - nbformat=5.10.4=pyhd8ed1ab_0
+  - ncurses=6.4=h6a678d5_0
+  - nest-asyncio=1.6.0=pyhd8ed1ab_0
+  - nettle=3.7.3=hbbd107a_1
+  - ninja-base=1.12.1=hdb19cb5_0
+  - notebook=7.2.2=pyhd8ed1ab_0
+  - notebook-shim=0.2.4=pyhd8ed1ab_0
+  - nsight-compute=2022.3.0.22=0
+  - nspr=4.36=h5888daf_0
+  - nss=3.89.1=h6a678d5_0
+  - oauthlib=3.2.2=pyhd8ed1ab_0
+  - olefile=0.47=pyhd8ed1ab_0
+  - omegaconf=2.3.0=pyhd8ed1ab_0
+  - openh264=2.1.1=h4ff587b_0
+  - openjpeg=2.4.0=hb52868f_1
+  - openssl=3.4.1=h7b32b05_0
+  - overrides=7.7.0=pyhd8ed1ab_0
+  - packaging=24.2=pyhd8ed1ab_2
+  - pandas=1.4.2=py38h47df419_1
+  - pandocfilters=1.5.0=pyhd8ed1ab_0
+  - parso=0.8.4=pyhd8ed1ab_0
+  - pcre2=10.42=hebb0a14_1
+  - pexpect=4.9.0=pyhd8ed1ab_0
+  - pickleshare=0.7.5=py_1003
+  - pillow=9.4.0=py38h6a678d5_0
+  - pip=24.2=py38h06a4308_0
+  - pkgutil-resolve-name=1.3.10=pyhd8ed1ab_1
+  - platformdirs=4.3.6=pyhd8ed1ab_0
+  - plotly=5.24.1=pyhd8ed1ab_0
+  - portalocker=2.10.1=py38h578d9bd_0
+  - prometheus_client=0.21.0=pyhd8ed1ab_0
+  - prompt-toolkit=3.0.48=pyha770c72_0
+  - prompt_toolkit=3.0.48=hd8ed1ab_1
+  - pthread-stubs=0.4=hb9d3cd8_1002
+  - ptyprocess=0.7.0=pyhd3deb0d_0
+  - pure_eval=0.2.3=pyhd8ed1ab_0
+  - pyasn1=0.6.1=pyhd8ed1ab_1
+  - pyasn1-modules=0.4.1=pyhd8ed1ab_0
+  - pybullet=3.21=py38h43a58ef_1
+  - pycparser=2.22=pyhd8ed1ab_0
+  - pygments=2.18.0=pyhd8ed1ab_0
+  - pyjwt=2.9.0=pyhd8ed1ab_1
+  - pyopenssl=24.2.1=pyhd8ed1ab_2
+  - pyqt=5.15.4=py38hfa26641_0
+  - pyqt5-sip=12.9.0=py38hfa26641_0
+  - pysocks=1.7.1=pyha2e5f31_6
+  - python=3.8.20=he870216_0
+  - python-fastjsonschema=2.20.0=pyhd8ed1ab_0
+  - python-json-logger=2.0.7=pyhd8ed1ab_0
+  - python_abi=3.8=2_cp38
+  - pytorch=2.2.0=py3.8_cuda11.8_cudnn8.7.0_0
+  - pytorch-cuda=11.8=h7e8668a_6
+  - pytorch-mutex=1.0=cuda
+  - pytorch3d=0.7.8=py38_cu118_pyt220
+  - pytz=2024.2=pyhd8ed1ab_0
+  - pyu2f=0.1.5=pyhd8ed1ab_0
+  - pyyaml=6.0=py38h0a891b7_5
+  - pyzmq=25.1.2=py38h6a678d5_0
+  - qt-main=5.15.2=h327a75a_7
+  - re2=2022.04.01=h27087fc_0
+  - readline=8.2=h5eee18b_0
+  - referencing=0.35.1=pyhd8ed1ab_0
+  - requests=2.32.3=pyhd8ed1ab_0
+  - requests-oauthlib=2.0.0=pyhd8ed1ab_0
+  - rfc3339-validator=0.1.4=pyhd8ed1ab_0
+  - rfc3986-validator=0.1.1=pyh9f0ad1d_0
+  - rpds-py=0.20.0=py38h4005ec7_0
+  - rsa=4.9=pyhd8ed1ab_0
+  - send2trash=1.8.3=pyh0d859eb_0
+  - setuptools=75.1.0=py38h06a4308_0
+  - shapely=1.8.2=py38h97f7145_1
+  - sip=6.5.1=py38h709712a_2
+  - six=1.16.0=pyh6c4a22f_0
+  - sniffio=1.3.1=pyhd8ed1ab_0
+  - soupsieve=2.5=pyhd8ed1ab_1
+  - sqlite=3.45.3=h5eee18b_0
+  - stack_data=0.6.2=pyhd8ed1ab_0
+  - suitesparse=5.10.1=h9e50725_1
+  - sympy=1.5.1=py38_0
+  - tabulate=0.9.0=pyhd8ed1ab_1
+  - tbb=2021.5.0=h924138e_1
+  - tenacity=9.0.0=pyhd8ed1ab_0
+  - tensorboard=2.13.0=pyhd8ed1ab_0
+  - tensorboard-data-server=0.7.0=py38h52d8a92_1
+  - termcolor=2.4.0=pyhd8ed1ab_0
+  - terminado=0.18.1=pyh0d859eb_0
+  - tinycss2=1.4.0=pyhd8ed1ab_0
+  - tk=8.6.14=h39e8969_0
+  - toml=0.10.2=pyhd8ed1ab_0
+  - tomli=2.0.2=pyhd8ed1ab_0
+  - torchaudio=2.2.0=py38_cu118
+  - torchtriton=2.2.0=py38
+  - torchvision=0.17.0=py38_cu118
+  - tornado=6.4.1=py38hfb59056_0
+  - tqdm=4.67.1=pyhd8ed1ab_0
+  - traitlets=5.14.3=pyhd8ed1ab_0
+  - types-python-dateutil=2.9.0.20241003=pyhff2d567_0
+  - typing-extensions=4.12.2=hd8ed1ab_0
+  - typing_extensions=4.12.2=pyha770c72_0
+  - typing_utils=0.1.0=pyhd8ed1ab_0
+  - unicodedata2=15.1.0=py38h01eb140_0
+  - uri-template=1.3.0=pyhd8ed1ab_0
+  - urllib3=2.2.3=pyhd8ed1ab_0
+  - wcwidth=0.2.13=pyhd8ed1ab_0
+  - webcolors=24.8.0=pyhd8ed1ab_0
+  - webencodings=0.5.1=pyhd8ed1ab_2
+  - websocket-client=1.8.0=pyhd8ed1ab_0
+  - werkzeug=3.0.6=pyhd8ed1ab_0
+  - wheel=0.44.0=py38h06a4308_0
+  - widgetsnbextension=4.0.13=pyhd8ed1ab_0
+  - xorg-libx11=1.8.11=h4f16b4b_0
+  - xorg-libxau=1.0.12=hb9d3cd8_0
+  - xorg-libxdmcp=1.1.5=hb9d3cd8_0
+  - xorg-libxext=1.3.6=hb9d3cd8_0
+  - xz=5.6.4=h5eee18b_1
+  - yacs=0.1.8=pyhd8ed1ab_0
+  - yaml=0.2.5=h7f98852_2
+  - yarl=1.7.2=py38h0a891b7_2
+  - zeromq=4.3.5=h6a678d5_0
+  - zipp=3.21.0=pyhd8ed1ab_0
+  - zlib=1.2.13=h5eee18b_1
+  - zstandard=0.23.0=py38h2c38b39_0
+  - zstd=1.5.6=hc292b87_0
+  - pip:
+      - aerial-gym==2.0.0
+      - cloudpickle==3.1.1
+      - colorlog==6.9.0
+      - contourpy==1.1.1
+      - cython==3.0.12
+      - decorator==5.2.1
+      - farama-notifications==0.0.4
+      - faster-fifo==1.4.7
+      - fonttools==4.56.0
+      - freetype-py==2.5.1
+      - fsspec==2025.2.0
+      - gitdb==4.0.12
+      - gitpython==3.1.44
+      - gym==0.23.1
+      - gymnasium==0.29.1
+      - huggingface-hub==0.29.1
+      - imageio==2.35.1
+      - kiwisolver==1.4.7
+      - lxml==5.3.1
+      - matplotlib==3.7.5
+      - networkx==2.2
+      - ninja==1.11.1.3
+      - numpy==1.23.0
+      - opencv-python==4.11.0.86
+      - pathtools==0.1.2
+      - promise==2.3
+      - protobuf==3.20.3
+      - psutil==5.9.8
+      - pycollada==0.6
+      - pygame==2.1.0
+      - pyglet==2.1.3
+      - pyopengl==3.1.0
+      - pyparsing==3.1.4
+      - pyrender==0.1.45
+      - python-dateutil==2.9.0.post0
+      - rl-games==1.6.1
+      - sample-factory==2.1.1
+      - scipy==1.10.1
+      - sentry-sdk==2.22.0
+      - setproctitle==1.3.5
+      - shortuuid==1.0.13
+      - signal-slot-mp==1.0.5
+      - smmap==5.0.2
+      - tensorboardx==2.6.2.2
+      - threadpoolctl==3.5.0
+      - trimesh==4.6.3
+      - wandb==0.12.21
+      - warp-lang==1.0.0b5
+prefix: /home/shruti/miniconda3/envs/aerialgym
diff --git a/aerial_gym/rl_training/rl_games/wandb/run-20250226_214956-6wkwdl9e/files/config.yaml b/aerial_gym/rl_training/rl_games/wandb/run-20250226_214956-6wkwdl9e/files/config.yaml
new file mode 100644
index 0000000..3c80dcf
--- /dev/null
+++ b/aerial_gym/rl_training/rl_games/wandb/run-20250226_214956-6wkwdl9e/files/config.yaml
@@ -0,0 +1,94 @@
+wandb_version: 1
+
+params:
+  desc: null
+  value:
+    seed: 10
+    algo:
+      name: a2c_continuous
+    model:
+      name: continuous_a2c_logstd
+    load_checkpoint: false
+    network:
+      name: actor_critic
+      separate: false
+      space:
+        continuous:
+          mu_activation: None
+          sigma_activation: None
+          mu_init:
+            name: default
+          sigma_init:
+            name: const_initializer
+            val: 0
+          fixed_sigma: true
+      mlp:
+        units:
+        - 256
+        - 128
+        - 64
+        d2rl: false
+        activation: elu
+        initializer:
+          name: default
+          scale: 2
+    config:
+      env_name: navigation_task
+      env_config:
+        num_envs: 16
+        headless: false
+        use_warp: true
+      name: gen_ppo
+      reward_shaper:
+        scale_value: 0.1
+      normalize_advantage: true
+      gamma: 0.98
+      tau: 0.95
+      ppo: true
+      learning_rate: 1e-4
+      lr_schedule: adaptive
+      kl_threshold: 0.016
+      save_best_after: 10
+      score_to_win: 100000
+      grad_norm: 1.0
+      entropy_coef: 0
+      truncate_grads: true
+      e_clip: 0.2
+      clip_value: false
+      num_actors: 16
+      horizon_length: 32
+      minibatch_size: 2048
+      mini_epochs: 4
+      critic_coef: 2
+      normalize_input: true
+      bounds_loss_coef: 0.0001
+      max_epochs: 500
+      normalize_value: true
+      use_diagnostics: true
+      value_bootstrap: true
+      use_smooth_clamp: false
+      player:
+        use_vecenv: true
+_wandb:
+  desc: null
+  value:
+    code_path: code/aerial_gym/rl_training/rl_games/runner.py
+    python_version: 3.8.20
+    cli_version: 0.16.6
+    framework: torch
+    is_jupyter_run: false
+    is_kaggle_kernel: false
+    start_time: 1740624596.0
+    t:
+      1:
+      - 1
+      - 55
+      3:
+      - 16
+      - 23
+      - 35
+      4: 3.8.20
+      5: 0.16.6
+      8:
+      - 5
+      13: linux-x86_64
diff --git a/aerial_gym/rl_training/rl_games/wandb/run-20250226_214956-6wkwdl9e/files/diff.patch b/aerial_gym/rl_training/rl_games/wandb/run-20250226_214956-6wkwdl9e/files/diff.patch
new file mode 100644
index 0000000..a7ff8db
--- /dev/null
+++ b/aerial_gym/rl_training/rl_games/wandb/run-20250226_214956-6wkwdl9e/files/diff.patch
@@ -0,0 +1,38 @@
+diff --git a/aerial_gym/config/task_config/navigation_task_config.py b/aerial_gym/config/task_config/navigation_task_config.py
+index 7ecbda5..2f838d7 100644
+--- a/aerial_gym/config/task_config/navigation_task_config.py
++++ b/aerial_gym/config/task_config/navigation_task_config.py
+@@ -19,7 +19,7 @@ class task_config:
+     episode_len_steps = 100  # real physics time for simulation is this value multiplied by sim.dt
+ 
+     return_state_before_reset = (
+-        False  # False as usually state is returned for next episode after reset
++        True  # False as usually state is returned for next episode after reset
+     )
+     # user can set the above to true if they so desire
+ 
+diff --git a/aerial_gym/rl_training/rl_games/runner.py b/aerial_gym/rl_training/rl_games/runner.py
+index 7e8ffb4..bd45a3c 100644
+--- a/aerial_gym/rl_training/rl_games/runner.py
++++ b/aerial_gym/rl_training/rl_games/runner.py
+@@ -255,7 +255,7 @@ def get_args():
+             "name": "--use_warp",
+             "type": lambda x: bool(distutils.util.strtobool(x)),
+             "default": "True",
+-            "help": "Choose whether to use warp or Isaac Gym rendeing pipeline.",
++            "help": "Choose whether to use warp or Isaac Gym rendering pipeline.",
+         },
+     ]
+ 
+diff --git a/aerial_gym/task/__init__.py b/aerial_gym/task/__init__.py
+index 7dd966d..7975a4d 100644
+--- a/aerial_gym/task/__init__.py
++++ b/aerial_gym/task/__init__.py
+@@ -95,5 +95,5 @@ task_registry.register_task(
+ 
+ ## Uncomment this to use custom tasks
+ 
+-# from aerial_gym.task.custom_task.custom_task import CustomTask
+-# task_registry.register_task("custom_task", CustomTask, custom_task.task_config)
++#from aerial_gym.task.custom_task.custom_task import CustomTask
++#task_registry.register_task("custom_task", CustomTask, custom_task.task_config)
diff --git a/aerial_gym/rl_training/rl_games/wandb/run-20250226_214956-6wkwdl9e/files/output.log b/aerial_gym/rl_training/rl_games/wandb/run-20250226_214956-6wkwdl9e/files/output.log
new file mode 100644
index 0000000..a43aa32
--- /dev/null
+++ b/aerial_gym/rl_training/rl_games/wandb/run-20250226_214956-6wkwdl9e/files/output.log
@@ -0,0 +1,57 @@
+Started to play
+[BasePlayer] Creating vecenv:  navigation_task
+[isaacgym:gymutil.py] Unknown args:  ['--file=./ppo_aerial_quad_navigation.yaml', '--play', '--checkpoint=./runs/gen_ppo_26-16-11-42/nn/last_gen_ppo_ep_500_rew__377.14606_.pth', '--track', 'wandb-project-name=Trained_RL_Navigation', 'wandb-entity=shrutiroy03']
+[37m[5889 ms][base_task] - INFO : Setting seed: 2510256601 (base_task.py:38)
+[37m[5890 ms][navigation_task] - INFO : Building environment for navigation task. (navigation_task.py:44)
+[37m[5890 ms][navigation_task] - INFO : Sim Name: base_sim, Env Name: env_with_obstacles, Robot Name: lmf2, Controller Name: lmf2_velocity_control (navigation_task.py:45)
+[37m[5890 ms][env_manager] - INFO : Populating environments. (env_manager.py:73)
+[37m[5890 ms][env_manager] - INFO : Creating simulation instance. (env_manager.py:87)
+[37m[5890 ms][env_manager] - INFO : Instantiating IGE object. (env_manager.py:88)
+[37m[5890 ms][IsaacGymEnvManager] - INFO : Creating Isaac Gym Environment (IGE_env_manager.py:41)
+[37m[5890 ms][IsaacGymEnvManager] - INFO : Acquiring gym object (IGE_env_manager.py:73)
+[37m[5890 ms][IsaacGymEnvManager] - INFO : Acquired gym object (IGE_env_manager.py:75)
+[37m[5891 ms][IsaacGymEnvManager] - INFO : Fixing devices (IGE_env_manager.py:89)
+[37m[5891 ms][IsaacGymEnvManager] - INFO : Using GPU pipeline for simulation. (IGE_env_manager.py:102)
+[37m[5891 ms][IsaacGymEnvManager] - INFO : Sim Device type: cuda, Sim Device ID: 0 (IGE_env_manager.py:105)
+[37m[5891 ms][IsaacGymEnvManager] - INFO : Graphics Device ID: 0 (IGE_env_manager.py:119)
+[37m[5891 ms][IsaacGymEnvManager] - INFO : Creating Isaac Gym Simulation Object (IGE_env_manager.py:120)
+[33m[5891 ms][IsaacGymEnvManager] - WARNING : If you have set the CUDA_VISIBLE_DEVICES environment variable, please ensure that you set it
+[33mto a particular one that works for your system to use the viewer or Isaac Gym cameras.
+[33mIf you want to run parallel simulations on multiple GPUs with camera sensors,
+[33mplease disable Isaac Gym and use warp (by setting use_warp=True), set the viewer to headless. (IGE_env_manager.py:127)
+[33m[5891 ms][IsaacGymEnvManager] - WARNING : If you see a segfault in the next lines, it is because of the discrepancy between the CUDA device and the graphics device.
+[33mPlease ensure that the CUDA device and the graphics device are the same. (IGE_env_manager.py:132)
+[37m[6701 ms][IsaacGymEnvManager] - INFO : Created Isaac Gym Simulation Object (IGE_env_manager.py:136)
+[37m[6701 ms][IsaacGymEnvManager] - INFO : Created Isaac Gym Environment (IGE_env_manager.py:43)
+[37m[6802 ms][env_manager] - INFO : IGE object instantiated. (env_manager.py:109)
+[37m[6802 ms][env_manager] - INFO : Creating warp environment. (env_manager.py:112)
+[37m[6802 ms][env_manager] - INFO : Warp environment created. (env_manager.py:114)
+[37m[6802 ms][env_manager] - INFO : Creating robot manager. (env_manager.py:118)
+[37m[6802 ms][BaseRobot] - INFO : [DONE] Initializing controller (base_robot.py:26)
+[37m[6802 ms][BaseRobot] - INFO : Initializing controller lmf2_velocity_control (base_robot.py:29)
+[33m[6802 ms][base_multirotor] - WARNING : Creating 16 multirotors. (base_multirotor.py:32)
+[37m[6802 ms][env_manager] - INFO : [DONE] Creating robot manager. (env_manager.py:123)
+[37m[6803 ms][env_manager] - INFO : [DONE] Creating simulation instance. (env_manager.py:125)
+[37m[6803 ms][asset_loader] - INFO : Loading asset: model.urdf for the first time. Next use of this asset will be via the asset buffer. (asset_loader.py:71)
+[37m[6803 ms][asset_loader] - INFO : Loading asset: panel.urdf for the first time. Next use of this asset will be via the asset buffer. (asset_loader.py:71)
+[37m[6805 ms][asset_loader] - INFO : Loading asset: cuboidal_rod.urdf for the first time. Next use of this asset will be via the asset buffer. (asset_loader.py:71)
+[37m[6806 ms][asset_loader] - INFO : Loading asset: 1_x_1_wall.urdf for the first time. Next use of this asset will be via the asset buffer. (asset_loader.py:71)
+[37m[6807 ms][asset_loader] - INFO : Loading asset: small_cube.urdf for the first time. Next use of this asset will be via the asset buffer. (asset_loader.py:71)
+[37m[6807 ms][asset_loader] - INFO : Loading asset: left_wall.urdf for the first time. Next use of this asset will be via the asset buffer. (asset_loader.py:71)
+[37m[6808 ms][asset_loader] - INFO : Loading asset: right_wall.urdf for the first time. Next use of this asset will be via the asset buffer. (asset_loader.py:71)
+[37m[6809 ms][asset_loader] - INFO : Loading asset: back_wall.urdf for the first time. Next use of this asset will be via the asset buffer. (asset_loader.py:71)
+[37m[6810 ms][asset_loader] - INFO : Loading asset: front_wall.urdf for the first time. Next use of this asset will be via the asset buffer. (asset_loader.py:71)
+[37m[6811 ms][asset_loader] - INFO : Loading asset: bottom_wall.urdf for the first time. Next use of this asset will be via the asset buffer. (asset_loader.py:71)
+[37m[6811 ms][asset_loader] - INFO : Loading asset: top_wall.urdf for the first time. Next use of this asset will be via the asset buffer. (asset_loader.py:71)
+[37m[6812 ms][asset_loader] - INFO : Loading asset: 0_5_x_0_5_wall.urdf for the first time. Next use of this asset will be via the asset buffer. (asset_loader.py:71)
+[37m[6814 ms][env_manager] - INFO : Populating environment 0 (env_manager.py:179)
+[33m[6903 ms][robot_manager] - WARNING : 
+[33mRobot mass: 1.2400000467896461,
+[33mInertia: tensor([[0.0134, 0.0000, 0.0000],
+[33m        [0.0000, 0.0144, 0.0000],
+[33m        [0.0000, 0.0000, 0.0138]], device='cuda:0'),
+[33mRobot COM: tensor([[0., 0., 0., 1.]], device='cuda:0') (robot_manager.py:427)
+[33m[6903 ms][robot_manager] - WARNING : Calculated robot mass and inertia for this robot. This code assumes that your robot is the same across environments. (robot_manager.py:430)
+[31m[6903 ms][robot_manager] - CRITICAL : If your robot differs across environments you need to perform this computation for each different robot here. (robot_manager.py:433)
+[37m[6923 ms][env_manager] - INFO : [DONE] Populating environments. (env_manager.py:75)
+[33m[6930 ms][IsaacGymEnvManager] - WARNING : Headless: False (IGE_env_manager.py:424)
diff --git a/aerial_gym/rl_training/rl_games/wandb/run-20250226_214956-6wkwdl9e/files/requirements.txt b/aerial_gym/rl_training/rl_games/wandb/run-20250226_214956-6wkwdl9e/files/requirements.txt
new file mode 100644
index 0000000..a906a9d
--- /dev/null
+++ b/aerial_gym/rl_training/rl_games/wandb/run-20250226_214956-6wkwdl9e/files/requirements.txt
@@ -0,0 +1,264 @@
+Brotli==1.0.9
+Cython==3.0.12
+Farama-Notifications==0.0.4
+GitPython==3.1.43
+GitPython==3.1.44
+Jinja2==3.1.4
+Markdown==3.6
+MarkupSafe==2.1.1
+Pillow==9.4.0
+PyJWT==2.9.0
+PyOpenGL==3.1.0
+PyQt5-sip==12.9.0
+PyQt5==5.15.4
+PySocks==1.7.1
+PyYAML==6.0
+Pygments==2.18.0
+Send2Trash==1.8.3
+Shapely==1.8.2
+Werkzeug==3.0.6
+absl-py==2.1.0
+aerial_gym==2.0.0
+aiohttp==3.7.4.post0
+antlr4-python3-runtime==4.9.3
+anyio==4.5.0
+appdirs==1.4.4
+argon2-cffi-bindings==21.2.0
+argon2-cffi==23.1.0
+arrow==1.3.0
+asttokens==3.0.0
+async-lru==2.0.4
+async-timeout==3.0.1
+attrs==24.2.0
+autocommand==2.2.2
+babel==2.16.0
+backcall==0.2.0
+backports.tarfile==1.2.0
+beautifulsoup4==4.12.3
+bleach==6.1.0
+blinker==1.8.2
+cached-property==1.5.2
+cachetools==5.5.0
+certifi==2024.8.30
+cffi==1.15.0
+chardet==4.0.0
+charset-normalizer==3.4.0
+click==8.1.7
+cloudpickle==3.1.0
+cloudpickle==3.1.1
+colorama==0.4.6
+colorlog==6.9.0
+comm==0.2.2
+contourpy==1.0.2
+contourpy==1.1.1
+cryptography==43.0.0
+cycler==0.12.1
+debugpy==1.6.7
+decorator==5.1.1
+decorator==5.2.1
+defusedxml==0.7.1
+dill==0.3.9
+docker-pycreds==0.4.0
+entrypoints==0.4
+exceptiongroup==1.2.2
+executing==2.1.0
+fastcache==1.1.0
+faster-fifo==1.4.7
+fastjsonschema==2.20.0
+filelock==3.13.1
+fonttools==4.53.1
+fonttools==4.56.0
+fqdn==1.5.1
+freetype-py==2.5.1
+fsspec==2025.2.0
+fvcore==0.1.5.post20210915
+gitdb==4.0.11
+gitdb==4.0.12
+gmpy2==2.1.2
+google-auth-oauthlib==1.0.0
+google-auth==2.35.0
+grpcio==1.62.2
+gym-notices==0.0.8
+gym==0.23.1
+gym==0.26.1
+gymnasium==0.29.1
+h11==0.14.0
+h2==4.1.0
+hpack==4.0.0
+httpcore==1.0.7
+httpx==0.27.2
+huggingface-hub==0.29.1
+hyperframe==6.0.1
+idna==3.10
+imageio==2.35.1
+importlib_metadata==8.0.0
+importlib_metadata==8.5.0
+importlib_resources==6.4.0
+importlib_resources==6.4.5
+inflect==7.3.1
+iopath==0.1.9
+ipykernel==6.29.5
+ipython==8.12.2
+ipywidgets==8.1.5
+isaacgym==1.0rc4
+isoduration==20.11.0
+jaraco.collections==5.1.0
+jaraco.context==5.3.0
+jaraco.functools==4.0.1
+jaraco.text==3.12.1
+jedi==0.19.1
+json5==0.9.25
+jsonpointer==3.0.0
+jsonschema-specifications==2024.10.1
+jsonschema==4.23.0
+jupyter-console==6.6.3
+jupyter-events==0.10.0
+jupyter-lsp==2.2.5
+jupyter==1.1.1
+jupyter_client==8.6.3
+jupyter_core==5.7.2
+jupyter_server==2.14.2
+jupyter_server_terminals==0.5.3
+jupyterlab==4.2.5
+jupyterlab_pygments==0.3.0
+jupyterlab_server==2.27.3
+jupyterlab_widgets==3.0.13
+kiwisolver==1.4.2
+kiwisolver==1.4.7
+lxml==5.3.1
+matplotlib-inline==0.1.7
+matplotlib==3.7.2
+matplotlib==3.7.5
+mistune==3.0.2
+mkl-fft==1.3.1
+mkl-random==1.2.2
+mkl-service==2.4.0
+more-itertools==10.3.0
+mpmath==1.3.0
+multidict==6.0.2
+munkres==1.1.4
+nbclient==0.10.2
+nbconvert==7.16.4
+nbformat==5.10.4
+nest_asyncio==1.6.0
+networkx==2.2
+networkx==3.1
+ninja==1.11.1.3
+notebook==7.2.2
+notebook_shim==0.2.4
+numpy==1.23.0
+oauthlib==3.2.2
+olefile==0.47
+omegaconf==2.3.0
+opencv-python==4.11.0.86
+overrides==7.7.0
+packaging==24.1
+packaging==24.2
+pandas==1.4.2
+pandocfilters==1.5.0
+parso==0.8.4
+pathtools==0.1.2
+pexpect==4.9.0
+pickleshare==0.7.5
+pip==24.2
+pkgutil_resolve_name==1.3.10
+platformdirs==4.2.2
+platformdirs==4.3.6
+plotly==5.24.1
+portalocker==2.10.1
+prometheus_client==0.21.0
+promise==2.3
+prompt_toolkit==3.0.48
+protobuf==3.20.3
+protobuf==4.25.3
+psutil==5.9.8
+psutil==6.0.0
+ptyprocess==0.7.0
+pure_eval==0.2.3
+pyOpenSSL==24.2.1
+pyasn1==0.6.1
+pyasn1_modules==0.4.1
+pybullet==3.2.0
+pycollada==0.6
+pycparser==2.22
+pygame==2.1.0
+pyglet==2.1.3
+pyparsing==3.0.9
+pyparsing==3.1.4
+pyrender==0.1.45
+python-dateutil==2.9.0
+python-dateutil==2.9.0.post0
+python-json-logger==2.0.7
+pytorch3d==0.7.8
+pytz==2024.2
+pyu2f==0.1.5
+pyzmq==25.1.2
+referencing==0.35.1
+requests-oauthlib==2.0.0
+requests==2.32.3
+rfc3339-validator==0.1.4
+rfc3986-validator==0.1.1
+rl_games==1.6.1
+rpds-py==0.20.0
+rsa==4.9
+sample-factory==2.1.1
+scipy==1.10.1
+sentry-sdk==2.19.2
+sentry-sdk==2.22.0
+setproctitle==1.3.3
+setproctitle==1.3.5
+setuptools==75.1.0
+shortuuid==1.0.13
+signal-slot-mp==1.0.5
+sip==6.5.1
+six==1.16.0
+smmap==5.0.0
+smmap==5.0.2
+sniffio==1.3.1
+soupsieve==2.5
+stack-data==0.6.2
+sympy==1.5.1
+tabulate==0.9.0
+tenacity==9.0.0
+tensorboard==2.13.0
+tensorboardX==2.6.2.2
+tensorboard_data_server==0.7.0
+termcolor==2.4.0
+terminado==0.18.1
+threadpoolctl==3.5.0
+tinycss2==1.4.0
+toml==0.10.2
+tomli==2.0.1
+tomli==2.0.2
+torch==2.2.0
+torchaudio==2.2.0
+torchvision==0.17.0
+tornado==6.4.1
+tqdm==4.67.1
+traitlets==5.14.3
+trimesh==4.6.3
+triton==2.2.0
+typeguard==4.3.0
+types-python-dateutil==2.9.0.20241003
+typing-utils==0.1.0
+typing_extensions==4.12.2
+typing_extensions==4.12.2
+unicodedata2==15.1.0
+urdfpy==0.0.22
+uri-template==1.3.0
+urllib3==2.2.3
+wandb==0.12.21
+wandb==0.16.6
+warp-lang==1.0.0b5
+wcwidth==0.2.13
+webcolors==24.8.0
+webencodings==0.5.1
+websocket-client==1.8.0
+wheel==0.43.0
+wheel==0.44.0
+widgetsnbextension==4.0.13
+yacs==0.1.8
+yarl==1.7.2
+zipp==3.19.2
+zipp==3.21.0
+zstandard==0.23.0
\ No newline at end of file
diff --git a/aerial_gym/rl_training/rl_games/wandb/run-20250226_214956-6wkwdl9e/files/wandb-metadata.json b/aerial_gym/rl_training/rl_games/wandb/run-20250226_214956-6wkwdl9e/files/wandb-metadata.json
new file mode 100644
index 0000000..4aead29
--- /dev/null
+++ b/aerial_gym/rl_training/rl_games/wandb/run-20250226_214956-6wkwdl9e/files/wandb-metadata.json
@@ -0,0 +1,156 @@
+{
+    "os": "Linux-6.5.0-44-generic-x86_64-with-glibc2.17",
+    "python": "3.8.20",
+    "heartbeatAt": "2025-02-27T02:49:56.568798",
+    "startedAt": "2025-02-27T02:49:56.169625",
+    "docker": null,
+    "cuda": null,
+    "args": [
+        "--file=./ppo_aerial_quad_navigation.yaml",
+        "--num_envs=16",
+        "--play",
+        "--checkpoint=./runs/gen_ppo_26-16-11-42/nn/last_gen_ppo_ep_500_rew__377.14606_.pth",
+        "--track",
+        "wandb-project-name=Trained_RL_Navigation",
+        "wandb-entity=shrutiroy03"
+    ],
+    "state": "running",
+    "program": "runner.py",
+    "codePathLocal": "runner.py",
+    "codePath": "aerial_gym/rl_training/rl_games/runner.py",
+    "git": {
+        "remote": "https://github.com/ntnu-arl/aerial_gym_simulator.git",
+        "commit": "85114e7514ed0f3f8cfecfa23c40dad106c528a1"
+    },
+    "email": null,
+    "root": "/home/shruti/workspaces/aerial_gym_ws/src/aerial_gym_simulator",
+    "host": "saferoboticslab-ASUS-TUF-Gaming-F15-FX507ZM-FX507ZM",
+    "username": "shruti",
+    "executable": "/home/shruti/miniconda3/envs/aerialgym/bin/python3",
+    "cpu_count": 14,
+    "cpu_count_logical": 20,
+    "cpu_freq": {
+        "current": 1308.48225,
+        "min": 400.0,
+        "max": 4180.0
+    },
+    "cpu_freq_per_core": [
+        {
+            "current": 2979.742,
+            "min": 400.0,
+            "max": 4600.0
+        },
+        {
+            "current": 3497.18,
+            "min": 400.0,
+            "max": 4600.0
+        },
+        {
+            "current": 563.73,
+            "min": 400.0,
+            "max": 4600.0
+        },
+        {
+            "current": 3292.43,
+            "min": 400.0,
+            "max": 4600.0
+        },
+        {
+            "current": 3539.977,
+            "min": 400.0,
+            "max": 4700.0
+        },
+        {
+            "current": 400.0,
+            "min": 400.0,
+            "max": 4700.0
+        },
+        {
+            "current": 2456.685,
+            "min": 400.0,
+            "max": 4700.0
+        },
+        {
+            "current": 2533.265,
+            "min": 400.0,
+            "max": 4700.0
+        },
+        {
+            "current": 613.557,
+            "min": 400.0,
+            "max": 4600.0
+        },
+        {
+            "current": 400.0,
+            "min": 400.0,
+            "max": 4600.0
+        },
+        {
+            "current": 3503.302,
+            "min": 400.0,
+            "max": 4600.0
+        },
+        {
+            "current": 400.0,
+            "min": 400.0,
+            "max": 4600.0
+        },
+        {
+            "current": 2393.041,
+            "min": 400.0,
+            "max": 3500.0
+        },
+        {
+            "current": 1714.927,
+            "min": 400.0,
+            "max": 3500.0
+        },
+        {
+            "current": 400.0,
+            "min": 400.0,
+            "max": 3500.0
+        },
+        {
+            "current": 400.0,
+            "min": 400.0,
+            "max": 3500.0
+        },
+        {
+            "current": 400.0,
+            "min": 400.0,
+            "max": 3500.0
+        },
+        {
+            "current": 972.316,
+            "min": 400.0,
+            "max": 3500.0
+        },
+        {
+            "current": 400.0,
+            "min": 400.0,
+            "max": 3500.0
+        },
+        {
+            "current": 400.0,
+            "min": 400.0,
+            "max": 3500.0
+        }
+    ],
+    "disk": {
+        "/": {
+            "total": 937.3305015563965,
+            "used": 231.4603500366211
+        }
+    },
+    "gpu": "NVIDIA GeForce RTX 3060 Laptop GPU",
+    "gpu_count": 1,
+    "gpu_devices": [
+        {
+            "name": "NVIDIA GeForce RTX 3060 Laptop GPU",
+            "memory_total": 6442450944
+        }
+    ],
+    "memory": {
+        "total": 15.238014221191406
+    }
+}
diff --git a/aerial_gym/rl_training/rl_games/wandb/run-20250226_214956-6wkwdl9e/logs/debug-internal.log b/aerial_gym/rl_training/rl_games/wandb/run-20250226_214956-6wkwdl9e/logs/debug-internal.log
new file mode 100644
index 0000000..223deb9
--- /dev/null
+++ b/aerial_gym/rl_training/rl_games/wandb/run-20250226_214956-6wkwdl9e/logs/debug-internal.log
@@ -0,0 +1,65 @@
+2025-02-26 21:49:56,173 INFO    StreamThr :18912 [internal.py:wandb_internal():86] W&B internal server running at pid: 18912, started at: 2025-02-26 21:49:56.173488
+2025-02-26 21:49:56,175 DEBUG   HandlerThread:18912 [handler.py:handle_request():146] handle_request: status
+2025-02-26 21:49:56,176 INFO    WriterThread:18912 [datastore.py:open_for_write():87] open: /home/shruti/workspaces/aerial_gym_ws/src/aerial_gym_simulator/aerial_gym/rl_training/rl_games/wandb/run-20250226_214956-6wkwdl9e/run-6wkwdl9e.wandb
+2025-02-26 21:49:56,176 DEBUG   SenderThread:18912 [sender.py:send():379] send: header
+2025-02-26 21:49:56,188 DEBUG   SenderThread:18912 [sender.py:send():379] send: run
+2025-02-26 21:49:56,473 INFO    SenderThread:18912 [dir_watcher.py:__init__():211] watching files in: /home/shruti/workspaces/aerial_gym_ws/src/aerial_gym_simulator/aerial_gym/rl_training/rl_games/wandb/run-20250226_214956-6wkwdl9e/files
+2025-02-26 21:49:56,473 INFO    SenderThread:18912 [sender.py:_start_run_threads():1124] run started: 6wkwdl9e with start time 1740624596.17316
+2025-02-26 21:49:56,485 DEBUG   HandlerThread:18912 [handler.py:handle_request():146] handle_request: check_version
+2025-02-26 21:49:56,486 DEBUG   SenderThread:18912 [sender.py:send_request():406] send_request: check_version
+2025-02-26 21:49:56,539 DEBUG   HandlerThread:18912 [handler.py:handle_request():146] handle_request: run_start
+2025-02-26 21:49:56,549 DEBUG   HandlerThread:18912 [system_info.py:__init__():26] System info init
+2025-02-26 21:49:56,549 DEBUG   HandlerThread:18912 [system_info.py:__init__():41] System info init done
+2025-02-26 21:49:56,549 INFO    HandlerThread:18912 [system_monitor.py:start():194] Starting system monitor
+2025-02-26 21:49:56,549 INFO    SystemMonitor:18912 [system_monitor.py:_start():158] Starting system asset monitoring threads
+2025-02-26 21:49:56,549 INFO    HandlerThread:18912 [system_monitor.py:probe():214] Collecting system info
+2025-02-26 21:49:56,550 INFO    SystemMonitor:18912 [interfaces.py:start():190] Started cpu monitoring
+2025-02-26 21:49:56,550 INFO    SystemMonitor:18912 [interfaces.py:start():190] Started disk monitoring
+2025-02-26 21:49:56,551 INFO    SystemMonitor:18912 [interfaces.py:start():190] Started gpu monitoring
+2025-02-26 21:49:56,552 INFO    SystemMonitor:18912 [interfaces.py:start():190] Started memory monitoring
+2025-02-26 21:49:56,553 INFO    SystemMonitor:18912 [interfaces.py:start():190] Started network monitoring
+2025-02-26 21:49:56,568 DEBUG   HandlerThread:18912 [system_info.py:probe():150] Probing system
+2025-02-26 21:49:56,572 DEBUG   HandlerThread:18912 [system_info.py:_probe_git():135] Probing git
+2025-02-26 21:49:56,578 DEBUG   HandlerThread:18912 [system_info.py:_probe_git():143] Probing git done
+2025-02-26 21:49:56,579 DEBUG   HandlerThread:18912 [system_info.py:probe():198] Probing system done
+2025-02-26 21:49:56,579 DEBUG   HandlerThread:18912 [system_monitor.py:probe():223] {'os': 'Linux-6.5.0-44-generic-x86_64-with-glibc2.17', 'python': '3.8.20', 'heartbeatAt': '2025-02-27T02:49:56.568798', 'startedAt': '2025-02-27T02:49:56.169625', 'docker': None, 'cuda': None, 'args': ('--file=./ppo_aerial_quad_navigation.yaml', '--num_envs=16', '--play', '--checkpoint=./runs/gen_ppo_26-16-11-42/nn/last_gen_ppo_ep_500_rew__377.14606_.pth', '--track', 'wandb-project-name=Trained_RL_Navigation', 'wandb-entity=shrutiroy03'), 'state': 'running', 'program': 'runner.py', 'codePathLocal': 'runner.py', 'codePath': 'aerial_gym/rl_training/rl_games/runner.py', 'git': {'remote': 'https://github.com/ntnu-arl/aerial_gym_simulator.git', 'commit': '85114e7514ed0f3f8cfecfa23c40dad106c528a1'}, 'email': None, 'root': '/home/shruti/workspaces/aerial_gym_ws/src/aerial_gym_simulator', 'host': 'saferoboticslab-ASUS-TUF-Gaming-F15-FX507ZM-FX507ZM', 'username': 'shruti', 'executable': '/home/shruti/miniconda3/envs/aerialgym/bin/python3', 'cpu_count': 14, 'cpu_count_logical': 20, 'cpu_freq': {'current': 1308.48225, 'min': 400.0, 'max': 4180.0}, 'cpu_freq_per_core': [{'current': 2979.742, 'min': 400.0, 'max': 4600.0}, {'current': 3497.18, 'min': 400.0, 'max': 4600.0}, {'current': 563.73, 'min': 400.0, 'max': 4600.0}, {'current': 3292.43, 'min': 400.0, 'max': 4600.0}, {'current': 3539.977, 'min': 400.0, 'max': 4700.0}, {'current': 400.0, 'min': 400.0, 'max': 4700.0}, {'current': 2456.685, 'min': 400.0, 'max': 4700.0}, {'current': 2533.265, 'min': 400.0, 'max': 4700.0}, {'current': 613.557, 'min': 400.0, 'max': 4600.0}, {'current': 400.0, 'min': 400.0, 'max': 4600.0}, {'current': 3503.302, 'min': 400.0, 'max': 4600.0}, {'current': 400.0, 'min': 400.0, 'max': 4600.0}, {'current': 2393.041, 'min': 400.0, 'max': 3500.0}, {'current': 1714.927, 'min': 400.0, 'max': 3500.0}, {'current': 400.0, 'min': 400.0, 'max': 3500.0}, {'current': 400.0, 'min': 400.0, 'max': 3500.0}, {'current': 400.0, 'min': 400.0, 'max': 3500.0}, {'current': 972.316, 'min': 400.0, 'max': 3500.0}, {'current': 400.0, 'min': 400.0, 'max': 3500.0}, {'current': 400.0, 'min': 400.0, 'max': 3500.0}], 'disk': {'/': {'total': 937.3305015563965, 'used': 231.4603500366211}}, 'gpu': 'NVIDIA GeForce RTX 3060 Laptop GPU', 'gpu_count': 1, 'gpu_devices': [{'name': 'NVIDIA GeForce RTX 3060 Laptop GPU', 'memory_total': 6442450944}], 'memory': {'total': 15.238014221191406}}
+2025-02-26 21:49:56,579 INFO    HandlerThread:18912 [system_monitor.py:probe():224] Finished collecting system info
+2025-02-26 21:49:56,579 INFO    HandlerThread:18912 [system_monitor.py:probe():227] Publishing system info
+2025-02-26 21:49:56,579 DEBUG   HandlerThread:18912 [system_info.py:_save_conda():207] Saving list of conda packages installed into the current environment
+2025-02-26 21:49:57,474 INFO    Thread-12 :18912 [dir_watcher.py:_on_file_created():271] file/dir created: /home/shruti/workspaces/aerial_gym_ws/src/aerial_gym_simulator/aerial_gym/rl_training/rl_games/wandb/run-20250226_214956-6wkwdl9e/files/conda-environment.yaml
+2025-02-26 21:49:58,200 DEBUG   HandlerThread:18912 [system_info.py:_save_conda():222] Saving conda packages done
+2025-02-26 21:49:58,200 DEBUG   HandlerThread:18912 [system_info.py:_save_code():44] Saving code
+2025-02-26 21:49:58,204 DEBUG   HandlerThread:18912 [system_info.py:_save_code():65] Saving code done
+2025-02-26 21:49:58,204 DEBUG   HandlerThread:18912 [system_info.py:_save_patches():82] Saving git patches
+2025-02-26 21:49:58,225 DEBUG   HandlerThread:18912 [system_info.py:_save_patches():124] Saving git patches done
+2025-02-26 21:49:58,226 INFO    HandlerThread:18912 [system_monitor.py:probe():229] Finished publishing system info
+2025-02-26 21:49:58,228 DEBUG   SenderThread:18912 [sender.py:send():379] send: files
+2025-02-26 21:49:58,228 INFO    SenderThread:18912 [sender.py:_save_file():1390] saving file wandb-metadata.json with policy now
+2025-02-26 21:49:58,229 INFO    SenderThread:18912 [sender.py:_save_file():1390] saving file code/aerial_gym/rl_training/rl_games/runner.py with policy now
+2025-02-26 21:49:58,229 INFO    SenderThread:18912 [sender.py:_save_file():1390] saving file diff.patch with policy now
+2025-02-26 21:49:58,309 DEBUG   HandlerThread:18912 [handler.py:handle_request():146] handle_request: python_packages
+2025-02-26 21:49:58,309 DEBUG   HandlerThread:18912 [handler.py:handle_request():146] handle_request: stop_status
+2025-02-26 21:49:58,310 DEBUG   SenderThread:18912 [sender.py:send_request():406] send_request: python_packages
+2025-02-26 21:49:58,310 DEBUG   HandlerThread:18912 [handler.py:handle_request():146] handle_request: internal_messages
+2025-02-26 21:49:58,310 DEBUG   SenderThread:18912 [sender.py:send_request():406] send_request: stop_status
+2025-02-26 21:49:58,405 DEBUG   SenderThread:18912 [sender.py:send():379] send: telemetry
+2025-02-26 21:49:58,474 INFO    Thread-12 :18912 [dir_watcher.py:_on_file_modified():288] file/dir modified: /home/shruti/workspaces/aerial_gym_ws/src/aerial_gym_simulator/aerial_gym/rl_training/rl_games/wandb/run-20250226_214956-6wkwdl9e/files/conda-environment.yaml
+2025-02-26 21:49:58,474 INFO    Thread-12 :18912 [dir_watcher.py:_on_file_created():271] file/dir created: /home/shruti/workspaces/aerial_gym_ws/src/aerial_gym_simulator/aerial_gym/rl_training/rl_games/wandb/run-20250226_214956-6wkwdl9e/files/output.log
+2025-02-26 21:49:58,474 INFO    Thread-12 :18912 [dir_watcher.py:_on_file_created():271] file/dir created: /home/shruti/workspaces/aerial_gym_ws/src/aerial_gym_simulator/aerial_gym/rl_training/rl_games/wandb/run-20250226_214956-6wkwdl9e/files/wandb-metadata.json
+2025-02-26 21:49:58,474 INFO    Thread-12 :18912 [dir_watcher.py:_on_file_created():271] file/dir created: /home/shruti/workspaces/aerial_gym_ws/src/aerial_gym_simulator/aerial_gym/rl_training/rl_games/wandb/run-20250226_214956-6wkwdl9e/files/code/aerial_gym/rl_training/rl_games/runner.py
+2025-02-26 21:49:58,474 INFO    Thread-12 :18912 [dir_watcher.py:_on_file_created():271] file/dir created: /home/shruti/workspaces/aerial_gym_ws/src/aerial_gym_simulator/aerial_gym/rl_training/rl_games/wandb/run-20250226_214956-6wkwdl9e/files/diff.patch
+2025-02-26 21:49:58,474 INFO    Thread-12 :18912 [dir_watcher.py:_on_file_created():271] file/dir created: /home/shruti/workspaces/aerial_gym_ws/src/aerial_gym_simulator/aerial_gym/rl_training/rl_games/wandb/run-20250226_214956-6wkwdl9e/files/requirements.txt
+2025-02-26 21:49:58,474 INFO    Thread-12 :18912 [dir_watcher.py:_on_file_created():271] file/dir created: /home/shruti/workspaces/aerial_gym_ws/src/aerial_gym_simulator/aerial_gym/rl_training/rl_games/wandb/run-20250226_214956-6wkwdl9e/files/code/aerial_gym
+2025-02-26 21:49:58,474 INFO    Thread-12 :18912 [dir_watcher.py:_on_file_created():271] file/dir created: /home/shruti/workspaces/aerial_gym_ws/src/aerial_gym_simulator/aerial_gym/rl_training/rl_games/wandb/run-20250226_214956-6wkwdl9e/files/code/aerial_gym/rl_training
+2025-02-26 21:49:58,474 INFO    Thread-12 :18912 [dir_watcher.py:_on_file_created():271] file/dir created: /home/shruti/workspaces/aerial_gym_ws/src/aerial_gym_simulator/aerial_gym/rl_training/rl_games/wandb/run-20250226_214956-6wkwdl9e/files/code
+2025-02-26 21:49:58,474 INFO    Thread-12 :18912 [dir_watcher.py:_on_file_created():271] file/dir created: /home/shruti/workspaces/aerial_gym_ws/src/aerial_gym_simulator/aerial_gym/rl_training/rl_games/wandb/run-20250226_214956-6wkwdl9e/files/code/aerial_gym/rl_training/rl_games
+2025-02-26 21:49:58,480 INFO    wandb-upload_0:18912 [upload_job.py:push():131] Uploaded file /tmp/tmp3212va81wandb/4od9ks2c-wandb-metadata.json
+2025-02-26 21:49:58,516 INFO    wandb-upload_1:18912 [upload_job.py:push():131] Uploaded file /tmp/tmp3212va81wandb/fvi53ci6-code/aerial_gym/rl_training/rl_games/runner.py
+2025-02-26 21:49:58,717 INFO    wandb-upload_2:18912 [upload_job.py:push():131] Uploaded file /tmp/tmp3212va81wandb/hydyx11x-diff.patch
+2025-02-26 21:50:00,476 INFO    Thread-12 :18912 [dir_watcher.py:_on_file_modified():288] file/dir modified: /home/shruti/workspaces/aerial_gym_ws/src/aerial_gym_simulator/aerial_gym/rl_training/rl_games/wandb/run-20250226_214956-6wkwdl9e/files/output.log
+2025-02-26 21:50:00,553 INFO    cpu       :18912 [interfaces.py:monitor():140] Process cpu has exited.
+2025-02-26 21:50:00,557 DEBUG   SystemMonitor:18912 [system_monitor.py:_start():172] Starting system metrics aggregation loop
+2025-02-26 21:50:00,558 DEBUG   SystemMonitor:18912 [system_monitor.py:_start():179] Finished system metrics aggregation loop
+2025-02-26 21:50:00,558 DEBUG   SystemMonitor:18912 [system_monitor.py:_start():183] Publishing last batch of metrics
+2025-02-26 21:50:00,561 DEBUG   SenderThread:18912 [sender.py:send():379] send: stats
+2025-02-26 21:50:01,542 INFO    MainThread:18912 [internal.py:handle_exit():76] Internal process exited
diff --git a/aerial_gym/rl_training/rl_games/wandb/run-20250226_214956-6wkwdl9e/logs/debug.log b/aerial_gym/rl_training/rl_games/wandb/run-20250226_214956-6wkwdl9e/logs/debug.log
new file mode 100644
index 0000000..71ca0b3
--- /dev/null
+++ b/aerial_gym/rl_training/rl_games/wandb/run-20250226_214956-6wkwdl9e/logs/debug.log
@@ -0,0 +1,28 @@
+2025-02-26 21:49:56,171 INFO    MainThread:18851 [wandb_setup.py:_flush():76] Current SDK version is 0.16.6
+2025-02-26 21:49:56,171 INFO    MainThread:18851 [wandb_setup.py:_flush():76] Configure stats pid to 18851
+2025-02-26 21:49:56,171 INFO    MainThread:18851 [wandb_setup.py:_flush():76] Loading settings from /home/shruti/.config/wandb/settings
+2025-02-26 21:49:56,171 INFO    MainThread:18851 [wandb_setup.py:_flush():76] Loading settings from /home/shruti/workspaces/aerial_gym_ws/src/aerial_gym_simulator/aerial_gym/rl_training/rl_games/wandb/settings
+2025-02-26 21:49:56,171 INFO    MainThread:18851 [wandb_setup.py:_flush():76] Loading settings from environment variables: {}
+2025-02-26 21:49:56,171 INFO    MainThread:18851 [wandb_setup.py:_flush():76] Applying setup settings: {'_disable_service': False}
+2025-02-26 21:49:56,171 INFO    MainThread:18851 [wandb_setup.py:_flush():76] Inferring run settings from compute environment: {'program_relpath': 'aerial_gym/rl_training/rl_games/runner.py', 'program_abspath': '/home/shruti/workspaces/aerial_gym_ws/src/aerial_gym_simulator/aerial_gym/rl_training/rl_games/runner.py', 'program': 'runner.py'}
+2025-02-26 21:49:56,171 INFO    MainThread:18851 [wandb_setup.py:_flush():76] Applying login settings: {}
+2025-02-26 21:49:56,171 INFO    MainThread:18851 [wandb_init.py:_log_setup():521] Logging user logs to /home/shruti/workspaces/aerial_gym_ws/src/aerial_gym_simulator/aerial_gym/rl_training/rl_games/wandb/run-20250226_214956-6wkwdl9e/logs/debug.log
+2025-02-26 21:49:56,171 INFO    MainThread:18851 [wandb_init.py:_log_setup():522] Logging internal logs to /home/shruti/workspaces/aerial_gym_ws/src/aerial_gym_simulator/aerial_gym/rl_training/rl_games/wandb/run-20250226_214956-6wkwdl9e/logs/debug-internal.log
+2025-02-26 21:49:56,171 INFO    MainThread:18851 [wandb_init.py:init():561] calling init triggers
+2025-02-26 21:49:56,171 INFO    MainThread:18851 [wandb_init.py:init():568] wandb.init called with sweep_config: {}
+config: {'params': {'seed': 10, 'algo': {'name': 'a2c_continuous'}, 'model': {'name': 'continuous_a2c_logstd'}, 'load_checkpoint': False, 'network': {'name': 'actor_critic', 'separate': False, 'space': {'continuous': {'mu_activation': 'None', 'sigma_activation': 'None', 'mu_init': {'name': 'default'}, 'sigma_init': {'name': 'const_initializer', 'val': 0}, 'fixed_sigma': True}}, 'mlp': {'units': [256, 128, 64], 'd2rl': False, 'activation': 'elu', 'initializer': {'name': 'default', 'scale': 2}}}, 'config': {'env_name': 'navigation_task', 'env_config': {'num_envs': 16, 'headless': False, 'use_warp': True}, 'name': 'gen_ppo', 'reward_shaper': {'scale_value': 0.1}, 'normalize_advantage': True, 'gamma': 0.98, 'tau': 0.95, 'ppo': True, 'learning_rate': '1e-4', 'lr_schedule': 'adaptive', 'kl_threshold': 0.016, 'save_best_after': 10, 'score_to_win': 100000, 'grad_norm': 1.0, 'entropy_coef': 0, 'truncate_grads': True, 'e_clip': 0.2, 'clip_value': False, 'num_actors': 16, 'horizon_length': 32, 'minibatch_size': 2048, 'mini_epochs': 4, 'critic_coef': 2, 'normalize_input': True, 'bounds_loss_coef': 0.0001, 'max_epochs': 500, 'normalize_value': True, 'use_diagnostics': True, 'value_bootstrap': True, 'use_smooth_clamp': False, 'player': {'use_vecenv': True}}}}
+2025-02-26 21:49:56,171 INFO    MainThread:18851 [wandb_init.py:init():611] starting backend
+2025-02-26 21:49:56,171 INFO    MainThread:18851 [wandb_init.py:init():615] setting up manager
+2025-02-26 21:49:56,172 INFO    MainThread:18851 [backend.py:_multiprocessing_setup():105] multiprocessing start_methods=fork,spawn,forkserver, using: spawn
+2025-02-26 21:49:56,173 INFO    MainThread:18851 [wandb_init.py:init():623] backend started and connected
+2025-02-26 21:49:56,174 INFO    MainThread:18851 [wandb_init.py:init():715] updated telemetry
+2025-02-26 21:49:56,186 INFO    MainThread:18851 [wandb_init.py:init():748] communicating run to backend with 90.0 second timeout
+2025-02-26 21:49:56,485 INFO    MainThread:18851 [wandb_run.py:_on_init():2357] communicating current version
+2025-02-26 21:49:56,533 INFO    MainThread:18851 [wandb_run.py:_on_init():2366] got version response upgrade_message: "wandb version 0.19.7 is available!  To upgrade, please run:\n $ pip install wandb --upgrade"
+
+2025-02-26 21:49:56,534 INFO    MainThread:18851 [wandb_init.py:init():799] starting run threads in backend
+2025-02-26 21:49:58,309 INFO    MainThread:18851 [wandb_run.py:_console_start():2335] atexit reg
+2025-02-26 21:49:58,310 INFO    MainThread:18851 [wandb_run.py:_redirect():2190] redirect: wrap_raw
+2025-02-26 21:49:58,310 INFO    MainThread:18851 [wandb_run.py:_redirect():2255] Wrapping output streams.
+2025-02-26 21:49:58,310 INFO    MainThread:18851 [wandb_run.py:_redirect():2280] Redirects installed.
+2025-02-26 21:49:58,310 INFO    MainThread:18851 [wandb_init.py:init():842] run started, returning control to user process
diff --git a/aerial_gym/rl_training/rl_games/wandb/run-20250226_214956-6wkwdl9e/run-6wkwdl9e.wandb b/aerial_gym/rl_training/rl_games/wandb/run-20250226_214956-6wkwdl9e/run-6wkwdl9e.wandb
new file mode 100644
index 0000000..5767a58
Binary files /dev/null and b/aerial_gym/rl_training/rl_games/wandb/run-20250226_214956-6wkwdl9e/run-6wkwdl9e.wandb differ
diff --git a/aerial_gym/rl_training/rl_games/wandb/run-20250226_215009-ret1uwih/files/code/aerial_gym/rl_training/rl_games/runner.py b/aerial_gym/rl_training/rl_games/wandb/run-20250226_215009-ret1uwih/files/code/aerial_gym/rl_training/rl_games/runner.py
new file mode 100644
index 0000000..bd45a3c
--- /dev/null
+++ b/aerial_gym/rl_training/rl_games/wandb/run-20250226_215009-ret1uwih/files/code/aerial_gym/rl_training/rl_games/runner.py
@@ -0,0 +1,331 @@
+import numpy as np
+import os
+import yaml
+
+
+import isaacgym
+
+
+from aerial_gym.registry.task_registry import task_registry
+from aerial_gym.utils.helpers import parse_arguments
+
+import gym
+from gym import spaces
+from argparse import Namespace
+
+from rl_games.common import env_configurations, vecenv
+
+import torch
+import distutils
+
+os.environ["XLA_PYTHON_CLIENT_PREALLOCATE"] = "false"
+# import warnings
+# warnings.filterwarnings("error")
+
+
+class ExtractObsWrapper(gym.Wrapper):
+    def __init__(self, env):
+        super().__init__(env)
+
+    def reset(self, **kwargs):
+        observations, *_ = super().reset(**kwargs)
+        return observations["observations"]
+
+    def step(self, action):
+        observations, rewards, terminated, truncated, infos = super().step(action)
+
+        dones = torch.where(
+            terminated | truncated,
+            torch.ones_like(terminated),
+            torch.zeros_like(terminated),
+        )
+
+        return (
+            observations["observations"],
+            rewards,
+            dones,
+            infos,
+        )
+
+
+class AERIALRLGPUEnv(vecenv.IVecEnv):
+    def __init__(self, config_name, num_actors, **kwargs):
+        self.env = env_configurations.configurations[config_name]["env_creator"](**kwargs)
+        self.env = ExtractObsWrapper(self.env)
+
+    def step(self, actions):
+        return self.env.step(actions)
+
+    def reset(self):
+        return self.env.reset()
+
+    def reset_done(self):
+        return self.env.reset_done()
+
+    def get_number_of_agents(self):
+        return self.env.get_number_of_agents()
+
+    def get_env_info(self):
+        info = {}
+        info["action_space"] = spaces.Box(
+            -np.ones(self.env.task_config.action_space_dim),
+            np.ones(self.env.task_config.action_space_dim),
+        )
+        info["observation_space"] = spaces.Box(
+            np.ones(self.env.task_config.observation_space_dim) * -np.Inf,
+            np.ones(self.env.task_config.observation_space_dim) * np.Inf,
+        )
+        print(info["action_space"], info["observation_space"])
+        return info
+
+
+env_configurations.register(
+    "position_setpoint_task",
+    {
+        "env_creator": lambda **kwargs: task_registry.make_task("position_setpoint_task", **kwargs),
+        "vecenv_type": "AERIAL-RLGPU",
+    },
+)
+
+env_configurations.register(
+    "position_setpoint_task_sim2real",
+    {
+        "env_creator": lambda **kwargs: task_registry.make_task(
+            "position_setpoint_task_sim2real", **kwargs
+        ),
+        "vecenv_type": "AERIAL-RLGPU",
+    },
+)
+
+env_configurations.register(
+    "position_setpoint_task_acceleration_sim2real",
+    {
+        "env_creator": lambda **kwargs: task_registry.make_task(
+            "position_setpoint_task_acceleration_sim2real", **kwargs
+        ),
+        "vecenv_type": "AERIAL-RLGPU",
+    },
+)
+
+env_configurations.register(
+    "navigation_task",
+    {
+        "env_creator": lambda **kwargs: task_registry.make_task("navigation_task", **kwargs),
+        "vecenv_type": "AERIAL-RLGPU",
+    },
+)
+
+env_configurations.register(
+    "position_setpoint_task_reconfigurable",
+    {
+        "env_creator": lambda **kwargs: task_registry.make_task(
+            "position_setpoint_task_reconfigurable", **kwargs
+        ),
+        "vecenv_type": "AERIAL-RLGPU",
+    },
+)
+
+env_configurations.register(
+    "position_setpoint_task_morphy",
+    {
+        "env_creator": lambda **kwargs: task_registry.make_task(
+            "position_setpoint_task_morphy", **kwargs
+        ),
+        "vecenv_type": "AERIAL-RLGPU",
+    },
+)
+
+env_configurations.register(
+    "position_setpoint_task_sim2real_end_to_end",
+    {
+        "env_creator": lambda **kwargs: task_registry.make_task(
+            "position_setpoint_task_sim2real_end_to_end", **kwargs
+        ),
+        "vecenv_type": "AERIAL-RLGPU",
+    },
+)
+
+vecenv.register(
+    "AERIAL-RLGPU",
+    lambda config_name, num_actors, **kwargs: AERIALRLGPUEnv(config_name, num_actors, **kwargs),
+)
+
+
+def get_args():
+    from isaacgym import gymutil
+
+    custom_parameters = [
+        {
+            "name": "--seed",
+            "type": int,
+            "default": 0,
+            "required": False,
+            "help": "Random seed, if larger than 0 will overwrite the value in yaml config.",
+        },
+        {
+            "name": "--tf",
+            "required": False,
+            "help": "run tensorflow runner",
+            "action": "store_true",
+        },
+        {
+            "name": "--train",
+            "required": False,
+            "help": "train network",
+            "action": "store_true",
+        },
+        {
+            "name": "--play",
+            "required": False,
+            "help": "play(test) network",
+            "action": "store_true",
+        },
+        {
+            "name": "--checkpoint",
+            "type": str,
+            "required": False,
+            "help": "path to checkpoint",
+        },
+        {
+            "name": "--file",
+            "type": str,
+            "default": "ppo_aerial_quad.yaml",
+            "required": False,
+            "help": "path to config",
+        },
+        {
+            "name": "--num_envs",
+            "type": int,
+            "default": "1024",
+            "help": "Number of environments to create. Overrides config file if provided.",
+        },
+        {
+            "name": "--sigma",
+            "type": float,
+            "required": False,
+            "help": "sets new sigma value in case if 'fixed_sigma: True' in yaml config",
+        },
+        {
+            "name": "--track",
+            "action": "store_true",
+            "help": "if toggled, this experiment will be tracked with Weights and Biases",
+        },
+        {
+            "name": "--wandb-project-name",
+            "type": str,
+            "default": "rl_games",
+            "help": "the wandb's project name",
+        },
+        {
+            "name": "--wandb-entity",
+            "type": str,
+            "default": None,
+            "help": "the entity (team) of wandb's project",
+        },
+        {
+            "name": "--task",
+            "type": str,
+            "default": "navigation_task",
+            "help": "Override task from config file if provided.",
+        },
+        {
+            "name": "--experiment_name",
+            "type": str,
+            "help": "Name of the experiment to run or load. Overrides config file if provided.",
+        },
+        {
+            "name": "--headless",
+            "type": lambda x: bool(distutils.util.strtobool(x)),
+            "default": "False",
+            "help": "Force display off at all times",
+        },
+        {
+            "name": "--horovod",
+            "action": "store_true",
+            "default": False,
+            "help": "Use horovod for multi-gpu training",
+        },
+        {
+            "name": "--rl_device",
+            "type": str,
+            "default": "cuda:0",
+            "help": "Device used by the RL algorithm, (cpu, gpu, cuda:0, cuda:1 etc..)",
+        },
+        {
+            "name": "--use_warp",
+            "type": lambda x: bool(distutils.util.strtobool(x)),
+            "default": "True",
+            "help": "Choose whether to use warp or Isaac Gym rendering pipeline.",
+        },
+    ]
+
+    # parse arguments
+    args = parse_arguments(description="RL Policy", custom_parameters=custom_parameters)
+
+    # name allignment
+    args.sim_device_id = args.compute_device_id
+    args.sim_device = args.sim_device_type
+    if args.sim_device == "cuda":
+        args.sim_device += f":{args.sim_device_id}"
+    return args
+
+
+def update_config(config, args):
+
+    if args["task"] is not None:
+        config["params"]["config"]["env_name"] = args["task"]
+    if args["experiment_name"] is not None:
+        config["params"]["config"]["name"] = args["experiment_name"]
+    config["params"]["config"]["env_config"]["headless"] = args["headless"]
+    config["params"]["config"]["env_config"]["num_envs"] = args["num_envs"]
+    config["params"]["config"]["env_config"]["use_warp"] = args["use_warp"]
+    if args["num_envs"] > 0:
+        config["params"]["config"]["num_actors"] = args["num_envs"]
+        # config['params']['config']['num_envs'] = args['num_envs']
+        config["params"]["config"]["env_config"]["num_envs"] = args["num_envs"]
+    if args["seed"] > 0:
+        config["params"]["seed"] = args["seed"]
+        config["params"]["config"]["env_config"]["seed"] = args["seed"]
+
+    config["params"]["config"]["player"] = {"use_vecenv": True}
+    return config
+
+
+if __name__ == "__main__":
+    os.makedirs("nn", exist_ok=True)
+    os.makedirs("runs", exist_ok=True)
+
+    args = vars(get_args())
+
+    config_name = args["file"]
+
+    print("Loading config: ", config_name)
+    with open(config_name, "r") as stream:
+        config = yaml.safe_load(stream)
+
+        config = update_config(config, args)
+
+        from rl_games.torch_runner import Runner
+
+        runner = Runner()
+        try:
+            runner.load(config)
+        except yaml.YAMLError as exc:
+            print(exc)
+
+    rank = int(os.getenv("LOCAL_RANK", "0"))
+    if args["track"] and rank == 0:
+        import wandb
+
+        wandb.init(
+            project=args["wandb_project_name"],
+            entity=args["wandb_entity"],
+            sync_tensorboard=True,
+            config=config,
+            monitor_gym=True,
+            save_code=True,
+        )
+    runner.run(args)
+
+    if args["track"] and rank == 0:
+        wandb.finish()
diff --git a/aerial_gym/rl_training/rl_games/wandb/run-20250226_215009-ret1uwih/files/conda-environment.yaml b/aerial_gym/rl_training/rl_games/wandb/run-20250226_215009-ret1uwih/files/conda-environment.yaml
new file mode 100644
index 0000000..b5e6902
--- /dev/null
+++ b/aerial_gym/rl_training/rl_games/wandb/run-20250226_215009-ret1uwih/files/conda-environment.yaml
@@ -0,0 +1,409 @@
+name: aerialgym
+channels:
+  - pytorch3d
+  - iopath
+  - fvcore
+  - pytorch
+  - nvidia
+  - nvidia/label/cuda-11.8.0
+  - conda-forge
+  - defaults
+  - https://repo.anaconda.com/pkgs/main
+  - https://repo.anaconda.com/pkgs/r
+dependencies:
+  - _libgcc_mutex=0.1=main
+  - _openmp_mutex=5.1=1_gnu
+  - absl-py=2.1.0=pyhd8ed1ab_0
+  - aiohttp=3.7.4.post0=py38h497a2fe_1
+  - antlr-python-runtime=4.9.3=pyhd8ed1ab_1
+  - anyio=4.5.0=pyhd8ed1ab_0
+  - appdirs=1.4.4=pyh9f0ad1d_0
+  - argon2-cffi=23.1.0=pyhd8ed1ab_0
+  - argon2-cffi-bindings=21.2.0=py38h01eb140_4
+  - arrow=1.3.0=pyhd8ed1ab_0
+  - asttokens=3.0.0=pyhd8ed1ab_0
+  - async-lru=2.0.4=pyhd8ed1ab_0
+  - async-timeout=3.0.1=py_1000
+  - attrs=24.2.0=pyh71513ae_0
+  - babel=2.16.0=pyhd8ed1ab_0
+  - backcall=0.2.0=pyh9f0ad1d_0
+  - beautifulsoup4=4.12.3=pyha770c72_0
+  - blas=1.0=mkl
+  - bleach=6.1.0=pyhd8ed1ab_0
+  - blinker=1.8.2=pyhd8ed1ab_0
+  - brotli=1.1.0=hb9d3cd8_2
+  - brotli-bin=1.1.0=hb9d3cd8_2
+  - brotli-python=1.0.9=py38hfa26641_7
+  - bullet-cpp=3.21=h43a58ef_1
+  - bzip2=1.0.8=h5eee18b_6
+  - c-ares=1.19.1=h5eee18b_0
+  - ca-certificates=2025.2.25=h06a4308_0
+  - cached-property=1.5.2=hd8ed1ab_1
+  - cached_property=1.5.2=pyha770c72_1
+  - cachetools=5.5.0=pyhd8ed1ab_0
+  - certifi=2024.8.30=pyhd8ed1ab_0
+  - cffi=1.15.0=py38h3931269_0
+  - chardet=4.0.0=py38h578d9bd_3
+  - charset-normalizer=3.4.0=pyhd8ed1ab_0
+  - click=8.1.7=unix_pyh707e725_0
+  - colorama=0.4.6=pyhd8ed1ab_0
+  - comm=0.2.2=pyhd8ed1ab_0
+  - cryptography=43.0.0=py38hdda0065_0
+  - cuda=11.8.0=0
+  - cuda-cccl=11.8.89=0
+  - cuda-command-line-tools=11.8.0=0
+  - cuda-compiler=11.8.0=0
+  - cuda-cudart=11.8.89=0
+  - cuda-cudart-dev=11.8.89=0
+  - cuda-cuobjdump=11.8.86=0
+  - cuda-cupti=11.8.87=0
+  - cuda-cuxxfilt=11.8.86=0
+  - cuda-demo-suite=11.8.86=0
+  - cuda-documentation=11.8.86=0
+  - cuda-driver-dev=11.8.89=0
+  - cuda-gdb=11.8.86=0
+  - cuda-libraries=11.8.0=0
+  - cuda-libraries-dev=11.8.0=0
+  - cuda-memcheck=11.8.86=0
+  - cuda-nsight=11.8.86=0
+  - cuda-nsight-compute=11.8.0=0
+  - cuda-nvcc=11.8.89=0
+  - cuda-nvdisasm=11.8.86=0
+  - cuda-nvml-dev=11.8.86=0
+  - cuda-nvprof=11.8.87=0
+  - cuda-nvprune=11.8.86=0
+  - cuda-nvrtc=11.8.89=0
+  - cuda-nvrtc-dev=11.8.89=0
+  - cuda-nvtx=11.8.86=0
+  - cuda-nvvp=11.8.87=0
+  - cuda-opencl=12.4.127=0
+  - cuda-profiler-api=11.8.86=0
+  - cuda-runtime=11.8.0=0
+  - cuda-sanitizer-api=11.8.86=0
+  - cuda-toolkit=11.8.0=0
+  - cuda-tools=11.8.0=0
+  - cuda-visual-tools=11.8.0=0
+  - cycler=0.12.1=pyhd8ed1ab_0
+  - dbus=1.13.18=hb2f20db_0
+  - debugpy=1.6.7=py38h6a678d5_0
+  - defusedxml=0.7.1=pyhd8ed1ab_0
+  - dill=0.3.9=pyhd8ed1ab_0
+  - docker-pycreds=0.4.0=py_0
+  - entrypoints=0.4=pyhd8ed1ab_0
+  - exceptiongroup=1.2.2=pyhd8ed1ab_0
+  - executing=2.1.0=pyhd8ed1ab_0
+  - expat=2.6.4=h5888daf_0
+  - fastcache=1.1.0=py38h7b6447c_0
+  - ffmpeg=4.3=hf484d3e_0
+  - filelock=3.13.1=py38h06a4308_0
+  - fontconfig=2.14.0=h8e229c2_0
+  - fqdn=1.5.1=pyhd8ed1ab_0
+  - freetype=2.10.4=h0708190_1
+  - fvcore=0.1.5.post20210915=py38
+  - gds-tools=1.4.0.31=0
+  - geos=3.10.2=h9c3ff4c_0
+  - giflib=5.2.2=h5eee18b_0
+  - glib=2.78.4=h6a678d5_0
+  - glib-tools=2.78.4=h6a678d5_0
+  - gmp=6.3.0=h6a678d5_0
+  - gmpy2=2.1.2=py38heeb90bb_0
+  - gnutls=3.6.15=he1e5248_0
+  - google-auth=2.35.0=pyhff2d567_0
+  - google-auth-oauthlib=1.0.0=pyhd8ed1ab_1
+  - grpcio=1.62.2=py38h6a678d5_0
+  - gst-plugins-base=1.14.1=h6a678d5_1
+  - gstreamer=1.14.1=h5eee18b_1
+  - gym-notices=0.0.8=pyhd8ed1ab_0
+  - h11=0.14.0=pyhd8ed1ab_0
+  - h2=4.1.0=pyhd8ed1ab_0
+  - hpack=4.0.0=pyh9f0ad1d_0
+  - httpcore=1.0.7=pyh29332c3_1
+  - httpx=0.27.2=pyhd8ed1ab_0
+  - hyperframe=6.0.1=pyhd8ed1ab_0
+  - icu=58.2=hf484d3e_1000
+  - idna=3.10=pyhd8ed1ab_0
+  - importlib-metadata=8.5.0=pyha770c72_0
+  - importlib_metadata=8.5.0=hd8ed1ab_1
+  - importlib_resources=6.4.5=pyhd8ed1ab_0
+  - intel-openmp=2021.4.0=h06a4308_3561
+  - iopath=0.1.9=py38
+  - ipykernel=6.29.5=pyh3099207_0
+  - ipython=8.12.2=pyh41d4057_0
+  - ipywidgets=8.1.5=pyhd8ed1ab_0
+  - isoduration=20.11.0=pyhd8ed1ab_0
+  - jbig=2.1=h7f98852_2003
+  - jedi=0.19.1=pyhd8ed1ab_0
+  - jinja2=3.1.4=pyhd8ed1ab_0
+  - jpeg=9e=h166bdaf_1
+  - json5=0.9.25=pyhd8ed1ab_0
+  - jsonpointer=3.0.0=py38h578d9bd_0
+  - jsonschema=4.23.0=pyhd8ed1ab_0
+  - jsonschema-specifications=2024.10.1=pyhd8ed1ab_0
+  - jsonschema-with-format-nongpl=4.23.0=hd8ed1ab_1
+  - jupyter=1.1.1=pyhd8ed1ab_0
+  - jupyter-lsp=2.2.5=pyhd8ed1ab_0
+  - jupyter_client=8.6.3=pyhd8ed1ab_0
+  - jupyter_console=6.6.3=pyhd8ed1ab_0
+  - jupyter_core=5.7.2=pyh31011fe_1
+  - jupyter_events=0.10.0=pyhd8ed1ab_0
+  - jupyter_server=2.14.2=pyhd8ed1ab_0
+  - jupyter_server_terminals=0.5.3=pyhd8ed1ab_0
+  - jupyterlab=4.2.5=pyhd8ed1ab_0
+  - jupyterlab_pygments=0.3.0=pyhd8ed1ab_1
+  - jupyterlab_server=2.27.3=pyhd8ed1ab_0
+  - jupyterlab_widgets=3.0.13=pyhd8ed1ab_0
+  - krb5=1.20.1=h143b758_1
+  - lame=3.100=h7b6447c_0
+  - lcms2=2.12=hddcbb42_0
+  - ld_impl_linux-64=2.40=h12ee557_0
+  - lerc=2.2.1=h9c3ff4c_0
+  - libabseil=20240116.2=cxx17_h6a678d5_0
+  - libblas=3.9.0=12_linux64_mkl
+  - libbrotlicommon=1.1.0=hb9d3cd8_2
+  - libbrotlidec=1.1.0=hb9d3cd8_2
+  - libbrotlienc=1.1.0=hb9d3cd8_2
+  - libcblas=3.9.0=12_linux64_mkl
+  - libclang=10.0.1=default_hde54327_1
+  - libcublas=11.11.3.6=0
+  - libcublas-dev=11.11.3.6=0
+  - libcufft=10.9.0.58=0
+  - libcufft-dev=10.9.0.58=0
+  - libcufile=1.9.1.3=0
+  - libcufile-dev=1.4.0.31=0
+  - libcurand=10.3.5.147=0
+  - libcurand-dev=10.3.0.86=0
+  - libcusolver=11.4.1.48=0
+  - libcusolver-dev=11.4.1.48=0
+  - libcusparse=11.7.5.86=0
+  - libcusparse-dev=11.7.5.86=0
+  - libdeflate=1.7=h7f98852_5
+  - libedit=3.1.20230828=h5eee18b_0
+  - libevent=2.1.12=hf998b51_1
+  - libexpat=2.6.4=h5888daf_0
+  - libffi=3.4.4=h6a678d5_1
+  - libgcc=14.2.0=h767d61c_2
+  - libgcc-ng=14.2.0=h69a702a_2
+  - libgfortran-ng=13.2.0=h69a702a_0
+  - libgfortran5=13.2.0=ha4646dd_0
+  - libglib=2.78.4=hdc74915_0
+  - libgomp=14.2.0=h767d61c_2
+  - libgrpc=1.62.2=h2d74bed_0
+  - libiconv=1.16=h5eee18b_3
+  - libidn2=2.3.4=h5eee18b_0
+  - libjpeg-turbo=2.0.0=h9bf148f_0
+  - liblapack=3.9.0=12_linux64_mkl
+  - libllvm10=10.0.1=he513fc3_3
+  - libnpp=11.8.0.86=0
+  - libnpp-dev=11.8.0.86=0
+  - libnvfatbin=12.4.127=0
+  - libnvjitlink=12.4.127=0
+  - libnvjpeg=11.9.0.86=0
+  - libnvjpeg-dev=11.9.0.86=0
+  - libopenblas=0.3.21=h043d6bf_0
+  - libpng=1.6.37=h21135ba_2
+  - libpq=12.20=hdbd6064_0
+  - libprotobuf=4.25.3=he621ea3_0
+  - libsodium=1.0.18=h36c2ea0_1
+  - libstdcxx=14.2.0=h8f9b012_2
+  - libstdcxx-ng=11.2.0=h1234567_1
+  - libtasn1=4.19.0=h5eee18b_0
+  - libtiff=4.3.0=hf544144_1
+  - libunistring=0.9.10=h27cfd23_0
+  - libuuid=2.38.1=h0b41bf4_0
+  - libwebp=1.2.2=h55f646e_0
+  - libwebp-base=1.2.2=h7f98852_1
+  - libxcb=1.17.0=h8a09558_0
+  - libxkbcommon=1.0.3=he3ba5ed_0
+  - libxml2=2.9.14=h74e7548_0
+  - llvm-openmp=14.0.6=h9e868ea_0
+  - lz4-c=1.9.4=h6a678d5_1
+  - markdown=3.6=pyhd8ed1ab_0
+  - markupsafe=2.1.1=py38h0a891b7_1
+  - matplotlib-base=3.7.2=py38h1128e8f_0
+  - matplotlib-inline=0.1.7=pyhd8ed1ab_0
+  - metis=5.1.0=hd0bcaf9_1007
+  - mistune=3.0.2=pyhd8ed1ab_0
+  - mkl=2021.4.0=h06a4308_640
+  - mkl-service=2.4.0=py38h7f8727e_0
+  - mkl_fft=1.3.1=py38hd3c417c_0
+  - mkl_random=1.2.2=py38h51133e4_0
+  - mpc=1.3.1=h5eee18b_0
+  - mpfr=4.2.1=h90cbb55_3
+  - mpmath=1.3.0=py38h06a4308_0
+  - multidict=6.0.2=py38h0a891b7_1
+  - munkres=1.1.4=pyh9f0ad1d_0
+  - nbclient=0.10.2=pyhd8ed1ab_0
+  - nbconvert-core=7.16.4=pyhff2d567_2
+  - nbformat=5.10.4=pyhd8ed1ab_0
+  - ncurses=6.4=h6a678d5_0
+  - nest-asyncio=1.6.0=pyhd8ed1ab_0
+  - nettle=3.7.3=hbbd107a_1
+  - ninja-base=1.12.1=hdb19cb5_0
+  - notebook=7.2.2=pyhd8ed1ab_0
+  - notebook-shim=0.2.4=pyhd8ed1ab_0
+  - nsight-compute=2022.3.0.22=0
+  - nspr=4.36=h5888daf_0
+  - nss=3.89.1=h6a678d5_0
+  - oauthlib=3.2.2=pyhd8ed1ab_0
+  - olefile=0.47=pyhd8ed1ab_0
+  - omegaconf=2.3.0=pyhd8ed1ab_0
+  - openh264=2.1.1=h4ff587b_0
+  - openjpeg=2.4.0=hb52868f_1
+  - openssl=3.4.1=h7b32b05_0
+  - overrides=7.7.0=pyhd8ed1ab_0
+  - packaging=24.2=pyhd8ed1ab_2
+  - pandas=1.4.2=py38h47df419_1
+  - pandocfilters=1.5.0=pyhd8ed1ab_0
+  - parso=0.8.4=pyhd8ed1ab_0
+  - pcre2=10.42=hebb0a14_1
+  - pexpect=4.9.0=pyhd8ed1ab_0
+  - pickleshare=0.7.5=py_1003
+  - pillow=9.4.0=py38h6a678d5_0
+  - pip=24.2=py38h06a4308_0
+  - pkgutil-resolve-name=1.3.10=pyhd8ed1ab_1
+  - platformdirs=4.3.6=pyhd8ed1ab_0
+  - plotly=5.24.1=pyhd8ed1ab_0
+  - portalocker=2.10.1=py38h578d9bd_0
+  - prometheus_client=0.21.0=pyhd8ed1ab_0
+  - prompt-toolkit=3.0.48=pyha770c72_0
+  - prompt_toolkit=3.0.48=hd8ed1ab_1
+  - pthread-stubs=0.4=hb9d3cd8_1002
+  - ptyprocess=0.7.0=pyhd3deb0d_0
+  - pure_eval=0.2.3=pyhd8ed1ab_0
+  - pyasn1=0.6.1=pyhd8ed1ab_1
+  - pyasn1-modules=0.4.1=pyhd8ed1ab_0
+  - pybullet=3.21=py38h43a58ef_1
+  - pycparser=2.22=pyhd8ed1ab_0
+  - pygments=2.18.0=pyhd8ed1ab_0
+  - pyjwt=2.9.0=pyhd8ed1ab_1
+  - pyopenssl=24.2.1=pyhd8ed1ab_2
+  - pyqt=5.15.4=py38hfa26641_0
+  - pyqt5-sip=12.9.0=py38hfa26641_0
+  - pysocks=1.7.1=pyha2e5f31_6
+  - python=3.8.20=he870216_0
+  - python-fastjsonschema=2.20.0=pyhd8ed1ab_0
+  - python-json-logger=2.0.7=pyhd8ed1ab_0
+  - python_abi=3.8=2_cp38
+  - pytorch=2.2.0=py3.8_cuda11.8_cudnn8.7.0_0
+  - pytorch-cuda=11.8=h7e8668a_6
+  - pytorch-mutex=1.0=cuda
+  - pytorch3d=0.7.8=py38_cu118_pyt220
+  - pytz=2024.2=pyhd8ed1ab_0
+  - pyu2f=0.1.5=pyhd8ed1ab_0
+  - pyyaml=6.0=py38h0a891b7_5
+  - pyzmq=25.1.2=py38h6a678d5_0
+  - qt-main=5.15.2=h327a75a_7
+  - re2=2022.04.01=h27087fc_0
+  - readline=8.2=h5eee18b_0
+  - referencing=0.35.1=pyhd8ed1ab_0
+  - requests=2.32.3=pyhd8ed1ab_0
+  - requests-oauthlib=2.0.0=pyhd8ed1ab_0
+  - rfc3339-validator=0.1.4=pyhd8ed1ab_0
+  - rfc3986-validator=0.1.1=pyh9f0ad1d_0
+  - rpds-py=0.20.0=py38h4005ec7_0
+  - rsa=4.9=pyhd8ed1ab_0
+  - send2trash=1.8.3=pyh0d859eb_0
+  - setuptools=75.1.0=py38h06a4308_0
+  - shapely=1.8.2=py38h97f7145_1
+  - sip=6.5.1=py38h709712a_2
+  - six=1.16.0=pyh6c4a22f_0
+  - sniffio=1.3.1=pyhd8ed1ab_0
+  - soupsieve=2.5=pyhd8ed1ab_1
+  - sqlite=3.45.3=h5eee18b_0
+  - stack_data=0.6.2=pyhd8ed1ab_0
+  - suitesparse=5.10.1=h9e50725_1
+  - sympy=1.5.1=py38_0
+  - tabulate=0.9.0=pyhd8ed1ab_1
+  - tbb=2021.5.0=h924138e_1
+  - tenacity=9.0.0=pyhd8ed1ab_0
+  - tensorboard=2.13.0=pyhd8ed1ab_0
+  - tensorboard-data-server=0.7.0=py38h52d8a92_1
+  - termcolor=2.4.0=pyhd8ed1ab_0
+  - terminado=0.18.1=pyh0d859eb_0
+  - tinycss2=1.4.0=pyhd8ed1ab_0
+  - tk=8.6.14=h39e8969_0
+  - toml=0.10.2=pyhd8ed1ab_0
+  - tomli=2.0.2=pyhd8ed1ab_0
+  - torchaudio=2.2.0=py38_cu118
+  - torchtriton=2.2.0=py38
+  - torchvision=0.17.0=py38_cu118
+  - tornado=6.4.1=py38hfb59056_0
+  - tqdm=4.67.1=pyhd8ed1ab_0
+  - traitlets=5.14.3=pyhd8ed1ab_0
+  - types-python-dateutil=2.9.0.20241003=pyhff2d567_0
+  - typing-extensions=4.12.2=hd8ed1ab_0
+  - typing_extensions=4.12.2=pyha770c72_0
+  - typing_utils=0.1.0=pyhd8ed1ab_0
+  - unicodedata2=15.1.0=py38h01eb140_0
+  - uri-template=1.3.0=pyhd8ed1ab_0
+  - urllib3=2.2.3=pyhd8ed1ab_0
+  - wcwidth=0.2.13=pyhd8ed1ab_0
+  - webcolors=24.8.0=pyhd8ed1ab_0
+  - webencodings=0.5.1=pyhd8ed1ab_2
+  - websocket-client=1.8.0=pyhd8ed1ab_0
+  - werkzeug=3.0.6=pyhd8ed1ab_0
+  - wheel=0.44.0=py38h06a4308_0
+  - widgetsnbextension=4.0.13=pyhd8ed1ab_0
+  - xorg-libx11=1.8.11=h4f16b4b_0
+  - xorg-libxau=1.0.12=hb9d3cd8_0
+  - xorg-libxdmcp=1.1.5=hb9d3cd8_0
+  - xorg-libxext=1.3.6=hb9d3cd8_0
+  - xz=5.6.4=h5eee18b_1
+  - yacs=0.1.8=pyhd8ed1ab_0
+  - yaml=0.2.5=h7f98852_2
+  - yarl=1.7.2=py38h0a891b7_2
+  - zeromq=4.3.5=h6a678d5_0
+  - zipp=3.21.0=pyhd8ed1ab_0
+  - zlib=1.2.13=h5eee18b_1
+  - zstandard=0.23.0=py38h2c38b39_0
+  - zstd=1.5.6=hc292b87_0
+  - pip:
+      - aerial-gym==2.0.0
+      - cloudpickle==3.1.1
+      - colorlog==6.9.0
+      - contourpy==1.1.1
+      - cython==3.0.12
+      - decorator==5.2.1
+      - farama-notifications==0.0.4
+      - faster-fifo==1.4.7
+      - fonttools==4.56.0
+      - freetype-py==2.5.1
+      - fsspec==2025.2.0
+      - gitdb==4.0.12
+      - gitpython==3.1.44
+      - gym==0.23.1
+      - gymnasium==0.29.1
+      - huggingface-hub==0.29.1
+      - imageio==2.35.1
+      - kiwisolver==1.4.7
+      - lxml==5.3.1
+      - matplotlib==3.7.5
+      - networkx==2.2
+      - ninja==1.11.1.3
+      - numpy==1.23.0
+      - opencv-python==4.11.0.86
+      - pathtools==0.1.2
+      - promise==2.3
+      - protobuf==3.20.3
+      - psutil==5.9.8
+      - pycollada==0.6
+      - pygame==2.1.0
+      - pyglet==2.1.3
+      - pyopengl==3.1.0
+      - pyparsing==3.1.4
+      - pyrender==0.1.45
+      - python-dateutil==2.9.0.post0
+      - rl-games==1.6.1
+      - sample-factory==2.1.1
+      - scipy==1.10.1
+      - sentry-sdk==2.22.0
+      - setproctitle==1.3.5
+      - shortuuid==1.0.13
+      - signal-slot-mp==1.0.5
+      - smmap==5.0.2
+      - tensorboardx==2.6.2.2
+      - threadpoolctl==3.5.0
+      - trimesh==4.6.3
+      - wandb==0.12.21
+      - warp-lang==1.0.0b5
+prefix: /home/shruti/miniconda3/envs/aerialgym
diff --git a/aerial_gym/rl_training/rl_games/wandb/run-20250226_215009-ret1uwih/files/config.yaml b/aerial_gym/rl_training/rl_games/wandb/run-20250226_215009-ret1uwih/files/config.yaml
new file mode 100644
index 0000000..31ed1bd
--- /dev/null
+++ b/aerial_gym/rl_training/rl_games/wandb/run-20250226_215009-ret1uwih/files/config.yaml
@@ -0,0 +1,94 @@
+wandb_version: 1
+
+params:
+  desc: null
+  value:
+    seed: 10
+    algo:
+      name: a2c_continuous
+    model:
+      name: continuous_a2c_logstd
+    load_checkpoint: false
+    network:
+      name: actor_critic
+      separate: false
+      space:
+        continuous:
+          mu_activation: None
+          sigma_activation: None
+          mu_init:
+            name: default
+          sigma_init:
+            name: const_initializer
+            val: 0
+          fixed_sigma: true
+      mlp:
+        units:
+        - 256
+        - 128
+        - 64
+        d2rl: false
+        activation: elu
+        initializer:
+          name: default
+          scale: 2
+    config:
+      env_name: navigation_task
+      env_config:
+        num_envs: 16
+        headless: false
+        use_warp: true
+      name: gen_ppo
+      reward_shaper:
+        scale_value: 0.1
+      normalize_advantage: true
+      gamma: 0.98
+      tau: 0.95
+      ppo: true
+      learning_rate: 1e-4
+      lr_schedule: adaptive
+      kl_threshold: 0.016
+      save_best_after: 10
+      score_to_win: 100000
+      grad_norm: 1.0
+      entropy_coef: 0
+      truncate_grads: true
+      e_clip: 0.2
+      clip_value: false
+      num_actors: 16
+      horizon_length: 32
+      minibatch_size: 2048
+      mini_epochs: 4
+      critic_coef: 2
+      normalize_input: true
+      bounds_loss_coef: 0.0001
+      max_epochs: 500
+      normalize_value: true
+      use_diagnostics: true
+      value_bootstrap: true
+      use_smooth_clamp: false
+      player:
+        use_vecenv: true
+_wandb:
+  desc: null
+  value:
+    code_path: code/aerial_gym/rl_training/rl_games/runner.py
+    python_version: 3.8.20
+    cli_version: 0.16.6
+    framework: torch
+    is_jupyter_run: false
+    is_kaggle_kernel: false
+    start_time: 1740624609.0
+    t:
+      1:
+      - 1
+      - 55
+      3:
+      - 16
+      - 23
+      - 35
+      4: 3.8.20
+      5: 0.16.6
+      8:
+      - 5
+      13: linux-x86_64
diff --git a/aerial_gym/rl_training/rl_games/wandb/run-20250226_215009-ret1uwih/files/diff.patch b/aerial_gym/rl_training/rl_games/wandb/run-20250226_215009-ret1uwih/files/diff.patch
new file mode 100644
index 0000000..a7ff8db
--- /dev/null
+++ b/aerial_gym/rl_training/rl_games/wandb/run-20250226_215009-ret1uwih/files/diff.patch
@@ -0,0 +1,38 @@
+diff --git a/aerial_gym/config/task_config/navigation_task_config.py b/aerial_gym/config/task_config/navigation_task_config.py
+index 7ecbda5..2f838d7 100644
+--- a/aerial_gym/config/task_config/navigation_task_config.py
++++ b/aerial_gym/config/task_config/navigation_task_config.py
+@@ -19,7 +19,7 @@ class task_config:
+     episode_len_steps = 100  # real physics time for simulation is this value multiplied by sim.dt
+ 
+     return_state_before_reset = (
+-        False  # False as usually state is returned for next episode after reset
++        True  # False as usually state is returned for next episode after reset
+     )
+     # user can set the above to true if they so desire
+ 
+diff --git a/aerial_gym/rl_training/rl_games/runner.py b/aerial_gym/rl_training/rl_games/runner.py
+index 7e8ffb4..bd45a3c 100644
+--- a/aerial_gym/rl_training/rl_games/runner.py
++++ b/aerial_gym/rl_training/rl_games/runner.py
+@@ -255,7 +255,7 @@ def get_args():
+             "name": "--use_warp",
+             "type": lambda x: bool(distutils.util.strtobool(x)),
+             "default": "True",
+-            "help": "Choose whether to use warp or Isaac Gym rendeing pipeline.",
++            "help": "Choose whether to use warp or Isaac Gym rendering pipeline.",
+         },
+     ]
+ 
+diff --git a/aerial_gym/task/__init__.py b/aerial_gym/task/__init__.py
+index 7dd966d..7975a4d 100644
+--- a/aerial_gym/task/__init__.py
++++ b/aerial_gym/task/__init__.py
+@@ -95,5 +95,5 @@ task_registry.register_task(
+ 
+ ## Uncomment this to use custom tasks
+ 
+-# from aerial_gym.task.custom_task.custom_task import CustomTask
+-# task_registry.register_task("custom_task", CustomTask, custom_task.task_config)
++#from aerial_gym.task.custom_task.custom_task import CustomTask
++#task_registry.register_task("custom_task", CustomTask, custom_task.task_config)
diff --git a/aerial_gym/rl_training/rl_games/wandb/run-20250226_215009-ret1uwih/files/output.log b/aerial_gym/rl_training/rl_games/wandb/run-20250226_215009-ret1uwih/files/output.log
new file mode 100644
index 0000000..5cf13ca
--- /dev/null
+++ b/aerial_gym/rl_training/rl_games/wandb/run-20250226_215009-ret1uwih/files/output.log
@@ -0,0 +1,57 @@
+Started to play
+[BasePlayer] Creating vecenv:  navigation_task
+[isaacgym:gymutil.py] Unknown args:  ['--file=./ppo_aerial_quad_navigation.yaml', '--play', '--checkpoint=./runs/gen_ppo_26-16-11-42/nn/last_gen_ppo_ep_500_rew__377.14606_.pth', '--track', 'wandb-project-name=Trained_RL_Navigation', 'wandb-entity=shrutiroy03']
+[37m[4551 ms][base_task] - INFO : Setting seed: 2921304459 (base_task.py:38)
+[37m[4551 ms][navigation_task] - INFO : Building environment for navigation task. (navigation_task.py:44)
+[37m[4551 ms][navigation_task] - INFO : Sim Name: base_sim, Env Name: env_with_obstacles, Robot Name: lmf2, Controller Name: lmf2_velocity_control (navigation_task.py:45)
+[37m[4551 ms][env_manager] - INFO : Populating environments. (env_manager.py:73)
+[37m[4551 ms][env_manager] - INFO : Creating simulation instance. (env_manager.py:87)
+[37m[4551 ms][env_manager] - INFO : Instantiating IGE object. (env_manager.py:88)
+[37m[4551 ms][IsaacGymEnvManager] - INFO : Creating Isaac Gym Environment (IGE_env_manager.py:41)
+[37m[4552 ms][IsaacGymEnvManager] - INFO : Acquiring gym object (IGE_env_manager.py:73)
+[37m[4552 ms][IsaacGymEnvManager] - INFO : Acquired gym object (IGE_env_manager.py:75)
+[37m[4552 ms][IsaacGymEnvManager] - INFO : Fixing devices (IGE_env_manager.py:89)
+[37m[4552 ms][IsaacGymEnvManager] - INFO : Using GPU pipeline for simulation. (IGE_env_manager.py:102)
+[37m[4552 ms][IsaacGymEnvManager] - INFO : Sim Device type: cuda, Sim Device ID: 0 (IGE_env_manager.py:105)
+[37m[4552 ms][IsaacGymEnvManager] - INFO : Graphics Device ID: 0 (IGE_env_manager.py:119)
+[37m[4552 ms][IsaacGymEnvManager] - INFO : Creating Isaac Gym Simulation Object (IGE_env_manager.py:120)
+[33m[4552 ms][IsaacGymEnvManager] - WARNING : If you have set the CUDA_VISIBLE_DEVICES environment variable, please ensure that you set it
+[33mto a particular one that works for your system to use the viewer or Isaac Gym cameras.
+[33mIf you want to run parallel simulations on multiple GPUs with camera sensors,
+[33mplease disable Isaac Gym and use warp (by setting use_warp=True), set the viewer to headless. (IGE_env_manager.py:127)
+[33m[4552 ms][IsaacGymEnvManager] - WARNING : If you see a segfault in the next lines, it is because of the discrepancy between the CUDA device and the graphics device.
+[33mPlease ensure that the CUDA device and the graphics device are the same. (IGE_env_manager.py:132)
+[37m[5367 ms][IsaacGymEnvManager] - INFO : Created Isaac Gym Simulation Object (IGE_env_manager.py:136)
+[37m[5367 ms][IsaacGymEnvManager] - INFO : Created Isaac Gym Environment (IGE_env_manager.py:43)
+[37m[5471 ms][env_manager] - INFO : IGE object instantiated. (env_manager.py:109)
+[37m[5471 ms][env_manager] - INFO : Creating warp environment. (env_manager.py:112)
+[37m[5471 ms][env_manager] - INFO : Warp environment created. (env_manager.py:114)
+[37m[5471 ms][env_manager] - INFO : Creating robot manager. (env_manager.py:118)
+[37m[5472 ms][BaseRobot] - INFO : [DONE] Initializing controller (base_robot.py:26)
+[37m[5472 ms][BaseRobot] - INFO : Initializing controller lmf2_velocity_control (base_robot.py:29)
+[33m[5472 ms][base_multirotor] - WARNING : Creating 16 multirotors. (base_multirotor.py:32)
+[37m[5472 ms][env_manager] - INFO : [DONE] Creating robot manager. (env_manager.py:123)
+[37m[5472 ms][env_manager] - INFO : [DONE] Creating simulation instance. (env_manager.py:125)
+[37m[5472 ms][asset_loader] - INFO : Loading asset: model.urdf for the first time. Next use of this asset will be via the asset buffer. (asset_loader.py:71)
+[37m[5472 ms][asset_loader] - INFO : Loading asset: panel.urdf for the first time. Next use of this asset will be via the asset buffer. (asset_loader.py:71)
+[37m[5474 ms][asset_loader] - INFO : Loading asset: cuboidal_rod.urdf for the first time. Next use of this asset will be via the asset buffer. (asset_loader.py:71)
+[37m[5475 ms][asset_loader] - INFO : Loading asset: small_cube.urdf for the first time. Next use of this asset will be via the asset buffer. (asset_loader.py:71)
+[37m[5476 ms][asset_loader] - INFO : Loading asset: left_wall.urdf for the first time. Next use of this asset will be via the asset buffer. (asset_loader.py:71)
+[37m[5477 ms][asset_loader] - INFO : Loading asset: right_wall.urdf for the first time. Next use of this asset will be via the asset buffer. (asset_loader.py:71)
+[37m[5478 ms][asset_loader] - INFO : Loading asset: back_wall.urdf for the first time. Next use of this asset will be via the asset buffer. (asset_loader.py:71)
+[37m[5478 ms][asset_loader] - INFO : Loading asset: front_wall.urdf for the first time. Next use of this asset will be via the asset buffer. (asset_loader.py:71)
+[37m[5479 ms][asset_loader] - INFO : Loading asset: bottom_wall.urdf for the first time. Next use of this asset will be via the asset buffer. (asset_loader.py:71)
+[37m[5480 ms][asset_loader] - INFO : Loading asset: top_wall.urdf for the first time. Next use of this asset will be via the asset buffer. (asset_loader.py:71)
+[37m[5481 ms][asset_loader] - INFO : Loading asset: 0_5_x_0_5_wall.urdf for the first time. Next use of this asset will be via the asset buffer. (asset_loader.py:71)
+[37m[5482 ms][asset_loader] - INFO : Loading asset: 1_x_1_wall.urdf for the first time. Next use of this asset will be via the asset buffer. (asset_loader.py:71)
+[37m[5483 ms][env_manager] - INFO : Populating environment 0 (env_manager.py:179)
+[33m[5570 ms][robot_manager] - WARNING : 
+[33mRobot mass: 1.2400000467896461,
+[33mInertia: tensor([[0.0134, 0.0000, 0.0000],
+[33m        [0.0000, 0.0144, 0.0000],
+[33m        [0.0000, 0.0000, 0.0138]], device='cuda:0'),
+[33mRobot COM: tensor([[0., 0., 0., 1.]], device='cuda:0') (robot_manager.py:427)
+[33m[5570 ms][robot_manager] - WARNING : Calculated robot mass and inertia for this robot. This code assumes that your robot is the same across environments. (robot_manager.py:430)
+[31m[5570 ms][robot_manager] - CRITICAL : If your robot differs across environments you need to perform this computation for each different robot here. (robot_manager.py:433)
+[37m[5591 ms][env_manager] - INFO : [DONE] Populating environments. (env_manager.py:75)
+[33m[5598 ms][IsaacGymEnvManager] - WARNING : Headless: False (IGE_env_manager.py:424)
diff --git a/aerial_gym/rl_training/rl_games/wandb/run-20250226_215009-ret1uwih/files/requirements.txt b/aerial_gym/rl_training/rl_games/wandb/run-20250226_215009-ret1uwih/files/requirements.txt
new file mode 100644
index 0000000..a906a9d
--- /dev/null
+++ b/aerial_gym/rl_training/rl_games/wandb/run-20250226_215009-ret1uwih/files/requirements.txt
@@ -0,0 +1,264 @@
+Brotli==1.0.9
+Cython==3.0.12
+Farama-Notifications==0.0.4
+GitPython==3.1.43
+GitPython==3.1.44
+Jinja2==3.1.4
+Markdown==3.6
+MarkupSafe==2.1.1
+Pillow==9.4.0
+PyJWT==2.9.0
+PyOpenGL==3.1.0
+PyQt5-sip==12.9.0
+PyQt5==5.15.4
+PySocks==1.7.1
+PyYAML==6.0
+Pygments==2.18.0
+Send2Trash==1.8.3
+Shapely==1.8.2
+Werkzeug==3.0.6
+absl-py==2.1.0
+aerial_gym==2.0.0
+aiohttp==3.7.4.post0
+antlr4-python3-runtime==4.9.3
+anyio==4.5.0
+appdirs==1.4.4
+argon2-cffi-bindings==21.2.0
+argon2-cffi==23.1.0
+arrow==1.3.0
+asttokens==3.0.0
+async-lru==2.0.4
+async-timeout==3.0.1
+attrs==24.2.0
+autocommand==2.2.2
+babel==2.16.0
+backcall==0.2.0
+backports.tarfile==1.2.0
+beautifulsoup4==4.12.3
+bleach==6.1.0
+blinker==1.8.2
+cached-property==1.5.2
+cachetools==5.5.0
+certifi==2024.8.30
+cffi==1.15.0
+chardet==4.0.0
+charset-normalizer==3.4.0
+click==8.1.7
+cloudpickle==3.1.0
+cloudpickle==3.1.1
+colorama==0.4.6
+colorlog==6.9.0
+comm==0.2.2
+contourpy==1.0.2
+contourpy==1.1.1
+cryptography==43.0.0
+cycler==0.12.1
+debugpy==1.6.7
+decorator==5.1.1
+decorator==5.2.1
+defusedxml==0.7.1
+dill==0.3.9
+docker-pycreds==0.4.0
+entrypoints==0.4
+exceptiongroup==1.2.2
+executing==2.1.0
+fastcache==1.1.0
+faster-fifo==1.4.7
+fastjsonschema==2.20.0
+filelock==3.13.1
+fonttools==4.53.1
+fonttools==4.56.0
+fqdn==1.5.1
+freetype-py==2.5.1
+fsspec==2025.2.0
+fvcore==0.1.5.post20210915
+gitdb==4.0.11
+gitdb==4.0.12
+gmpy2==2.1.2
+google-auth-oauthlib==1.0.0
+google-auth==2.35.0
+grpcio==1.62.2
+gym-notices==0.0.8
+gym==0.23.1
+gym==0.26.1
+gymnasium==0.29.1
+h11==0.14.0
+h2==4.1.0
+hpack==4.0.0
+httpcore==1.0.7
+httpx==0.27.2
+huggingface-hub==0.29.1
+hyperframe==6.0.1
+idna==3.10
+imageio==2.35.1
+importlib_metadata==8.0.0
+importlib_metadata==8.5.0
+importlib_resources==6.4.0
+importlib_resources==6.4.5
+inflect==7.3.1
+iopath==0.1.9
+ipykernel==6.29.5
+ipython==8.12.2
+ipywidgets==8.1.5
+isaacgym==1.0rc4
+isoduration==20.11.0
+jaraco.collections==5.1.0
+jaraco.context==5.3.0
+jaraco.functools==4.0.1
+jaraco.text==3.12.1
+jedi==0.19.1
+json5==0.9.25
+jsonpointer==3.0.0
+jsonschema-specifications==2024.10.1
+jsonschema==4.23.0
+jupyter-console==6.6.3
+jupyter-events==0.10.0
+jupyter-lsp==2.2.5
+jupyter==1.1.1
+jupyter_client==8.6.3
+jupyter_core==5.7.2
+jupyter_server==2.14.2
+jupyter_server_terminals==0.5.3
+jupyterlab==4.2.5
+jupyterlab_pygments==0.3.0
+jupyterlab_server==2.27.3
+jupyterlab_widgets==3.0.13
+kiwisolver==1.4.2
+kiwisolver==1.4.7
+lxml==5.3.1
+matplotlib-inline==0.1.7
+matplotlib==3.7.2
+matplotlib==3.7.5
+mistune==3.0.2
+mkl-fft==1.3.1
+mkl-random==1.2.2
+mkl-service==2.4.0
+more-itertools==10.3.0
+mpmath==1.3.0
+multidict==6.0.2
+munkres==1.1.4
+nbclient==0.10.2
+nbconvert==7.16.4
+nbformat==5.10.4
+nest_asyncio==1.6.0
+networkx==2.2
+networkx==3.1
+ninja==1.11.1.3
+notebook==7.2.2
+notebook_shim==0.2.4
+numpy==1.23.0
+oauthlib==3.2.2
+olefile==0.47
+omegaconf==2.3.0
+opencv-python==4.11.0.86
+overrides==7.7.0
+packaging==24.1
+packaging==24.2
+pandas==1.4.2
+pandocfilters==1.5.0
+parso==0.8.4
+pathtools==0.1.2
+pexpect==4.9.0
+pickleshare==0.7.5
+pip==24.2
+pkgutil_resolve_name==1.3.10
+platformdirs==4.2.2
+platformdirs==4.3.6
+plotly==5.24.1
+portalocker==2.10.1
+prometheus_client==0.21.0
+promise==2.3
+prompt_toolkit==3.0.48
+protobuf==3.20.3
+protobuf==4.25.3
+psutil==5.9.8
+psutil==6.0.0
+ptyprocess==0.7.0
+pure_eval==0.2.3
+pyOpenSSL==24.2.1
+pyasn1==0.6.1
+pyasn1_modules==0.4.1
+pybullet==3.2.0
+pycollada==0.6
+pycparser==2.22
+pygame==2.1.0
+pyglet==2.1.3
+pyparsing==3.0.9
+pyparsing==3.1.4
+pyrender==0.1.45
+python-dateutil==2.9.0
+python-dateutil==2.9.0.post0
+python-json-logger==2.0.7
+pytorch3d==0.7.8
+pytz==2024.2
+pyu2f==0.1.5
+pyzmq==25.1.2
+referencing==0.35.1
+requests-oauthlib==2.0.0
+requests==2.32.3
+rfc3339-validator==0.1.4
+rfc3986-validator==0.1.1
+rl_games==1.6.1
+rpds-py==0.20.0
+rsa==4.9
+sample-factory==2.1.1
+scipy==1.10.1
+sentry-sdk==2.19.2
+sentry-sdk==2.22.0
+setproctitle==1.3.3
+setproctitle==1.3.5
+setuptools==75.1.0
+shortuuid==1.0.13
+signal-slot-mp==1.0.5
+sip==6.5.1
+six==1.16.0
+smmap==5.0.0
+smmap==5.0.2
+sniffio==1.3.1
+soupsieve==2.5
+stack-data==0.6.2
+sympy==1.5.1
+tabulate==0.9.0
+tenacity==9.0.0
+tensorboard==2.13.0
+tensorboardX==2.6.2.2
+tensorboard_data_server==0.7.0
+termcolor==2.4.0
+terminado==0.18.1
+threadpoolctl==3.5.0
+tinycss2==1.4.0
+toml==0.10.2
+tomli==2.0.1
+tomli==2.0.2
+torch==2.2.0
+torchaudio==2.2.0
+torchvision==0.17.0
+tornado==6.4.1
+tqdm==4.67.1
+traitlets==5.14.3
+trimesh==4.6.3
+triton==2.2.0
+typeguard==4.3.0
+types-python-dateutil==2.9.0.20241003
+typing-utils==0.1.0
+typing_extensions==4.12.2
+typing_extensions==4.12.2
+unicodedata2==15.1.0
+urdfpy==0.0.22
+uri-template==1.3.0
+urllib3==2.2.3
+wandb==0.12.21
+wandb==0.16.6
+warp-lang==1.0.0b5
+wcwidth==0.2.13
+webcolors==24.8.0
+webencodings==0.5.1
+websocket-client==1.8.0
+wheel==0.43.0
+wheel==0.44.0
+widgetsnbextension==4.0.13
+yacs==0.1.8
+yarl==1.7.2
+zipp==3.19.2
+zipp==3.21.0
+zstandard==0.23.0
\ No newline at end of file
diff --git a/aerial_gym/rl_training/rl_games/wandb/run-20250226_215009-ret1uwih/files/wandb-metadata.json b/aerial_gym/rl_training/rl_games/wandb/run-20250226_215009-ret1uwih/files/wandb-metadata.json
new file mode 100644
index 0000000..8ef5902
--- /dev/null
+++ b/aerial_gym/rl_training/rl_games/wandb/run-20250226_215009-ret1uwih/files/wandb-metadata.json
@@ -0,0 +1,156 @@
+{
+    "os": "Linux-6.5.0-44-generic-x86_64-with-glibc2.17",
+    "python": "3.8.20",
+    "heartbeatAt": "2025-02-27T02:50:09.806263",
+    "startedAt": "2025-02-27T02:50:09.343729",
+    "docker": null,
+    "cuda": null,
+    "args": [
+        "--file=./ppo_aerial_quad_navigation.yaml",
+        "--num_envs=16",
+        "--play",
+        "--checkpoint=./runs/gen_ppo_26-16-11-42/nn/last_gen_ppo_ep_500_rew__377.14606_.pth",
+        "--track",
+        "wandb-project-name=Trained_RL_Navigation",
+        "wandb-entity=shrutiroy03"
+    ],
+    "state": "running",
+    "program": "runner.py",
+    "codePathLocal": "runner.py",
+    "codePath": "aerial_gym/rl_training/rl_games/runner.py",
+    "git": {
+        "remote": "https://github.com/ntnu-arl/aerial_gym_simulator.git",
+        "commit": "85114e7514ed0f3f8cfecfa23c40dad106c528a1"
+    },
+    "email": null,
+    "root": "/home/shruti/workspaces/aerial_gym_ws/src/aerial_gym_simulator",
+    "host": "saferoboticslab-ASUS-TUF-Gaming-F15-FX507ZM-FX507ZM",
+    "username": "shruti",
+    "executable": "/home/shruti/miniconda3/envs/aerialgym/bin/python3",
+    "cpu_count": 14,
+    "cpu_count_logical": 20,
+    "cpu_freq": {
+        "current": 1285.01205,
+        "min": 400.0,
+        "max": 4180.0
+    },
+    "cpu_freq_per_core": [
+        {
+            "current": 765.121,
+            "min": 400.0,
+            "max": 4600.0
+        },
+        {
+            "current": 400.0,
+            "min": 400.0,
+            "max": 4600.0
+        },
+        {
+            "current": 400.0,
+            "min": 400.0,
+            "max": 4600.0
+        },
+        {
+            "current": 3360.035,
+            "min": 400.0,
+            "max": 4600.0
+        },
+        {
+            "current": 3777.833,
+            "min": 400.0,
+            "max": 4700.0
+        },
+        {
+            "current": 400.0,
+            "min": 400.0,
+            "max": 4700.0
+        },
+        {
+            "current": 4088.265,
+            "min": 400.0,
+            "max": 4700.0
+        },
+        {
+            "current": 400.0,
+            "min": 400.0,
+            "max": 4700.0
+        },
+        {
+            "current": 3388.418,
+            "min": 400.0,
+            "max": 4600.0
+        },
+        {
+            "current": 667.952,
+            "min": 400.0,
+            "max": 4600.0
+        },
+        {
+            "current": 1880.566,
+            "min": 400.0,
+            "max": 4600.0
+        },
+        {
+            "current": 3925.921,
+            "min": 400.0,
+            "max": 4600.0
+        },
+        {
+            "current": 400.0,
+            "min": 400.0,
+            "max": 3500.0
+        },
+        {
+            "current": 3022.855,
+            "min": 400.0,
+            "max": 3500.0
+        },
+        {
+            "current": 2905.305,
+            "min": 400.0,
+            "max": 3500.0
+        },
+        {
+            "current": 400.0,
+            "min": 400.0,
+            "max": 3500.0
+        },
+        {
+            "current": 400.0,
+            "min": 400.0,
+            "max": 3500.0
+        },
+        {
+            "current": 400.0,
+            "min": 400.0,
+            "max": 3500.0
+        },
+        {
+            "current": 400.0,
+            "min": 400.0,
+            "max": 3500.0
+        },
+        {
+            "current": 400.0,
+            "min": 400.0,
+            "max": 3500.0
+        }
+    ],
+    "disk": {
+        "/": {
+            "total": 937.3305015563965,
+            "used": 231.4609260559082
+        }
+    },
+    "gpu": "NVIDIA GeForce RTX 3060 Laptop GPU",
+    "gpu_count": 1,
+    "gpu_devices": [
+        {
+            "name": "NVIDIA GeForce RTX 3060 Laptop GPU",
+            "memory_total": 6442450944
+        }
+    ],
+    "memory": {
+        "total": 15.238014221191406
+    }
+}
diff --git a/aerial_gym/rl_training/rl_games/wandb/run-20250226_215009-ret1uwih/logs/debug-internal.log b/aerial_gym/rl_training/rl_games/wandb/run-20250226_215009-ret1uwih/logs/debug-internal.log
new file mode 100644
index 0000000..9452f6f
--- /dev/null
+++ b/aerial_gym/rl_training/rl_games/wandb/run-20250226_215009-ret1uwih/logs/debug-internal.log
@@ -0,0 +1,65 @@
+2025-02-26 21:50:09,351 INFO    StreamThr :19089 [internal.py:wandb_internal():86] W&B internal server running at pid: 19089, started at: 2025-02-26 21:50:09.350327
+2025-02-26 21:50:09,353 DEBUG   HandlerThread:19089 [handler.py:handle_request():146] handle_request: status
+2025-02-26 21:50:09,356 INFO    WriterThread:19089 [datastore.py:open_for_write():87] open: /home/shruti/workspaces/aerial_gym_ws/src/aerial_gym_simulator/aerial_gym/rl_training/rl_games/wandb/run-20250226_215009-ret1uwih/run-ret1uwih.wandb
+2025-02-26 21:50:09,356 DEBUG   SenderThread:19089 [sender.py:send():379] send: header
+2025-02-26 21:50:09,369 DEBUG   SenderThread:19089 [sender.py:send():379] send: run
+2025-02-26 21:50:09,686 INFO    SenderThread:19089 [dir_watcher.py:__init__():211] watching files in: /home/shruti/workspaces/aerial_gym_ws/src/aerial_gym_simulator/aerial_gym/rl_training/rl_games/wandb/run-20250226_215009-ret1uwih/files
+2025-02-26 21:50:09,686 INFO    SenderThread:19089 [sender.py:_start_run_threads():1124] run started: ret1uwih with start time 1740624609.349949
+2025-02-26 21:50:09,694 DEBUG   HandlerThread:19089 [handler.py:handle_request():146] handle_request: check_version
+2025-02-26 21:50:09,695 DEBUG   SenderThread:19089 [sender.py:send_request():406] send_request: check_version
+2025-02-26 21:50:09,786 DEBUG   HandlerThread:19089 [handler.py:handle_request():146] handle_request: run_start
+2025-02-26 21:50:09,792 DEBUG   HandlerThread:19089 [system_info.py:__init__():26] System info init
+2025-02-26 21:50:09,792 DEBUG   HandlerThread:19089 [system_info.py:__init__():41] System info init done
+2025-02-26 21:50:09,792 INFO    HandlerThread:19089 [system_monitor.py:start():194] Starting system monitor
+2025-02-26 21:50:09,793 INFO    SystemMonitor:19089 [system_monitor.py:_start():158] Starting system asset monitoring threads
+2025-02-26 21:50:09,793 INFO    HandlerThread:19089 [system_monitor.py:probe():214] Collecting system info
+2025-02-26 21:50:09,793 INFO    SystemMonitor:19089 [interfaces.py:start():190] Started cpu monitoring
+2025-02-26 21:50:09,793 INFO    SystemMonitor:19089 [interfaces.py:start():190] Started disk monitoring
+2025-02-26 21:50:09,794 INFO    SystemMonitor:19089 [interfaces.py:start():190] Started gpu monitoring
+2025-02-26 21:50:09,795 INFO    SystemMonitor:19089 [interfaces.py:start():190] Started memory monitoring
+2025-02-26 21:50:09,795 INFO    SystemMonitor:19089 [interfaces.py:start():190] Started network monitoring
+2025-02-26 21:50:09,806 DEBUG   HandlerThread:19089 [system_info.py:probe():150] Probing system
+2025-02-26 21:50:09,811 DEBUG   HandlerThread:19089 [system_info.py:_probe_git():135] Probing git
+2025-02-26 21:50:09,822 DEBUG   HandlerThread:19089 [system_info.py:_probe_git():143] Probing git done
+2025-02-26 21:50:09,822 DEBUG   HandlerThread:19089 [system_info.py:probe():198] Probing system done
+2025-02-26 21:50:09,822 DEBUG   HandlerThread:19089 [system_monitor.py:probe():223] {'os': 'Linux-6.5.0-44-generic-x86_64-with-glibc2.17', 'python': '3.8.20', 'heartbeatAt': '2025-02-27T02:50:09.806263', 'startedAt': '2025-02-27T02:50:09.343729', 'docker': None, 'cuda': None, 'args': ('--file=./ppo_aerial_quad_navigation.yaml', '--num_envs=16', '--play', '--checkpoint=./runs/gen_ppo_26-16-11-42/nn/last_gen_ppo_ep_500_rew__377.14606_.pth', '--track', 'wandb-project-name=Trained_RL_Navigation', 'wandb-entity=shrutiroy03'), 'state': 'running', 'program': 'runner.py', 'codePathLocal': 'runner.py', 'codePath': 'aerial_gym/rl_training/rl_games/runner.py', 'git': {'remote': 'https://github.com/ntnu-arl/aerial_gym_simulator.git', 'commit': '85114e7514ed0f3f8cfecfa23c40dad106c528a1'}, 'email': None, 'root': '/home/shruti/workspaces/aerial_gym_ws/src/aerial_gym_simulator', 'host': 'saferoboticslab-ASUS-TUF-Gaming-F15-FX507ZM-FX507ZM', 'username': 'shruti', 'executable': '/home/shruti/miniconda3/envs/aerialgym/bin/python3', 'cpu_count': 14, 'cpu_count_logical': 20, 'cpu_freq': {'current': 1285.01205, 'min': 400.0, 'max': 4180.0}, 'cpu_freq_per_core': [{'current': 765.121, 'min': 400.0, 'max': 4600.0}, {'current': 400.0, 'min': 400.0, 'max': 4600.0}, {'current': 400.0, 'min': 400.0, 'max': 4600.0}, {'current': 3360.035, 'min': 400.0, 'max': 4600.0}, {'current': 3777.833, 'min': 400.0, 'max': 4700.0}, {'current': 400.0, 'min': 400.0, 'max': 4700.0}, {'current': 4088.265, 'min': 400.0, 'max': 4700.0}, {'current': 400.0, 'min': 400.0, 'max': 4700.0}, {'current': 3388.418, 'min': 400.0, 'max': 4600.0}, {'current': 667.952, 'min': 400.0, 'max': 4600.0}, {'current': 1880.566, 'min': 400.0, 'max': 4600.0}, {'current': 3925.921, 'min': 400.0, 'max': 4600.0}, {'current': 400.0, 'min': 400.0, 'max': 3500.0}, {'current': 3022.855, 'min': 400.0, 'max': 3500.0}, {'current': 2905.305, 'min': 400.0, 'max': 3500.0}, {'current': 400.0, 'min': 400.0, 'max': 3500.0}, {'current': 400.0, 'min': 400.0, 'max': 3500.0}, {'current': 400.0, 'min': 400.0, 'max': 3500.0}, {'current': 400.0, 'min': 400.0, 'max': 3500.0}, {'current': 400.0, 'min': 400.0, 'max': 3500.0}], 'disk': {'/': {'total': 937.3305015563965, 'used': 231.4609260559082}}, 'gpu': 'NVIDIA GeForce RTX 3060 Laptop GPU', 'gpu_count': 1, 'gpu_devices': [{'name': 'NVIDIA GeForce RTX 3060 Laptop GPU', 'memory_total': 6442450944}], 'memory': {'total': 15.238014221191406}}
+2025-02-26 21:50:09,822 INFO    HandlerThread:19089 [system_monitor.py:probe():224] Finished collecting system info
+2025-02-26 21:50:09,822 INFO    HandlerThread:19089 [system_monitor.py:probe():227] Publishing system info
+2025-02-26 21:50:09,822 DEBUG   HandlerThread:19089 [system_info.py:_save_conda():207] Saving list of conda packages installed into the current environment
+2025-02-26 21:50:10,686 INFO    Thread-12 :19089 [dir_watcher.py:_on_file_created():271] file/dir created: /home/shruti/workspaces/aerial_gym_ws/src/aerial_gym_simulator/aerial_gym/rl_training/rl_games/wandb/run-20250226_215009-ret1uwih/files/conda-environment.yaml
+2025-02-26 21:50:11,494 DEBUG   HandlerThread:19089 [system_info.py:_save_conda():222] Saving conda packages done
+2025-02-26 21:50:11,494 DEBUG   HandlerThread:19089 [system_info.py:_save_code():44] Saving code
+2025-02-26 21:50:11,503 DEBUG   HandlerThread:19089 [system_info.py:_save_code():65] Saving code done
+2025-02-26 21:50:11,503 DEBUG   HandlerThread:19089 [system_info.py:_save_patches():82] Saving git patches
+2025-02-26 21:50:11,525 DEBUG   HandlerThread:19089 [system_info.py:_save_patches():124] Saving git patches done
+2025-02-26 21:50:11,525 INFO    HandlerThread:19089 [system_monitor.py:probe():229] Finished publishing system info
+2025-02-26 21:50:11,528 DEBUG   SenderThread:19089 [sender.py:send():379] send: files
+2025-02-26 21:50:11,528 INFO    SenderThread:19089 [sender.py:_save_file():1390] saving file wandb-metadata.json with policy now
+2025-02-26 21:50:11,528 INFO    SenderThread:19089 [sender.py:_save_file():1390] saving file code/aerial_gym/rl_training/rl_games/runner.py with policy now
+2025-02-26 21:50:11,528 INFO    SenderThread:19089 [sender.py:_save_file():1390] saving file diff.patch with policy now
+2025-02-26 21:50:11,605 DEBUG   HandlerThread:19089 [handler.py:handle_request():146] handle_request: python_packages
+2025-02-26 21:50:11,605 DEBUG   HandlerThread:19089 [handler.py:handle_request():146] handle_request: stop_status
+2025-02-26 21:50:11,605 DEBUG   SenderThread:19089 [sender.py:send_request():406] send_request: python_packages
+2025-02-26 21:50:11,606 DEBUG   SenderThread:19089 [sender.py:send_request():406] send_request: stop_status
+2025-02-26 21:50:11,607 DEBUG   HandlerThread:19089 [handler.py:handle_request():146] handle_request: internal_messages
+2025-02-26 21:50:11,685 DEBUG   SenderThread:19089 [sender.py:send():379] send: telemetry
+2025-02-26 21:50:11,686 INFO    Thread-12 :19089 [dir_watcher.py:_on_file_modified():288] file/dir modified: /home/shruti/workspaces/aerial_gym_ws/src/aerial_gym_simulator/aerial_gym/rl_training/rl_games/wandb/run-20250226_215009-ret1uwih/files/conda-environment.yaml
+2025-02-26 21:50:11,687 INFO    Thread-12 :19089 [dir_watcher.py:_on_file_created():271] file/dir created: /home/shruti/workspaces/aerial_gym_ws/src/aerial_gym_simulator/aerial_gym/rl_training/rl_games/wandb/run-20250226_215009-ret1uwih/files/requirements.txt
+2025-02-26 21:50:11,687 INFO    Thread-12 :19089 [dir_watcher.py:_on_file_created():271] file/dir created: /home/shruti/workspaces/aerial_gym_ws/src/aerial_gym_simulator/aerial_gym/rl_training/rl_games/wandb/run-20250226_215009-ret1uwih/files/diff.patch
+2025-02-26 21:50:11,687 INFO    Thread-12 :19089 [dir_watcher.py:_on_file_created():271] file/dir created: /home/shruti/workspaces/aerial_gym_ws/src/aerial_gym_simulator/aerial_gym/rl_training/rl_games/wandb/run-20250226_215009-ret1uwih/files/wandb-metadata.json
+2025-02-26 21:50:11,687 INFO    Thread-12 :19089 [dir_watcher.py:_on_file_created():271] file/dir created: /home/shruti/workspaces/aerial_gym_ws/src/aerial_gym_simulator/aerial_gym/rl_training/rl_games/wandb/run-20250226_215009-ret1uwih/files/output.log
+2025-02-26 21:50:11,687 INFO    Thread-12 :19089 [dir_watcher.py:_on_file_created():271] file/dir created: /home/shruti/workspaces/aerial_gym_ws/src/aerial_gym_simulator/aerial_gym/rl_training/rl_games/wandb/run-20250226_215009-ret1uwih/files/code/aerial_gym/rl_training/rl_games/runner.py
+2025-02-26 21:50:11,687 INFO    Thread-12 :19089 [dir_watcher.py:_on_file_created():271] file/dir created: /home/shruti/workspaces/aerial_gym_ws/src/aerial_gym_simulator/aerial_gym/rl_training/rl_games/wandb/run-20250226_215009-ret1uwih/files/code/aerial_gym/rl_training/rl_games
+2025-02-26 21:50:11,687 INFO    Thread-12 :19089 [dir_watcher.py:_on_file_created():271] file/dir created: /home/shruti/workspaces/aerial_gym_ws/src/aerial_gym_simulator/aerial_gym/rl_training/rl_games/wandb/run-20250226_215009-ret1uwih/files/code
+2025-02-26 21:50:11,687 INFO    Thread-12 :19089 [dir_watcher.py:_on_file_created():271] file/dir created: /home/shruti/workspaces/aerial_gym_ws/src/aerial_gym_simulator/aerial_gym/rl_training/rl_games/wandb/run-20250226_215009-ret1uwih/files/code/aerial_gym
+2025-02-26 21:50:11,687 INFO    Thread-12 :19089 [dir_watcher.py:_on_file_created():271] file/dir created: /home/shruti/workspaces/aerial_gym_ws/src/aerial_gym_simulator/aerial_gym/rl_training/rl_games/wandb/run-20250226_215009-ret1uwih/files/code/aerial_gym/rl_training
+2025-02-26 21:50:11,770 INFO    wandb-upload_0:19089 [upload_job.py:push():131] Uploaded file /tmp/tmpgk0vf5onwandb/u921awc1-wandb-metadata.json
+2025-02-26 21:50:11,796 INFO    wandb-upload_2:19089 [upload_job.py:push():131] Uploaded file /tmp/tmpgk0vf5onwandb/ne34ehuw-diff.patch
+2025-02-26 21:50:11,814 INFO    wandb-upload_1:19089 [upload_job.py:push():131] Uploaded file /tmp/tmpgk0vf5onwandb/akr6qn12-code/aerial_gym/rl_training/rl_games/runner.py
+2025-02-26 21:50:13,705 INFO    Thread-12 :19089 [dir_watcher.py:_on_file_modified():288] file/dir modified: /home/shruti/workspaces/aerial_gym_ws/src/aerial_gym_simulator/aerial_gym/rl_training/rl_games/wandb/run-20250226_215009-ret1uwih/files/output.log
+2025-02-26 21:50:13,796 INFO    cpu       :19089 [interfaces.py:monitor():140] Process cpu has exited.
+2025-02-26 21:50:13,797 DEBUG   SystemMonitor:19089 [system_monitor.py:_start():172] Starting system metrics aggregation loop
+2025-02-26 21:50:13,797 DEBUG   SystemMonitor:19089 [system_monitor.py:_start():179] Finished system metrics aggregation loop
+2025-02-26 21:50:13,797 DEBUG   SystemMonitor:19089 [system_monitor.py:_start():183] Publishing last batch of metrics
+2025-02-26 21:50:13,800 DEBUG   SenderThread:19089 [sender.py:send():379] send: stats
+2025-02-26 21:50:14,789 INFO    MainThread:19089 [internal.py:handle_exit():76] Internal process exited
diff --git a/aerial_gym/rl_training/rl_games/wandb/run-20250226_215009-ret1uwih/logs/debug.log b/aerial_gym/rl_training/rl_games/wandb/run-20250226_215009-ret1uwih/logs/debug.log
new file mode 100644
index 0000000..809590d
--- /dev/null
+++ b/aerial_gym/rl_training/rl_games/wandb/run-20250226_215009-ret1uwih/logs/debug.log
@@ -0,0 +1,28 @@
+2025-02-26 21:50:09,345 INFO    MainThread:19028 [wandb_setup.py:_flush():76] Current SDK version is 0.16.6
+2025-02-26 21:50:09,345 INFO    MainThread:19028 [wandb_setup.py:_flush():76] Configure stats pid to 19028
+2025-02-26 21:50:09,346 INFO    MainThread:19028 [wandb_setup.py:_flush():76] Loading settings from /home/shruti/.config/wandb/settings
+2025-02-26 21:50:09,346 INFO    MainThread:19028 [wandb_setup.py:_flush():76] Loading settings from /home/shruti/workspaces/aerial_gym_ws/src/aerial_gym_simulator/aerial_gym/rl_training/rl_games/wandb/settings
+2025-02-26 21:50:09,346 INFO    MainThread:19028 [wandb_setup.py:_flush():76] Loading settings from environment variables: {}
+2025-02-26 21:50:09,346 INFO    MainThread:19028 [wandb_setup.py:_flush():76] Applying setup settings: {'_disable_service': False}
+2025-02-26 21:50:09,346 INFO    MainThread:19028 [wandb_setup.py:_flush():76] Inferring run settings from compute environment: {'program_relpath': 'aerial_gym/rl_training/rl_games/runner.py', 'program_abspath': '/home/shruti/workspaces/aerial_gym_ws/src/aerial_gym_simulator/aerial_gym/rl_training/rl_games/runner.py', 'program': 'runner.py'}
+2025-02-26 21:50:09,346 INFO    MainThread:19028 [wandb_setup.py:_flush():76] Applying login settings: {}
+2025-02-26 21:50:09,346 INFO    MainThread:19028 [wandb_init.py:_log_setup():521] Logging user logs to /home/shruti/workspaces/aerial_gym_ws/src/aerial_gym_simulator/aerial_gym/rl_training/rl_games/wandb/run-20250226_215009-ret1uwih/logs/debug.log
+2025-02-26 21:50:09,346 INFO    MainThread:19028 [wandb_init.py:_log_setup():522] Logging internal logs to /home/shruti/workspaces/aerial_gym_ws/src/aerial_gym_simulator/aerial_gym/rl_training/rl_games/wandb/run-20250226_215009-ret1uwih/logs/debug-internal.log
+2025-02-26 21:50:09,346 INFO    MainThread:19028 [wandb_init.py:init():561] calling init triggers
+2025-02-26 21:50:09,346 INFO    MainThread:19028 [wandb_init.py:init():568] wandb.init called with sweep_config: {}
+config: {'params': {'seed': 10, 'algo': {'name': 'a2c_continuous'}, 'model': {'name': 'continuous_a2c_logstd'}, 'load_checkpoint': False, 'network': {'name': 'actor_critic', 'separate': False, 'space': {'continuous': {'mu_activation': 'None', 'sigma_activation': 'None', 'mu_init': {'name': 'default'}, 'sigma_init': {'name': 'const_initializer', 'val': 0}, 'fixed_sigma': True}}, 'mlp': {'units': [256, 128, 64], 'd2rl': False, 'activation': 'elu', 'initializer': {'name': 'default', 'scale': 2}}}, 'config': {'env_name': 'navigation_task', 'env_config': {'num_envs': 16, 'headless': False, 'use_warp': True}, 'name': 'gen_ppo', 'reward_shaper': {'scale_value': 0.1}, 'normalize_advantage': True, 'gamma': 0.98, 'tau': 0.95, 'ppo': True, 'learning_rate': '1e-4', 'lr_schedule': 'adaptive', 'kl_threshold': 0.016, 'save_best_after': 10, 'score_to_win': 100000, 'grad_norm': 1.0, 'entropy_coef': 0, 'truncate_grads': True, 'e_clip': 0.2, 'clip_value': False, 'num_actors': 16, 'horizon_length': 32, 'minibatch_size': 2048, 'mini_epochs': 4, 'critic_coef': 2, 'normalize_input': True, 'bounds_loss_coef': 0.0001, 'max_epochs': 500, 'normalize_value': True, 'use_diagnostics': True, 'value_bootstrap': True, 'use_smooth_clamp': False, 'player': {'use_vecenv': True}}}}
+2025-02-26 21:50:09,346 INFO    MainThread:19028 [wandb_init.py:init():611] starting backend
+2025-02-26 21:50:09,346 INFO    MainThread:19028 [wandb_init.py:init():615] setting up manager
+2025-02-26 21:50:09,348 INFO    MainThread:19028 [backend.py:_multiprocessing_setup():105] multiprocessing start_methods=fork,spawn,forkserver, using: spawn
+2025-02-26 21:50:09,349 INFO    MainThread:19028 [wandb_init.py:init():623] backend started and connected
+2025-02-26 21:50:09,353 INFO    MainThread:19028 [wandb_init.py:init():715] updated telemetry
+2025-02-26 21:50:09,367 INFO    MainThread:19028 [wandb_init.py:init():748] communicating run to backend with 90.0 second timeout
+2025-02-26 21:50:09,694 INFO    MainThread:19028 [wandb_run.py:_on_init():2357] communicating current version
+2025-02-26 21:50:09,783 INFO    MainThread:19028 [wandb_run.py:_on_init():2366] got version response upgrade_message: "wandb version 0.19.7 is available!  To upgrade, please run:\n $ pip install wandb --upgrade"
+
+2025-02-26 21:50:09,783 INFO    MainThread:19028 [wandb_init.py:init():799] starting run threads in backend
+2025-02-26 21:50:11,605 INFO    MainThread:19028 [wandb_run.py:_console_start():2335] atexit reg
+2025-02-26 21:50:11,606 INFO    MainThread:19028 [wandb_run.py:_redirect():2190] redirect: wrap_raw
+2025-02-26 21:50:11,606 INFO    MainThread:19028 [wandb_run.py:_redirect():2255] Wrapping output streams.
+2025-02-26 21:50:11,606 INFO    MainThread:19028 [wandb_run.py:_redirect():2280] Redirects installed.
+2025-02-26 21:50:11,606 INFO    MainThread:19028 [wandb_init.py:init():842] run started, returning control to user process
diff --git a/aerial_gym/rl_training/rl_games/wandb/run-20250226_215009-ret1uwih/run-ret1uwih.wandb b/aerial_gym/rl_training/rl_games/wandb/run-20250226_215009-ret1uwih/run-ret1uwih.wandb
new file mode 100644
index 0000000..7c0edf2
Binary files /dev/null and b/aerial_gym/rl_training/rl_games/wandb/run-20250226_215009-ret1uwih/run-ret1uwih.wandb differ
diff --git a/aerial_gym/rl_training/rl_games/wandb/run-20250226_215103-yh9jzmtn/files/code/aerial_gym/rl_training/rl_games/runner.py b/aerial_gym/rl_training/rl_games/wandb/run-20250226_215103-yh9jzmtn/files/code/aerial_gym/rl_training/rl_games/runner.py
new file mode 100644
index 0000000..bd45a3c
--- /dev/null
+++ b/aerial_gym/rl_training/rl_games/wandb/run-20250226_215103-yh9jzmtn/files/code/aerial_gym/rl_training/rl_games/runner.py
@@ -0,0 +1,331 @@
+import numpy as np
+import os
+import yaml
+
+
+import isaacgym
+
+
+from aerial_gym.registry.task_registry import task_registry
+from aerial_gym.utils.helpers import parse_arguments
+
+import gym
+from gym import spaces
+from argparse import Namespace
+
+from rl_games.common import env_configurations, vecenv
+
+import torch
+import distutils
+
+os.environ["XLA_PYTHON_CLIENT_PREALLOCATE"] = "false"
+# import warnings
+# warnings.filterwarnings("error")
+
+
+class ExtractObsWrapper(gym.Wrapper):
+    def __init__(self, env):
+        super().__init__(env)
+
+    def reset(self, **kwargs):
+        observations, *_ = super().reset(**kwargs)
+        return observations["observations"]
+
+    def step(self, action):
+        observations, rewards, terminated, truncated, infos = super().step(action)
+
+        dones = torch.where(
+            terminated | truncated,
+            torch.ones_like(terminated),
+            torch.zeros_like(terminated),
+        )
+
+        return (
+            observations["observations"],
+            rewards,
+            dones,
+            infos,
+        )
+
+
+class AERIALRLGPUEnv(vecenv.IVecEnv):
+    def __init__(self, config_name, num_actors, **kwargs):
+        self.env = env_configurations.configurations[config_name]["env_creator"](**kwargs)
+        self.env = ExtractObsWrapper(self.env)
+
+    def step(self, actions):
+        return self.env.step(actions)
+
+    def reset(self):
+        return self.env.reset()
+
+    def reset_done(self):
+        return self.env.reset_done()
+
+    def get_number_of_agents(self):
+        return self.env.get_number_of_agents()
+
+    def get_env_info(self):
+        info = {}
+        info["action_space"] = spaces.Box(
+            -np.ones(self.env.task_config.action_space_dim),
+            np.ones(self.env.task_config.action_space_dim),
+        )
+        info["observation_space"] = spaces.Box(
+            np.ones(self.env.task_config.observation_space_dim) * -np.Inf,
+            np.ones(self.env.task_config.observation_space_dim) * np.Inf,
+        )
+        print(info["action_space"], info["observation_space"])
+        return info
+
+
+env_configurations.register(
+    "position_setpoint_task",
+    {
+        "env_creator": lambda **kwargs: task_registry.make_task("position_setpoint_task", **kwargs),
+        "vecenv_type": "AERIAL-RLGPU",
+    },
+)
+
+env_configurations.register(
+    "position_setpoint_task_sim2real",
+    {
+        "env_creator": lambda **kwargs: task_registry.make_task(
+            "position_setpoint_task_sim2real", **kwargs
+        ),
+        "vecenv_type": "AERIAL-RLGPU",
+    },
+)
+
+env_configurations.register(
+    "position_setpoint_task_acceleration_sim2real",
+    {
+        "env_creator": lambda **kwargs: task_registry.make_task(
+            "position_setpoint_task_acceleration_sim2real", **kwargs
+        ),
+        "vecenv_type": "AERIAL-RLGPU",
+    },
+)
+
+env_configurations.register(
+    "navigation_task",
+    {
+        "env_creator": lambda **kwargs: task_registry.make_task("navigation_task", **kwargs),
+        "vecenv_type": "AERIAL-RLGPU",
+    },
+)
+
+env_configurations.register(
+    "position_setpoint_task_reconfigurable",
+    {
+        "env_creator": lambda **kwargs: task_registry.make_task(
+            "position_setpoint_task_reconfigurable", **kwargs
+        ),
+        "vecenv_type": "AERIAL-RLGPU",
+    },
+)
+
+env_configurations.register(
+    "position_setpoint_task_morphy",
+    {
+        "env_creator": lambda **kwargs: task_registry.make_task(
+            "position_setpoint_task_morphy", **kwargs
+        ),
+        "vecenv_type": "AERIAL-RLGPU",
+    },
+)
+
+env_configurations.register(
+    "position_setpoint_task_sim2real_end_to_end",
+    {
+        "env_creator": lambda **kwargs: task_registry.make_task(
+            "position_setpoint_task_sim2real_end_to_end", **kwargs
+        ),
+        "vecenv_type": "AERIAL-RLGPU",
+    },
+)
+
+vecenv.register(
+    "AERIAL-RLGPU",
+    lambda config_name, num_actors, **kwargs: AERIALRLGPUEnv(config_name, num_actors, **kwargs),
+)
+
+
+def get_args():
+    from isaacgym import gymutil
+
+    custom_parameters = [
+        {
+            "name": "--seed",
+            "type": int,
+            "default": 0,
+            "required": False,
+            "help": "Random seed, if larger than 0 will overwrite the value in yaml config.",
+        },
+        {
+            "name": "--tf",
+            "required": False,
+            "help": "run tensorflow runner",
+            "action": "store_true",
+        },
+        {
+            "name": "--train",
+            "required": False,
+            "help": "train network",
+            "action": "store_true",
+        },
+        {
+            "name": "--play",
+            "required": False,
+            "help": "play(test) network",
+            "action": "store_true",
+        },
+        {
+            "name": "--checkpoint",
+            "type": str,
+            "required": False,
+            "help": "path to checkpoint",
+        },
+        {
+            "name": "--file",
+            "type": str,
+            "default": "ppo_aerial_quad.yaml",
+            "required": False,
+            "help": "path to config",
+        },
+        {
+            "name": "--num_envs",
+            "type": int,
+            "default": "1024",
+            "help": "Number of environments to create. Overrides config file if provided.",
+        },
+        {
+            "name": "--sigma",
+            "type": float,
+            "required": False,
+            "help": "sets new sigma value in case if 'fixed_sigma: True' in yaml config",
+        },
+        {
+            "name": "--track",
+            "action": "store_true",
+            "help": "if toggled, this experiment will be tracked with Weights and Biases",
+        },
+        {
+            "name": "--wandb-project-name",
+            "type": str,
+            "default": "rl_games",
+            "help": "the wandb's project name",
+        },
+        {
+            "name": "--wandb-entity",
+            "type": str,
+            "default": None,
+            "help": "the entity (team) of wandb's project",
+        },
+        {
+            "name": "--task",
+            "type": str,
+            "default": "navigation_task",
+            "help": "Override task from config file if provided.",
+        },
+        {
+            "name": "--experiment_name",
+            "type": str,
+            "help": "Name of the experiment to run or load. Overrides config file if provided.",
+        },
+        {
+            "name": "--headless",
+            "type": lambda x: bool(distutils.util.strtobool(x)),
+            "default": "False",
+            "help": "Force display off at all times",
+        },
+        {
+            "name": "--horovod",
+            "action": "store_true",
+            "default": False,
+            "help": "Use horovod for multi-gpu training",
+        },
+        {
+            "name": "--rl_device",
+            "type": str,
+            "default": "cuda:0",
+            "help": "Device used by the RL algorithm, (cpu, gpu, cuda:0, cuda:1 etc..)",
+        },
+        {
+            "name": "--use_warp",
+            "type": lambda x: bool(distutils.util.strtobool(x)),
+            "default": "True",
+            "help": "Choose whether to use warp or Isaac Gym rendering pipeline.",
+        },
+    ]
+
+    # parse arguments
+    args = parse_arguments(description="RL Policy", custom_parameters=custom_parameters)
+
+    # name allignment
+    args.sim_device_id = args.compute_device_id
+    args.sim_device = args.sim_device_type
+    if args.sim_device == "cuda":
+        args.sim_device += f":{args.sim_device_id}"
+    return args
+
+
+def update_config(config, args):
+
+    if args["task"] is not None:
+        config["params"]["config"]["env_name"] = args["task"]
+    if args["experiment_name"] is not None:
+        config["params"]["config"]["name"] = args["experiment_name"]
+    config["params"]["config"]["env_config"]["headless"] = args["headless"]
+    config["params"]["config"]["env_config"]["num_envs"] = args["num_envs"]
+    config["params"]["config"]["env_config"]["use_warp"] = args["use_warp"]
+    if args["num_envs"] > 0:
+        config["params"]["config"]["num_actors"] = args["num_envs"]
+        # config['params']['config']['num_envs'] = args['num_envs']
+        config["params"]["config"]["env_config"]["num_envs"] = args["num_envs"]
+    if args["seed"] > 0:
+        config["params"]["seed"] = args["seed"]
+        config["params"]["config"]["env_config"]["seed"] = args["seed"]
+
+    config["params"]["config"]["player"] = {"use_vecenv": True}
+    return config
+
+
+if __name__ == "__main__":
+    os.makedirs("nn", exist_ok=True)
+    os.makedirs("runs", exist_ok=True)
+
+    args = vars(get_args())
+
+    config_name = args["file"]
+
+    print("Loading config: ", config_name)
+    with open(config_name, "r") as stream:
+        config = yaml.safe_load(stream)
+
+        config = update_config(config, args)
+
+        from rl_games.torch_runner import Runner
+
+        runner = Runner()
+        try:
+            runner.load(config)
+        except yaml.YAMLError as exc:
+            print(exc)
+
+    rank = int(os.getenv("LOCAL_RANK", "0"))
+    if args["track"] and rank == 0:
+        import wandb
+
+        wandb.init(
+            project=args["wandb_project_name"],
+            entity=args["wandb_entity"],
+            sync_tensorboard=True,
+            config=config,
+            monitor_gym=True,
+            save_code=True,
+        )
+    runner.run(args)
+
+    if args["track"] and rank == 0:
+        wandb.finish()
diff --git a/aerial_gym/rl_training/rl_games/wandb/run-20250226_215103-yh9jzmtn/files/conda-environment.yaml b/aerial_gym/rl_training/rl_games/wandb/run-20250226_215103-yh9jzmtn/files/conda-environment.yaml
new file mode 100644
index 0000000..b5e6902
--- /dev/null
+++ b/aerial_gym/rl_training/rl_games/wandb/run-20250226_215103-yh9jzmtn/files/conda-environment.yaml
@@ -0,0 +1,409 @@
+name: aerialgym
+channels:
+  - pytorch3d
+  - iopath
+  - fvcore
+  - pytorch
+  - nvidia
+  - nvidia/label/cuda-11.8.0
+  - conda-forge
+  - defaults
+  - https://repo.anaconda.com/pkgs/main
+  - https://repo.anaconda.com/pkgs/r
+dependencies:
+  - _libgcc_mutex=0.1=main
+  - _openmp_mutex=5.1=1_gnu
+  - absl-py=2.1.0=pyhd8ed1ab_0
+  - aiohttp=3.7.4.post0=py38h497a2fe_1
+  - antlr-python-runtime=4.9.3=pyhd8ed1ab_1
+  - anyio=4.5.0=pyhd8ed1ab_0
+  - appdirs=1.4.4=pyh9f0ad1d_0
+  - argon2-cffi=23.1.0=pyhd8ed1ab_0
+  - argon2-cffi-bindings=21.2.0=py38h01eb140_4
+  - arrow=1.3.0=pyhd8ed1ab_0
+  - asttokens=3.0.0=pyhd8ed1ab_0
+  - async-lru=2.0.4=pyhd8ed1ab_0
+  - async-timeout=3.0.1=py_1000
+  - attrs=24.2.0=pyh71513ae_0
+  - babel=2.16.0=pyhd8ed1ab_0
+  - backcall=0.2.0=pyh9f0ad1d_0
+  - beautifulsoup4=4.12.3=pyha770c72_0
+  - blas=1.0=mkl
+  - bleach=6.1.0=pyhd8ed1ab_0
+  - blinker=1.8.2=pyhd8ed1ab_0
+  - brotli=1.1.0=hb9d3cd8_2
+  - brotli-bin=1.1.0=hb9d3cd8_2
+  - brotli-python=1.0.9=py38hfa26641_7
+  - bullet-cpp=3.21=h43a58ef_1
+  - bzip2=1.0.8=h5eee18b_6
+  - c-ares=1.19.1=h5eee18b_0
+  - ca-certificates=2025.2.25=h06a4308_0
+  - cached-property=1.5.2=hd8ed1ab_1
+  - cached_property=1.5.2=pyha770c72_1
+  - cachetools=5.5.0=pyhd8ed1ab_0
+  - certifi=2024.8.30=pyhd8ed1ab_0
+  - cffi=1.15.0=py38h3931269_0
+  - chardet=4.0.0=py38h578d9bd_3
+  - charset-normalizer=3.4.0=pyhd8ed1ab_0
+  - click=8.1.7=unix_pyh707e725_0
+  - colorama=0.4.6=pyhd8ed1ab_0
+  - comm=0.2.2=pyhd8ed1ab_0
+  - cryptography=43.0.0=py38hdda0065_0
+  - cuda=11.8.0=0
+  - cuda-cccl=11.8.89=0
+  - cuda-command-line-tools=11.8.0=0
+  - cuda-compiler=11.8.0=0
+  - cuda-cudart=11.8.89=0
+  - cuda-cudart-dev=11.8.89=0
+  - cuda-cuobjdump=11.8.86=0
+  - cuda-cupti=11.8.87=0
+  - cuda-cuxxfilt=11.8.86=0
+  - cuda-demo-suite=11.8.86=0
+  - cuda-documentation=11.8.86=0
+  - cuda-driver-dev=11.8.89=0
+  - cuda-gdb=11.8.86=0
+  - cuda-libraries=11.8.0=0
+  - cuda-libraries-dev=11.8.0=0
+  - cuda-memcheck=11.8.86=0
+  - cuda-nsight=11.8.86=0
+  - cuda-nsight-compute=11.8.0=0
+  - cuda-nvcc=11.8.89=0
+  - cuda-nvdisasm=11.8.86=0
+  - cuda-nvml-dev=11.8.86=0
+  - cuda-nvprof=11.8.87=0
+  - cuda-nvprune=11.8.86=0
+  - cuda-nvrtc=11.8.89=0
+  - cuda-nvrtc-dev=11.8.89=0
+  - cuda-nvtx=11.8.86=0
+  - cuda-nvvp=11.8.87=0
+  - cuda-opencl=12.4.127=0
+  - cuda-profiler-api=11.8.86=0
+  - cuda-runtime=11.8.0=0
+  - cuda-sanitizer-api=11.8.86=0
+  - cuda-toolkit=11.8.0=0
+  - cuda-tools=11.8.0=0
+  - cuda-visual-tools=11.8.0=0
+  - cycler=0.12.1=pyhd8ed1ab_0
+  - dbus=1.13.18=hb2f20db_0
+  - debugpy=1.6.7=py38h6a678d5_0
+  - defusedxml=0.7.1=pyhd8ed1ab_0
+  - dill=0.3.9=pyhd8ed1ab_0
+  - docker-pycreds=0.4.0=py_0
+  - entrypoints=0.4=pyhd8ed1ab_0
+  - exceptiongroup=1.2.2=pyhd8ed1ab_0
+  - executing=2.1.0=pyhd8ed1ab_0
+  - expat=2.6.4=h5888daf_0
+  - fastcache=1.1.0=py38h7b6447c_0
+  - ffmpeg=4.3=hf484d3e_0
+  - filelock=3.13.1=py38h06a4308_0
+  - fontconfig=2.14.0=h8e229c2_0
+  - fqdn=1.5.1=pyhd8ed1ab_0
+  - freetype=2.10.4=h0708190_1
+  - fvcore=0.1.5.post20210915=py38
+  - gds-tools=1.4.0.31=0
+  - geos=3.10.2=h9c3ff4c_0
+  - giflib=5.2.2=h5eee18b_0
+  - glib=2.78.4=h6a678d5_0
+  - glib-tools=2.78.4=h6a678d5_0
+  - gmp=6.3.0=h6a678d5_0
+  - gmpy2=2.1.2=py38heeb90bb_0
+  - gnutls=3.6.15=he1e5248_0
+  - google-auth=2.35.0=pyhff2d567_0
+  - google-auth-oauthlib=1.0.0=pyhd8ed1ab_1
+  - grpcio=1.62.2=py38h6a678d5_0
+  - gst-plugins-base=1.14.1=h6a678d5_1
+  - gstreamer=1.14.1=h5eee18b_1
+  - gym-notices=0.0.8=pyhd8ed1ab_0
+  - h11=0.14.0=pyhd8ed1ab_0
+  - h2=4.1.0=pyhd8ed1ab_0
+  - hpack=4.0.0=pyh9f0ad1d_0
+  - httpcore=1.0.7=pyh29332c3_1
+  - httpx=0.27.2=pyhd8ed1ab_0
+  - hyperframe=6.0.1=pyhd8ed1ab_0
+  - icu=58.2=hf484d3e_1000
+  - idna=3.10=pyhd8ed1ab_0
+  - importlib-metadata=8.5.0=pyha770c72_0
+  - importlib_metadata=8.5.0=hd8ed1ab_1
+  - importlib_resources=6.4.5=pyhd8ed1ab_0
+  - intel-openmp=2021.4.0=h06a4308_3561
+  - iopath=0.1.9=py38
+  - ipykernel=6.29.5=pyh3099207_0
+  - ipython=8.12.2=pyh41d4057_0
+  - ipywidgets=8.1.5=pyhd8ed1ab_0
+  - isoduration=20.11.0=pyhd8ed1ab_0
+  - jbig=2.1=h7f98852_2003
+  - jedi=0.19.1=pyhd8ed1ab_0
+  - jinja2=3.1.4=pyhd8ed1ab_0
+  - jpeg=9e=h166bdaf_1
+  - json5=0.9.25=pyhd8ed1ab_0
+  - jsonpointer=3.0.0=py38h578d9bd_0
+  - jsonschema=4.23.0=pyhd8ed1ab_0
+  - jsonschema-specifications=2024.10.1=pyhd8ed1ab_0
+  - jsonschema-with-format-nongpl=4.23.0=hd8ed1ab_1
+  - jupyter=1.1.1=pyhd8ed1ab_0
+  - jupyter-lsp=2.2.5=pyhd8ed1ab_0
+  - jupyter_client=8.6.3=pyhd8ed1ab_0
+  - jupyter_console=6.6.3=pyhd8ed1ab_0
+  - jupyter_core=5.7.2=pyh31011fe_1
+  - jupyter_events=0.10.0=pyhd8ed1ab_0
+  - jupyter_server=2.14.2=pyhd8ed1ab_0
+  - jupyter_server_terminals=0.5.3=pyhd8ed1ab_0
+  - jupyterlab=4.2.5=pyhd8ed1ab_0
+  - jupyterlab_pygments=0.3.0=pyhd8ed1ab_1
+  - jupyterlab_server=2.27.3=pyhd8ed1ab_0
+  - jupyterlab_widgets=3.0.13=pyhd8ed1ab_0
+  - krb5=1.20.1=h143b758_1
+  - lame=3.100=h7b6447c_0
+  - lcms2=2.12=hddcbb42_0
+  - ld_impl_linux-64=2.40=h12ee557_0
+  - lerc=2.2.1=h9c3ff4c_0
+  - libabseil=20240116.2=cxx17_h6a678d5_0
+  - libblas=3.9.0=12_linux64_mkl
+  - libbrotlicommon=1.1.0=hb9d3cd8_2
+  - libbrotlidec=1.1.0=hb9d3cd8_2
+  - libbrotlienc=1.1.0=hb9d3cd8_2
+  - libcblas=3.9.0=12_linux64_mkl
+  - libclang=10.0.1=default_hde54327_1
+  - libcublas=11.11.3.6=0
+  - libcublas-dev=11.11.3.6=0
+  - libcufft=10.9.0.58=0
+  - libcufft-dev=10.9.0.58=0
+  - libcufile=1.9.1.3=0
+  - libcufile-dev=1.4.0.31=0
+  - libcurand=10.3.5.147=0
+  - libcurand-dev=10.3.0.86=0
+  - libcusolver=11.4.1.48=0
+  - libcusolver-dev=11.4.1.48=0
+  - libcusparse=11.7.5.86=0
+  - libcusparse-dev=11.7.5.86=0
+  - libdeflate=1.7=h7f98852_5
+  - libedit=3.1.20230828=h5eee18b_0
+  - libevent=2.1.12=hf998b51_1
+  - libexpat=2.6.4=h5888daf_0
+  - libffi=3.4.4=h6a678d5_1
+  - libgcc=14.2.0=h767d61c_2
+  - libgcc-ng=14.2.0=h69a702a_2
+  - libgfortran-ng=13.2.0=h69a702a_0
+  - libgfortran5=13.2.0=ha4646dd_0
+  - libglib=2.78.4=hdc74915_0
+  - libgomp=14.2.0=h767d61c_2
+  - libgrpc=1.62.2=h2d74bed_0
+  - libiconv=1.16=h5eee18b_3
+  - libidn2=2.3.4=h5eee18b_0
+  - libjpeg-turbo=2.0.0=h9bf148f_0
+  - liblapack=3.9.0=12_linux64_mkl
+  - libllvm10=10.0.1=he513fc3_3
+  - libnpp=11.8.0.86=0
+  - libnpp-dev=11.8.0.86=0
+  - libnvfatbin=12.4.127=0
+  - libnvjitlink=12.4.127=0
+  - libnvjpeg=11.9.0.86=0
+  - libnvjpeg-dev=11.9.0.86=0
+  - libopenblas=0.3.21=h043d6bf_0
+  - libpng=1.6.37=h21135ba_2
+  - libpq=12.20=hdbd6064_0
+  - libprotobuf=4.25.3=he621ea3_0
+  - libsodium=1.0.18=h36c2ea0_1
+  - libstdcxx=14.2.0=h8f9b012_2
+  - libstdcxx-ng=11.2.0=h1234567_1
+  - libtasn1=4.19.0=h5eee18b_0
+  - libtiff=4.3.0=hf544144_1
+  - libunistring=0.9.10=h27cfd23_0
+  - libuuid=2.38.1=h0b41bf4_0
+  - libwebp=1.2.2=h55f646e_0
+  - libwebp-base=1.2.2=h7f98852_1
+  - libxcb=1.17.0=h8a09558_0
+  - libxkbcommon=1.0.3=he3ba5ed_0
+  - libxml2=2.9.14=h74e7548_0
+  - llvm-openmp=14.0.6=h9e868ea_0
+  - lz4-c=1.9.4=h6a678d5_1
+  - markdown=3.6=pyhd8ed1ab_0
+  - markupsafe=2.1.1=py38h0a891b7_1
+  - matplotlib-base=3.7.2=py38h1128e8f_0
+  - matplotlib-inline=0.1.7=pyhd8ed1ab_0
+  - metis=5.1.0=hd0bcaf9_1007
+  - mistune=3.0.2=pyhd8ed1ab_0
+  - mkl=2021.4.0=h06a4308_640
+  - mkl-service=2.4.0=py38h7f8727e_0
+  - mkl_fft=1.3.1=py38hd3c417c_0
+  - mkl_random=1.2.2=py38h51133e4_0
+  - mpc=1.3.1=h5eee18b_0
+  - mpfr=4.2.1=h90cbb55_3
+  - mpmath=1.3.0=py38h06a4308_0
+  - multidict=6.0.2=py38h0a891b7_1
+  - munkres=1.1.4=pyh9f0ad1d_0
+  - nbclient=0.10.2=pyhd8ed1ab_0
+  - nbconvert-core=7.16.4=pyhff2d567_2
+  - nbformat=5.10.4=pyhd8ed1ab_0
+  - ncurses=6.4=h6a678d5_0
+  - nest-asyncio=1.6.0=pyhd8ed1ab_0
+  - nettle=3.7.3=hbbd107a_1
+  - ninja-base=1.12.1=hdb19cb5_0
+  - notebook=7.2.2=pyhd8ed1ab_0
+  - notebook-shim=0.2.4=pyhd8ed1ab_0
+  - nsight-compute=2022.3.0.22=0
+  - nspr=4.36=h5888daf_0
+  - nss=3.89.1=h6a678d5_0
+  - oauthlib=3.2.2=pyhd8ed1ab_0
+  - olefile=0.47=pyhd8ed1ab_0
+  - omegaconf=2.3.0=pyhd8ed1ab_0
+  - openh264=2.1.1=h4ff587b_0
+  - openjpeg=2.4.0=hb52868f_1
+  - openssl=3.4.1=h7b32b05_0
+  - overrides=7.7.0=pyhd8ed1ab_0
+  - packaging=24.2=pyhd8ed1ab_2
+  - pandas=1.4.2=py38h47df419_1
+  - pandocfilters=1.5.0=pyhd8ed1ab_0
+  - parso=0.8.4=pyhd8ed1ab_0
+  - pcre2=10.42=hebb0a14_1
+  - pexpect=4.9.0=pyhd8ed1ab_0
+  - pickleshare=0.7.5=py_1003
+  - pillow=9.4.0=py38h6a678d5_0
+  - pip=24.2=py38h06a4308_0
+  - pkgutil-resolve-name=1.3.10=pyhd8ed1ab_1
+  - platformdirs=4.3.6=pyhd8ed1ab_0
+  - plotly=5.24.1=pyhd8ed1ab_0
+  - portalocker=2.10.1=py38h578d9bd_0
+  - prometheus_client=0.21.0=pyhd8ed1ab_0
+  - prompt-toolkit=3.0.48=pyha770c72_0
+  - prompt_toolkit=3.0.48=hd8ed1ab_1
+  - pthread-stubs=0.4=hb9d3cd8_1002
+  - ptyprocess=0.7.0=pyhd3deb0d_0
+  - pure_eval=0.2.3=pyhd8ed1ab_0
+  - pyasn1=0.6.1=pyhd8ed1ab_1
+  - pyasn1-modules=0.4.1=pyhd8ed1ab_0
+  - pybullet=3.21=py38h43a58ef_1
+  - pycparser=2.22=pyhd8ed1ab_0
+  - pygments=2.18.0=pyhd8ed1ab_0
+  - pyjwt=2.9.0=pyhd8ed1ab_1
+  - pyopenssl=24.2.1=pyhd8ed1ab_2
+  - pyqt=5.15.4=py38hfa26641_0
+  - pyqt5-sip=12.9.0=py38hfa26641_0
+  - pysocks=1.7.1=pyha2e5f31_6
+  - python=3.8.20=he870216_0
+  - python-fastjsonschema=2.20.0=pyhd8ed1ab_0
+  - python-json-logger=2.0.7=pyhd8ed1ab_0
+  - python_abi=3.8=2_cp38
+  - pytorch=2.2.0=py3.8_cuda11.8_cudnn8.7.0_0
+  - pytorch-cuda=11.8=h7e8668a_6
+  - pytorch-mutex=1.0=cuda
+  - pytorch3d=0.7.8=py38_cu118_pyt220
+  - pytz=2024.2=pyhd8ed1ab_0
+  - pyu2f=0.1.5=pyhd8ed1ab_0
+  - pyyaml=6.0=py38h0a891b7_5
+  - pyzmq=25.1.2=py38h6a678d5_0
+  - qt-main=5.15.2=h327a75a_7
+  - re2=2022.04.01=h27087fc_0
+  - readline=8.2=h5eee18b_0
+  - referencing=0.35.1=pyhd8ed1ab_0
+  - requests=2.32.3=pyhd8ed1ab_0
+  - requests-oauthlib=2.0.0=pyhd8ed1ab_0
+  - rfc3339-validator=0.1.4=pyhd8ed1ab_0
+  - rfc3986-validator=0.1.1=pyh9f0ad1d_0
+  - rpds-py=0.20.0=py38h4005ec7_0
+  - rsa=4.9=pyhd8ed1ab_0
+  - send2trash=1.8.3=pyh0d859eb_0
+  - setuptools=75.1.0=py38h06a4308_0
+  - shapely=1.8.2=py38h97f7145_1
+  - sip=6.5.1=py38h709712a_2
+  - six=1.16.0=pyh6c4a22f_0
+  - sniffio=1.3.1=pyhd8ed1ab_0
+  - soupsieve=2.5=pyhd8ed1ab_1
+  - sqlite=3.45.3=h5eee18b_0
+  - stack_data=0.6.2=pyhd8ed1ab_0
+  - suitesparse=5.10.1=h9e50725_1
+  - sympy=1.5.1=py38_0
+  - tabulate=0.9.0=pyhd8ed1ab_1
+  - tbb=2021.5.0=h924138e_1
+  - tenacity=9.0.0=pyhd8ed1ab_0
+  - tensorboard=2.13.0=pyhd8ed1ab_0
+  - tensorboard-data-server=0.7.0=py38h52d8a92_1
+  - termcolor=2.4.0=pyhd8ed1ab_0
+  - terminado=0.18.1=pyh0d859eb_0
+  - tinycss2=1.4.0=pyhd8ed1ab_0
+  - tk=8.6.14=h39e8969_0
+  - toml=0.10.2=pyhd8ed1ab_0
+  - tomli=2.0.2=pyhd8ed1ab_0
+  - torchaudio=2.2.0=py38_cu118
+  - torchtriton=2.2.0=py38
+  - torchvision=0.17.0=py38_cu118
+  - tornado=6.4.1=py38hfb59056_0
+  - tqdm=4.67.1=pyhd8ed1ab_0
+  - traitlets=5.14.3=pyhd8ed1ab_0
+  - types-python-dateutil=2.9.0.20241003=pyhff2d567_0
+  - typing-extensions=4.12.2=hd8ed1ab_0
+  - typing_extensions=4.12.2=pyha770c72_0
+  - typing_utils=0.1.0=pyhd8ed1ab_0
+  - unicodedata2=15.1.0=py38h01eb140_0
+  - uri-template=1.3.0=pyhd8ed1ab_0
+  - urllib3=2.2.3=pyhd8ed1ab_0
+  - wcwidth=0.2.13=pyhd8ed1ab_0
+  - webcolors=24.8.0=pyhd8ed1ab_0
+  - webencodings=0.5.1=pyhd8ed1ab_2
+  - websocket-client=1.8.0=pyhd8ed1ab_0
+  - werkzeug=3.0.6=pyhd8ed1ab_0
+  - wheel=0.44.0=py38h06a4308_0
+  - widgetsnbextension=4.0.13=pyhd8ed1ab_0
+  - xorg-libx11=1.8.11=h4f16b4b_0
+  - xorg-libxau=1.0.12=hb9d3cd8_0
+  - xorg-libxdmcp=1.1.5=hb9d3cd8_0
+  - xorg-libxext=1.3.6=hb9d3cd8_0
+  - xz=5.6.4=h5eee18b_1
+  - yacs=0.1.8=pyhd8ed1ab_0
+  - yaml=0.2.5=h7f98852_2
+  - yarl=1.7.2=py38h0a891b7_2
+  - zeromq=4.3.5=h6a678d5_0
+  - zipp=3.21.0=pyhd8ed1ab_0
+  - zlib=1.2.13=h5eee18b_1
+  - zstandard=0.23.0=py38h2c38b39_0
+  - zstd=1.5.6=hc292b87_0
+  - pip:
+      - aerial-gym==2.0.0
+      - cloudpickle==3.1.1
+      - colorlog==6.9.0
+      - contourpy==1.1.1
+      - cython==3.0.12
+      - decorator==5.2.1
+      - farama-notifications==0.0.4
+      - faster-fifo==1.4.7
+      - fonttools==4.56.0
+      - freetype-py==2.5.1
+      - fsspec==2025.2.0
+      - gitdb==4.0.12
+      - gitpython==3.1.44
+      - gym==0.23.1
+      - gymnasium==0.29.1
+      - huggingface-hub==0.29.1
+      - imageio==2.35.1
+      - kiwisolver==1.4.7
+      - lxml==5.3.1
+      - matplotlib==3.7.5
+      - networkx==2.2
+      - ninja==1.11.1.3
+      - numpy==1.23.0
+      - opencv-python==4.11.0.86
+      - pathtools==0.1.2
+      - promise==2.3
+      - protobuf==3.20.3
+      - psutil==5.9.8
+      - pycollada==0.6
+      - pygame==2.1.0
+      - pyglet==2.1.3
+      - pyopengl==3.1.0
+      - pyparsing==3.1.4
+      - pyrender==0.1.45
+      - python-dateutil==2.9.0.post0
+      - rl-games==1.6.1
+      - sample-factory==2.1.1
+      - scipy==1.10.1
+      - sentry-sdk==2.22.0
+      - setproctitle==1.3.5
+      - shortuuid==1.0.13
+      - signal-slot-mp==1.0.5
+      - smmap==5.0.2
+      - tensorboardx==2.6.2.2
+      - threadpoolctl==3.5.0
+      - trimesh==4.6.3
+      - wandb==0.12.21
+      - warp-lang==1.0.0b5
+prefix: /home/shruti/miniconda3/envs/aerialgym
diff --git a/aerial_gym/rl_training/rl_games/wandb/run-20250226_215103-yh9jzmtn/files/config.yaml b/aerial_gym/rl_training/rl_games/wandb/run-20250226_215103-yh9jzmtn/files/config.yaml
new file mode 100644
index 0000000..ee4c7a4
--- /dev/null
+++ b/aerial_gym/rl_training/rl_games/wandb/run-20250226_215103-yh9jzmtn/files/config.yaml
@@ -0,0 +1,94 @@
+wandb_version: 1
+
+params:
+  desc: null
+  value:
+    seed: 10
+    algo:
+      name: a2c_continuous
+    model:
+      name: continuous_a2c_logstd
+    load_checkpoint: false
+    network:
+      name: actor_critic
+      separate: false
+      space:
+        continuous:
+          mu_activation: None
+          sigma_activation: None
+          mu_init:
+            name: default
+          sigma_init:
+            name: const_initializer
+            val: 0
+          fixed_sigma: true
+      mlp:
+        units:
+        - 256
+        - 128
+        - 64
+        d2rl: false
+        activation: elu
+        initializer:
+          name: default
+          scale: 2
+    config:
+      env_name: navigation_task
+      env_config:
+        num_envs: 16
+        headless: false
+        use_warp: true
+      name: gen_ppo
+      reward_shaper:
+        scale_value: 0.1
+      normalize_advantage: true
+      gamma: 0.98
+      tau: 0.95
+      ppo: true
+      learning_rate: 1e-4
+      lr_schedule: adaptive
+      kl_threshold: 0.016
+      save_best_after: 10
+      score_to_win: 100000
+      grad_norm: 1.0
+      entropy_coef: 0
+      truncate_grads: true
+      e_clip: 0.2
+      clip_value: false
+      num_actors: 16
+      horizon_length: 32
+      minibatch_size: 2048
+      mini_epochs: 4
+      critic_coef: 2
+      normalize_input: true
+      bounds_loss_coef: 0.0001
+      max_epochs: 500
+      normalize_value: true
+      use_diagnostics: true
+      value_bootstrap: true
+      use_smooth_clamp: false
+      player:
+        use_vecenv: true
+_wandb:
+  desc: null
+  value:
+    code_path: code/aerial_gym/rl_training/rl_games/runner.py
+    python_version: 3.8.20
+    cli_version: 0.16.6
+    framework: torch
+    is_jupyter_run: false
+    is_kaggle_kernel: false
+    start_time: 1740624663.0
+    t:
+      1:
+      - 1
+      - 55
+      3:
+      - 16
+      - 23
+      - 35
+      4: 3.8.20
+      5: 0.16.6
+      8:
+      - 5
+      13: linux-x86_64
diff --git a/aerial_gym/rl_training/rl_games/wandb/run-20250226_215103-yh9jzmtn/files/diff.patch b/aerial_gym/rl_training/rl_games/wandb/run-20250226_215103-yh9jzmtn/files/diff.patch
new file mode 100644
index 0000000..a7ff8db
--- /dev/null
+++ b/aerial_gym/rl_training/rl_games/wandb/run-20250226_215103-yh9jzmtn/files/diff.patch
@@ -0,0 +1,38 @@
+diff --git a/aerial_gym/config/task_config/navigation_task_config.py b/aerial_gym/config/task_config/navigation_task_config.py
+index 7ecbda5..2f838d7 100644
+--- a/aerial_gym/config/task_config/navigation_task_config.py
++++ b/aerial_gym/config/task_config/navigation_task_config.py
+@@ -19,7 +19,7 @@ class task_config:
+     episode_len_steps = 100  # real physics time for simulation is this value multiplied by sim.dt
+ 
+     return_state_before_reset = (
+-        False  # False as usually state is returned for next episode after reset
++        True  # False as usually state is returned for next episode after reset
+     )
+     # user can set the above to true if they so desire
+ 
+diff --git a/aerial_gym/rl_training/rl_games/runner.py b/aerial_gym/rl_training/rl_games/runner.py
+index 7e8ffb4..bd45a3c 100644
+--- a/aerial_gym/rl_training/rl_games/runner.py
++++ b/aerial_gym/rl_training/rl_games/runner.py
+@@ -255,7 +255,7 @@ def get_args():
+             "name": "--use_warp",
+             "type": lambda x: bool(distutils.util.strtobool(x)),
+             "default": "True",
+-            "help": "Choose whether to use warp or Isaac Gym rendeing pipeline.",
++            "help": "Choose whether to use warp or Isaac Gym rendering pipeline.",
+         },
+     ]
+ 
+diff --git a/aerial_gym/task/__init__.py b/aerial_gym/task/__init__.py
+index 7dd966d..7975a4d 100644
+--- a/aerial_gym/task/__init__.py
++++ b/aerial_gym/task/__init__.py
+@@ -95,5 +95,5 @@ task_registry.register_task(
+ 
+ ## Uncomment this to use custom tasks
+ 
+-# from aerial_gym.task.custom_task.custom_task import CustomTask
+-# task_registry.register_task("custom_task", CustomTask, custom_task.task_config)
++#from aerial_gym.task.custom_task.custom_task import CustomTask
++#task_registry.register_task("custom_task", CustomTask, custom_task.task_config)
diff --git a/aerial_gym/rl_training/rl_games/wandb/run-20250226_215103-yh9jzmtn/files/output.log b/aerial_gym/rl_training/rl_games/wandb/run-20250226_215103-yh9jzmtn/files/output.log
new file mode 100644
index 0000000..d6ca48f
--- /dev/null
+++ b/aerial_gym/rl_training/rl_games/wandb/run-20250226_215103-yh9jzmtn/files/output.log
@@ -0,0 +1,57 @@
+Started to play
+[BasePlayer] Creating vecenv:  navigation_task
+[isaacgym:gymutil.py] Unknown args:  ['--file=./ppo_aerial_quad_navigation.yaml', '--play', '--checkpoint=./runs/gen_ppo_26-16-11-42/nn/last_gen_ppo_ep_500_rew__377.14606_.pth', '--track', 'wandb-project-name=Trained_RL_Navigation', 'wandb-entity=shrutiroy03']
+[37m[4804 ms][base_task] - INFO : Setting seed: 814938827 (base_task.py:38)
+[37m[4805 ms][navigation_task] - INFO : Building environment for navigation task. (navigation_task.py:44)
+[37m[4805 ms][navigation_task] - INFO : Sim Name: base_sim, Env Name: env_with_obstacles, Robot Name: lmf2, Controller Name: lmf2_velocity_control (navigation_task.py:45)
+[37m[4805 ms][env_manager] - INFO : Populating environments. (env_manager.py:73)
+[37m[4805 ms][env_manager] - INFO : Creating simulation instance. (env_manager.py:87)
+[37m[4805 ms][env_manager] - INFO : Instantiating IGE object. (env_manager.py:88)
+[37m[4805 ms][IsaacGymEnvManager] - INFO : Creating Isaac Gym Environment (IGE_env_manager.py:41)
+[37m[4805 ms][IsaacGymEnvManager] - INFO : Acquiring gym object (IGE_env_manager.py:73)
+[37m[4805 ms][IsaacGymEnvManager] - INFO : Acquired gym object (IGE_env_manager.py:75)
+[37m[4806 ms][IsaacGymEnvManager] - INFO : Fixing devices (IGE_env_manager.py:89)
+[37m[4806 ms][IsaacGymEnvManager] - INFO : Using GPU pipeline for simulation. (IGE_env_manager.py:102)
+[37m[4806 ms][IsaacGymEnvManager] - INFO : Sim Device type: cuda, Sim Device ID: 0 (IGE_env_manager.py:105)
+[37m[4806 ms][IsaacGymEnvManager] - INFO : Graphics Device ID: 0 (IGE_env_manager.py:119)
+[37m[4806 ms][IsaacGymEnvManager] - INFO : Creating Isaac Gym Simulation Object (IGE_env_manager.py:120)
+[33m[4806 ms][IsaacGymEnvManager] - WARNING : If you have set the CUDA_VISIBLE_DEVICES environment variable, please ensure that you set it
+[33mto a particular one that works for your system to use the viewer or Isaac Gym cameras.
+[33mIf you want to run parallel simulations on multiple GPUs with camera sensors,
+[33mplease disable Isaac Gym and use warp (by setting use_warp=True), set the viewer to headless. (IGE_env_manager.py:127)
+[33m[4806 ms][IsaacGymEnvManager] - WARNING : If you see a segfault in the next lines, it is because of the discrepancy between the CUDA device and the graphics device.
+[33mPlease ensure that the CUDA device and the graphics device are the same. (IGE_env_manager.py:132)
+[37m[5633 ms][IsaacGymEnvManager] - INFO : Created Isaac Gym Simulation Object (IGE_env_manager.py:136)
+[37m[5633 ms][IsaacGymEnvManager] - INFO : Created Isaac Gym Environment (IGE_env_manager.py:43)
+[37m[5738 ms][env_manager] - INFO : IGE object instantiated. (env_manager.py:109)
+[37m[5738 ms][env_manager] - INFO : Creating warp environment. (env_manager.py:112)
+[37m[5738 ms][env_manager] - INFO : Warp environment created. (env_manager.py:114)
+[37m[5738 ms][env_manager] - INFO : Creating robot manager. (env_manager.py:118)
+[37m[5738 ms][BaseRobot] - INFO : [DONE] Initializing controller (base_robot.py:26)
+[37m[5738 ms][BaseRobot] - INFO : Initializing controller lmf2_velocity_control (base_robot.py:29)
+[33m[5738 ms][base_multirotor] - WARNING : Creating 16 multirotors. (base_multirotor.py:32)
+[37m[5738 ms][env_manager] - INFO : [DONE] Creating robot manager. (env_manager.py:123)
+[37m[5738 ms][env_manager] - INFO : [DONE] Creating simulation instance. (env_manager.py:125)
+[37m[5738 ms][asset_loader] - INFO : Loading asset: model.urdf for the first time. Next use of this asset will be via the asset buffer. (asset_loader.py:71)
+[37m[5739 ms][asset_loader] - INFO : Loading asset: panel.urdf for the first time. Next use of this asset will be via the asset buffer. (asset_loader.py:71)
+[37m[5741 ms][asset_loader] - INFO : Loading asset: 0_5_x_0_5_wall.urdf for the first time. Next use of this asset will be via the asset buffer. (asset_loader.py:71)
+[37m[5742 ms][asset_loader] - INFO : Loading asset: cuboidal_rod.urdf for the first time. Next use of this asset will be via the asset buffer. (asset_loader.py:71)
+[37m[5742 ms][asset_loader] - INFO : Loading asset: small_cube.urdf for the first time. Next use of this asset will be via the asset buffer. (asset_loader.py:71)
+[37m[5743 ms][asset_loader] - INFO : Loading asset: left_wall.urdf for the first time. Next use of this asset will be via the asset buffer. (asset_loader.py:71)
+[37m[5744 ms][asset_loader] - INFO : Loading asset: right_wall.urdf for the first time. Next use of this asset will be via the asset buffer. (asset_loader.py:71)
+[37m[5745 ms][asset_loader] - INFO : Loading asset: back_wall.urdf for the first time. Next use of this asset will be via the asset buffer. (asset_loader.py:71)
+[37m[5746 ms][asset_loader] - INFO : Loading asset: front_wall.urdf for the first time. Next use of this asset will be via the asset buffer. (asset_loader.py:71)
+[37m[5746 ms][asset_loader] - INFO : Loading asset: bottom_wall.urdf for the first time. Next use of this asset will be via the asset buffer. (asset_loader.py:71)
+[37m[5747 ms][asset_loader] - INFO : Loading asset: top_wall.urdf for the first time. Next use of this asset will be via the asset buffer. (asset_loader.py:71)
+[37m[5748 ms][asset_loader] - INFO : Loading asset: 1_x_1_wall.urdf for the first time. Next use of this asset will be via the asset buffer. (asset_loader.py:71)
+[37m[5750 ms][env_manager] - INFO : Populating environment 0 (env_manager.py:179)
+[33m[5823 ms][robot_manager] - WARNING : 
+[33mRobot mass: 1.2400000467896461,
+[33mInertia: tensor([[0.0134, 0.0000, 0.0000],
+[33m        [0.0000, 0.0144, 0.0000],
+[33m        [0.0000, 0.0000, 0.0138]], device='cuda:0'),
+[33mRobot COM: tensor([[0., 0., 0., 1.]], device='cuda:0') (robot_manager.py:427)
+[33m[5824 ms][robot_manager] - WARNING : Calculated robot mass and inertia for this robot. This code assumes that your robot is the same across environments. (robot_manager.py:430)
+[31m[5824 ms][robot_manager] - CRITICAL : If your robot differs across environments you need to perform this computation for each different robot here. (robot_manager.py:433)
+[37m[5843 ms][env_manager] - INFO : [DONE] Populating environments. (env_manager.py:75)
+[33m[5850 ms][IsaacGymEnvManager] - WARNING : Headless: False (IGE_env_manager.py:424)
diff --git a/aerial_gym/rl_training/rl_games/wandb/run-20250226_215103-yh9jzmtn/files/requirements.txt b/aerial_gym/rl_training/rl_games/wandb/run-20250226_215103-yh9jzmtn/files/requirements.txt
new file mode 100644
index 0000000..a906a9d
--- /dev/null
+++ b/aerial_gym/rl_training/rl_games/wandb/run-20250226_215103-yh9jzmtn/files/requirements.txt
@@ -0,0 +1,264 @@
+Brotli==1.0.9
+Cython==3.0.12
+Farama-Notifications==0.0.4
+GitPython==3.1.43
+GitPython==3.1.44
+Jinja2==3.1.4
+Markdown==3.6
+MarkupSafe==2.1.1
+Pillow==9.4.0
+PyJWT==2.9.0
+PyOpenGL==3.1.0
+PyQt5-sip==12.9.0
+PyQt5==5.15.4
+PySocks==1.7.1
+PyYAML==6.0
+Pygments==2.18.0
+Send2Trash==1.8.3
+Shapely==1.8.2
+Werkzeug==3.0.6
+absl-py==2.1.0
+aerial_gym==2.0.0
+aiohttp==3.7.4.post0
+antlr4-python3-runtime==4.9.3
+anyio==4.5.0
+appdirs==1.4.4
+argon2-cffi-bindings==21.2.0
+argon2-cffi==23.1.0
+arrow==1.3.0
+asttokens==3.0.0
+async-lru==2.0.4
+async-timeout==3.0.1
+attrs==24.2.0
+autocommand==2.2.2
+babel==2.16.0
+backcall==0.2.0
+backports.tarfile==1.2.0
+beautifulsoup4==4.12.3
+bleach==6.1.0
+blinker==1.8.2
+cached-property==1.5.2
+cachetools==5.5.0
+certifi==2024.8.30
+cffi==1.15.0
+chardet==4.0.0
+charset-normalizer==3.4.0
+click==8.1.7
+cloudpickle==3.1.0
+cloudpickle==3.1.1
+colorama==0.4.6
+colorlog==6.9.0
+comm==0.2.2
+contourpy==1.0.2
+contourpy==1.1.1
+cryptography==43.0.0
+cycler==0.12.1
+debugpy==1.6.7
+decorator==5.1.1
+decorator==5.2.1
+defusedxml==0.7.1
+dill==0.3.9
+docker-pycreds==0.4.0
+entrypoints==0.4
+exceptiongroup==1.2.2
+executing==2.1.0
+fastcache==1.1.0
+faster-fifo==1.4.7
+fastjsonschema==2.20.0
+filelock==3.13.1
+fonttools==4.53.1
+fonttools==4.56.0
+fqdn==1.5.1
+freetype-py==2.5.1
+fsspec==2025.2.0
+fvcore==0.1.5.post20210915
+gitdb==4.0.11
+gitdb==4.0.12
+gmpy2==2.1.2
+google-auth-oauthlib==1.0.0
+google-auth==2.35.0
+grpcio==1.62.2
+gym-notices==0.0.8
+gym==0.23.1
+gym==0.26.1
+gymnasium==0.29.1
+h11==0.14.0
+h2==4.1.0
+hpack==4.0.0
+httpcore==1.0.7
+httpx==0.27.2
+huggingface-hub==0.29.1
+hyperframe==6.0.1
+idna==3.10
+imageio==2.35.1
+importlib_metadata==8.0.0
+importlib_metadata==8.5.0
+importlib_resources==6.4.0
+importlib_resources==6.4.5
+inflect==7.3.1
+iopath==0.1.9
+ipykernel==6.29.5
+ipython==8.12.2
+ipywidgets==8.1.5
+isaacgym==1.0rc4
+isoduration==20.11.0
+jaraco.collections==5.1.0
+jaraco.context==5.3.0
+jaraco.functools==4.0.1
+jaraco.text==3.12.1
+jedi==0.19.1
+json5==0.9.25
+jsonpointer==3.0.0
+jsonschema-specifications==2024.10.1
+jsonschema==4.23.0
+jupyter-console==6.6.3
+jupyter-events==0.10.0
+jupyter-lsp==2.2.5
+jupyter==1.1.1
+jupyter_client==8.6.3
+jupyter_core==5.7.2
+jupyter_server==2.14.2
+jupyter_server_terminals==0.5.3
+jupyterlab==4.2.5
+jupyterlab_pygments==0.3.0
+jupyterlab_server==2.27.3
+jupyterlab_widgets==3.0.13
+kiwisolver==1.4.2
+kiwisolver==1.4.7
+lxml==5.3.1
+matplotlib-inline==0.1.7
+matplotlib==3.7.2
+matplotlib==3.7.5
+mistune==3.0.2
+mkl-fft==1.3.1
+mkl-random==1.2.2
+mkl-service==2.4.0
+more-itertools==10.3.0
+mpmath==1.3.0
+multidict==6.0.2
+munkres==1.1.4
+nbclient==0.10.2
+nbconvert==7.16.4
+nbformat==5.10.4
+nest_asyncio==1.6.0
+networkx==2.2
+networkx==3.1
+ninja==1.11.1.3
+notebook==7.2.2
+notebook_shim==0.2.4
+numpy==1.23.0
+oauthlib==3.2.2
+olefile==0.47
+omegaconf==2.3.0
+opencv-python==4.11.0.86
+overrides==7.7.0
+packaging==24.1
+packaging==24.2
+pandas==1.4.2
+pandocfilters==1.5.0
+parso==0.8.4
+pathtools==0.1.2
+pexpect==4.9.0
+pickleshare==0.7.5
+pip==24.2
+pkgutil_resolve_name==1.3.10
+platformdirs==4.2.2
+platformdirs==4.3.6
+plotly==5.24.1
+portalocker==2.10.1
+prometheus_client==0.21.0
+promise==2.3
+prompt_toolkit==3.0.48
+protobuf==3.20.3
+protobuf==4.25.3
+psutil==5.9.8
+psutil==6.0.0
+ptyprocess==0.7.0
+pure_eval==0.2.3
+pyOpenSSL==24.2.1
+pyasn1==0.6.1
+pyasn1_modules==0.4.1
+pybullet==3.2.0
+pycollada==0.6
+pycparser==2.22
+pygame==2.1.0
+pyglet==2.1.3
+pyparsing==3.0.9
+pyparsing==3.1.4
+pyrender==0.1.45
+python-dateutil==2.9.0
+python-dateutil==2.9.0.post0
+python-json-logger==2.0.7
+pytorch3d==0.7.8
+pytz==2024.2
+pyu2f==0.1.5
+pyzmq==25.1.2
+referencing==0.35.1
+requests-oauthlib==2.0.0
+requests==2.32.3
+rfc3339-validator==0.1.4
+rfc3986-validator==0.1.1
+rl_games==1.6.1
+rpds-py==0.20.0
+rsa==4.9
+sample-factory==2.1.1
+scipy==1.10.1
+sentry-sdk==2.19.2
+sentry-sdk==2.22.0
+setproctitle==1.3.3
+setproctitle==1.3.5
+setuptools==75.1.0
+shortuuid==1.0.13
+signal-slot-mp==1.0.5
+sip==6.5.1
+six==1.16.0
+smmap==5.0.0
+smmap==5.0.2
+sniffio==1.3.1
+soupsieve==2.5
+stack-data==0.6.2
+sympy==1.5.1
+tabulate==0.9.0
+tenacity==9.0.0
+tensorboard==2.13.0
+tensorboardX==2.6.2.2
+tensorboard_data_server==0.7.0
+termcolor==2.4.0
+terminado==0.18.1
+threadpoolctl==3.5.0
+tinycss2==1.4.0
+toml==0.10.2
+tomli==2.0.1
+tomli==2.0.2
+torch==2.2.0
+torchaudio==2.2.0
+torchvision==0.17.0
+tornado==6.4.1
+tqdm==4.67.1
+traitlets==5.14.3
+trimesh==4.6.3
+triton==2.2.0
+typeguard==4.3.0
+types-python-dateutil==2.9.0.20241003
+typing-utils==0.1.0
+typing_extensions==4.12.2
+typing_extensions==4.12.2
+unicodedata2==15.1.0
+urdfpy==0.0.22
+uri-template==1.3.0
+urllib3==2.2.3
+wandb==0.12.21
+wandb==0.16.6
+warp-lang==1.0.0b5
+wcwidth==0.2.13
+webcolors==24.8.0
+webencodings==0.5.1
+websocket-client==1.8.0
+wheel==0.43.0
+wheel==0.44.0
+widgetsnbextension==4.0.13
+yacs==0.1.8
+yarl==1.7.2
+zipp==3.19.2
+zipp==3.21.0
+zstandard==0.23.0
\ No newline at end of file
diff --git a/aerial_gym/rl_training/rl_games/wandb/run-20250226_215103-yh9jzmtn/files/wandb-metadata.json b/aerial_gym/rl_training/rl_games/wandb/run-20250226_215103-yh9jzmtn/files/wandb-metadata.json
new file mode 100644
index 0000000..e13f5db
--- /dev/null
+++ b/aerial_gym/rl_training/rl_games/wandb/run-20250226_215103-yh9jzmtn/files/wandb-metadata.json
@@ -0,0 +1,156 @@
+{
+    "os": "Linux-6.5.0-44-generic-x86_64-with-glibc2.17",
+    "python": "3.8.20",
+    "heartbeatAt": "2025-02-27T02:51:03.423535",
+    "startedAt": "2025-02-27T02:51:03.095465",
+    "docker": null,
+    "cuda": null,
+    "args": [
+        "--file=./ppo_aerial_quad_navigation.yaml",
+        "--num_envs=16",
+        "--play",
+        "--checkpoint=./runs/gen_ppo_26-16-11-42/nn/last_gen_ppo_ep_500_rew__377.14606_.pth",
+        "--track",
+        "wandb-project-name=Trained_RL_Navigation",
+        "wandb-entity=shrutiroy03"
+    ],
+    "state": "running",
+    "program": "runner.py",
+    "codePathLocal": "runner.py",
+    "codePath": "aerial_gym/rl_training/rl_games/runner.py",
+    "git": {
+        "remote": "https://github.com/ntnu-arl/aerial_gym_simulator.git",
+        "commit": "85114e7514ed0f3f8cfecfa23c40dad106c528a1"
+    },
+    "email": null,
+    "root": "/home/shruti/workspaces/aerial_gym_ws/src/aerial_gym_simulator",
+    "host": "saferoboticslab-ASUS-TUF-Gaming-F15-FX507ZM-FX507ZM",
+    "username": "shruti",
+    "executable": "/home/shruti/miniconda3/envs/aerialgym/bin/python3",
+    "cpu_count": 14,
+    "cpu_count_logical": 20,
+    "cpu_freq": {
+        "current": 1122.00845,
+        "min": 400.0,
+        "max": 4180.0
+    },
+    "cpu_freq_per_core": [
+        {
+            "current": 3080.595,
+            "min": 400.0,
+            "max": 4600.0
+        },
+        {
+            "current": 400.0,
+            "min": 400.0,
+            "max": 4600.0
+        },
+        {
+            "current": 3304.623,
+            "min": 400.0,
+            "max": 4600.0
+        },
+        {
+            "current": 400.0,
+            "min": 400.0,
+            "max": 4600.0
+        },
+        {
+            "current": 3032.075,
+            "min": 400.0,
+            "max": 4700.0
+        },
+        {
+            "current": 3251.82,
+            "min": 400.0,
+            "max": 4700.0
+        },
+        {
+            "current": 678.092,
+            "min": 400.0,
+            "max": 4700.0
+        },
+        {
+            "current": 3126.236,
+            "min": 400.0,
+            "max": 4700.0
+        },
+        {
+            "current": 1213.841,
+            "min": 400.0,
+            "max": 4600.0
+        },
+        {
+            "current": 2322.73,
+            "min": 400.0,
+            "max": 4600.0
+        },
+        {
+            "current": 3242.524,
+            "min": 400.0,
+            "max": 4600.0
+        },
+        {
+            "current": 400.0,
+            "min": 400.0,
+            "max": 4600.0
+        },
+        {
+            "current": 1563.948,
+            "min": 400.0,
+            "max": 3500.0
+        },
+        {
+            "current": 1321.432,
+            "min": 400.0,
+            "max": 3500.0
+        },
+        {
+            "current": 400.0,
+            "min": 400.0,
+            "max": 3500.0
+        },
+        {
+            "current": 400.0,
+            "min": 400.0,
+            "max": 3500.0
+        },
+        {
+            "current": 1000.132,
+            "min": 400.0,
+            "max": 3500.0
+        },
+        {
+            "current": 400.0,
+            "min": 400.0,
+            "max": 3500.0
+        },
+        {
+            "current": 400.0,
+            "min": 400.0,
+            "max": 3500.0
+        },
+        {
+            "current": 400.0,
+            "min": 400.0,
+            "max": 3500.0
+        }
+    ],
+    "disk": {
+        "/": {
+            "total": 937.3305015563965,
+            "used": 231.46108627319336
+        }
+    },
+    "gpu": "NVIDIA GeForce RTX 3060 Laptop GPU",
+    "gpu_count": 1,
+    "gpu_devices": [
+        {
+            "name": "NVIDIA GeForce RTX 3060 Laptop GPU",
+            "memory_total": 6442450944
+        }
+    ],
+    "memory": {
+        "total": 15.238014221191406
+    }
+}
diff --git a/aerial_gym/rl_training/rl_games/wandb/run-20250226_215103-yh9jzmtn/logs/debug-internal.log b/aerial_gym/rl_training/rl_games/wandb/run-20250226_215103-yh9jzmtn/logs/debug-internal.log
new file mode 100644
index 0000000..40edc80
--- /dev/null
+++ b/aerial_gym/rl_training/rl_games/wandb/run-20250226_215103-yh9jzmtn/logs/debug-internal.log
@@ -0,0 +1,65 @@
+2025-02-26 21:51:03,100 INFO    StreamThr :19476 [internal.py:wandb_internal():86] W&B internal server running at pid: 19476, started at: 2025-02-26 21:51:03.099961
+2025-02-26 21:51:03,101 DEBUG   HandlerThread:19476 [handler.py:handle_request():146] handle_request: status
+2025-02-26 21:51:03,102 INFO    WriterThread:19476 [datastore.py:open_for_write():87] open: /home/shruti/workspaces/aerial_gym_ws/src/aerial_gym_simulator/aerial_gym/rl_training/rl_games/wandb/run-20250226_215103-yh9jzmtn/run-yh9jzmtn.wandb
+2025-02-26 21:51:03,103 DEBUG   SenderThread:19476 [sender.py:send():379] send: header
+2025-02-26 21:51:03,113 DEBUG   SenderThread:19476 [sender.py:send():379] send: run
+2025-02-26 21:51:03,335 INFO    SenderThread:19476 [dir_watcher.py:__init__():211] watching files in: /home/shruti/workspaces/aerial_gym_ws/src/aerial_gym_simulator/aerial_gym/rl_training/rl_games/wandb/run-20250226_215103-yh9jzmtn/files
+2025-02-26 21:51:03,335 INFO    SenderThread:19476 [sender.py:_start_run_threads():1124] run started: yh9jzmtn with start time 1740624663.099579
+2025-02-26 21:51:03,342 DEBUG   HandlerThread:19476 [handler.py:handle_request():146] handle_request: check_version
+2025-02-26 21:51:03,342 DEBUG   SenderThread:19476 [sender.py:send_request():406] send_request: check_version
+2025-02-26 21:51:03,398 DEBUG   HandlerThread:19476 [handler.py:handle_request():146] handle_request: run_start
+2025-02-26 21:51:03,408 DEBUG   HandlerThread:19476 [system_info.py:__init__():26] System info init
+2025-02-26 21:51:03,408 DEBUG   HandlerThread:19476 [system_info.py:__init__():41] System info init done
+2025-02-26 21:51:03,408 INFO    HandlerThread:19476 [system_monitor.py:start():194] Starting system monitor
+2025-02-26 21:51:03,409 INFO    SystemMonitor:19476 [system_monitor.py:_start():158] Starting system asset monitoring threads
+2025-02-26 21:51:03,409 INFO    HandlerThread:19476 [system_monitor.py:probe():214] Collecting system info
+2025-02-26 21:51:03,409 INFO    SystemMonitor:19476 [interfaces.py:start():190] Started cpu monitoring
+2025-02-26 21:51:03,410 INFO    SystemMonitor:19476 [interfaces.py:start():190] Started disk monitoring
+2025-02-26 21:51:03,410 INFO    SystemMonitor:19476 [interfaces.py:start():190] Started gpu monitoring
+2025-02-26 21:51:03,410 INFO    SystemMonitor:19476 [interfaces.py:start():190] Started memory monitoring
+2025-02-26 21:51:03,411 INFO    SystemMonitor:19476 [interfaces.py:start():190] Started network monitoring
+2025-02-26 21:51:03,423 DEBUG   HandlerThread:19476 [system_info.py:probe():150] Probing system
+2025-02-26 21:51:03,430 DEBUG   HandlerThread:19476 [system_info.py:_probe_git():135] Probing git
+2025-02-26 21:51:03,439 DEBUG   HandlerThread:19476 [system_info.py:_probe_git():143] Probing git done
+2025-02-26 21:51:03,439 DEBUG   HandlerThread:19476 [system_info.py:probe():198] Probing system done
+2025-02-26 21:51:03,439 DEBUG   HandlerThread:19476 [system_monitor.py:probe():223] {'os': 'Linux-6.5.0-44-generic-x86_64-with-glibc2.17', 'python': '3.8.20', 'heartbeatAt': '2025-02-27T02:51:03.423535', 'startedAt': '2025-02-27T02:51:03.095465', 'docker': None, 'cuda': None, 'args': ('--file=./ppo_aerial_quad_navigation.yaml', '--num_envs=16', '--play', '--checkpoint=./runs/gen_ppo_26-16-11-42/nn/last_gen_ppo_ep_500_rew__377.14606_.pth', '--track', 'wandb-project-name=Trained_RL_Navigation', 'wandb-entity=shrutiroy03'), 'state': 'running', 'program': 'runner.py', 'codePathLocal': 'runner.py', 'codePath': 'aerial_gym/rl_training/rl_games/runner.py', 'git': {'remote': 'https://github.com/ntnu-arl/aerial_gym_simulator.git', 'commit': '85114e7514ed0f3f8cfecfa23c40dad106c528a1'}, 'email': None, 'root': '/home/shruti/workspaces/aerial_gym_ws/src/aerial_gym_simulator', 'host': 'saferoboticslab-ASUS-TUF-Gaming-F15-FX507ZM-FX507ZM', 'username': 'shruti', 'executable': '/home/shruti/miniconda3/envs/aerialgym/bin/python3', 'cpu_count': 14, 'cpu_count_logical': 20, 'cpu_freq': {'current': 1122.00845, 'min': 400.0, 'max': 4180.0}, 'cpu_freq_per_core': [{'current': 3080.595, 'min': 400.0, 'max': 4600.0}, {'current': 400.0, 'min': 400.0, 'max': 4600.0}, {'current': 3304.623, 'min': 400.0, 'max': 4600.0}, {'current': 400.0, 'min': 400.0, 'max': 4600.0}, {'current': 3032.075, 'min': 400.0, 'max': 4700.0}, {'current': 3251.82, 'min': 400.0, 'max': 4700.0}, {'current': 678.092, 'min': 400.0, 'max': 4700.0}, {'current': 3126.236, 'min': 400.0, 'max': 4700.0}, {'current': 1213.841, 'min': 400.0, 'max': 4600.0}, {'current': 2322.73, 'min': 400.0, 'max': 4600.0}, {'current': 3242.524, 'min': 400.0, 'max': 4600.0}, {'current': 400.0, 'min': 400.0, 'max': 4600.0}, {'current': 1563.948, 'min': 400.0, 'max': 3500.0}, {'current': 1321.432, 'min': 400.0, 'max': 3500.0}, {'current': 400.0, 'min': 400.0, 'max': 3500.0}, {'current': 400.0, 'min': 400.0, 'max': 3500.0}, {'current': 1000.132, 'min': 400.0, 'max': 3500.0}, {'current': 400.0, 'min': 400.0, 'max': 3500.0}, {'current': 400.0, 'min': 400.0, 'max': 3500.0}, {'current': 400.0, 'min': 400.0, 'max': 3500.0}], 'disk': {'/': {'total': 937.3305015563965, 'used': 231.46108627319336}}, 'gpu': 'NVIDIA GeForce RTX 3060 Laptop GPU', 'gpu_count': 1, 'gpu_devices': [{'name': 'NVIDIA GeForce RTX 3060 Laptop GPU', 'memory_total': 6442450944}], 'memory': {'total': 15.238014221191406}}
+2025-02-26 21:51:03,439 INFO    HandlerThread:19476 [system_monitor.py:probe():224] Finished collecting system info
+2025-02-26 21:51:03,439 INFO    HandlerThread:19476 [system_monitor.py:probe():227] Publishing system info
+2025-02-26 21:51:03,440 DEBUG   HandlerThread:19476 [system_info.py:_save_conda():207] Saving list of conda packages installed into the current environment
+2025-02-26 21:51:04,337 INFO    Thread-12 :19476 [dir_watcher.py:_on_file_created():271] file/dir created: /home/shruti/workspaces/aerial_gym_ws/src/aerial_gym_simulator/aerial_gym/rl_training/rl_games/wandb/run-20250226_215103-yh9jzmtn/files/conda-environment.yaml
+2025-02-26 21:51:05,210 DEBUG   HandlerThread:19476 [system_info.py:_save_conda():222] Saving conda packages done
+2025-02-26 21:51:05,210 DEBUG   HandlerThread:19476 [system_info.py:_save_code():44] Saving code
+2025-02-26 21:51:05,218 DEBUG   HandlerThread:19476 [system_info.py:_save_code():65] Saving code done
+2025-02-26 21:51:05,218 DEBUG   HandlerThread:19476 [system_info.py:_save_patches():82] Saving git patches
+2025-02-26 21:51:05,249 DEBUG   HandlerThread:19476 [system_info.py:_save_patches():124] Saving git patches done
+2025-02-26 21:51:05,249 INFO    HandlerThread:19476 [system_monitor.py:probe():229] Finished publishing system info
+2025-02-26 21:51:05,252 DEBUG   SenderThread:19476 [sender.py:send():379] send: files
+2025-02-26 21:51:05,252 INFO    SenderThread:19476 [sender.py:_save_file():1390] saving file wandb-metadata.json with policy now
+2025-02-26 21:51:05,252 INFO    SenderThread:19476 [sender.py:_save_file():1390] saving file code/aerial_gym/rl_training/rl_games/runner.py with policy now
+2025-02-26 21:51:05,252 INFO    SenderThread:19476 [sender.py:_save_file():1390] saving file diff.patch with policy now
+2025-02-26 21:51:05,333 DEBUG   HandlerThread:19476 [handler.py:handle_request():146] handle_request: python_packages
+2025-02-26 21:51:05,333 DEBUG   HandlerThread:19476 [handler.py:handle_request():146] handle_request: stop_status
+2025-02-26 21:51:05,333 DEBUG   SenderThread:19476 [sender.py:send_request():406] send_request: python_packages
+2025-02-26 21:51:05,334 DEBUG   SenderThread:19476 [sender.py:send_request():406] send_request: stop_status
+2025-02-26 21:51:05,335 DEBUG   HandlerThread:19476 [handler.py:handle_request():146] handle_request: internal_messages
+2025-02-26 21:51:05,337 INFO    Thread-12 :19476 [dir_watcher.py:_on_file_modified():288] file/dir modified: /home/shruti/workspaces/aerial_gym_ws/src/aerial_gym_simulator/aerial_gym/rl_training/rl_games/wandb/run-20250226_215103-yh9jzmtn/files/conda-environment.yaml
+2025-02-26 21:51:05,337 INFO    Thread-12 :19476 [dir_watcher.py:_on_file_created():271] file/dir created: /home/shruti/workspaces/aerial_gym_ws/src/aerial_gym_simulator/aerial_gym/rl_training/rl_games/wandb/run-20250226_215103-yh9jzmtn/files/wandb-metadata.json
+2025-02-26 21:51:05,338 INFO    Thread-12 :19476 [dir_watcher.py:_on_file_created():271] file/dir created: /home/shruti/workspaces/aerial_gym_ws/src/aerial_gym_simulator/aerial_gym/rl_training/rl_games/wandb/run-20250226_215103-yh9jzmtn/files/requirements.txt
+2025-02-26 21:51:05,338 INFO    Thread-12 :19476 [dir_watcher.py:_on_file_created():271] file/dir created: /home/shruti/workspaces/aerial_gym_ws/src/aerial_gym_simulator/aerial_gym/rl_training/rl_games/wandb/run-20250226_215103-yh9jzmtn/files/diff.patch
+2025-02-26 21:51:05,338 INFO    Thread-12 :19476 [dir_watcher.py:_on_file_created():271] file/dir created: /home/shruti/workspaces/aerial_gym_ws/src/aerial_gym_simulator/aerial_gym/rl_training/rl_games/wandb/run-20250226_215103-yh9jzmtn/files/code/aerial_gym/rl_training/rl_games/runner.py
+2025-02-26 21:51:05,338 INFO    Thread-12 :19476 [dir_watcher.py:_on_file_created():271] file/dir created: /home/shruti/workspaces/aerial_gym_ws/src/aerial_gym_simulator/aerial_gym/rl_training/rl_games/wandb/run-20250226_215103-yh9jzmtn/files/code/aerial_gym/rl_training/rl_games
+2025-02-26 21:51:05,338 INFO    Thread-12 :19476 [dir_watcher.py:_on_file_created():271] file/dir created: /home/shruti/workspaces/aerial_gym_ws/src/aerial_gym_simulator/aerial_gym/rl_training/rl_games/wandb/run-20250226_215103-yh9jzmtn/files/code
+2025-02-26 21:51:05,338 INFO    Thread-12 :19476 [dir_watcher.py:_on_file_created():271] file/dir created: /home/shruti/workspaces/aerial_gym_ws/src/aerial_gym_simulator/aerial_gym/rl_training/rl_games/wandb/run-20250226_215103-yh9jzmtn/files/code/aerial_gym
+2025-02-26 21:51:05,338 INFO    Thread-12 :19476 [dir_watcher.py:_on_file_created():271] file/dir created: /home/shruti/workspaces/aerial_gym_ws/src/aerial_gym_simulator/aerial_gym/rl_training/rl_games/wandb/run-20250226_215103-yh9jzmtn/files/code/aerial_gym/rl_training
+2025-02-26 21:51:05,488 DEBUG   SenderThread:19476 [sender.py:send():379] send: telemetry
+2025-02-26 21:51:05,517 INFO    wandb-upload_0:19476 [upload_job.py:push():131] Uploaded file /tmp/tmpqve_n9ihwandb/lxy5x485-wandb-metadata.json
+2025-02-26 21:51:05,585 INFO    wandb-upload_2:19476 [upload_job.py:push():131] Uploaded file /tmp/tmpqve_n9ihwandb/d7ys6e7k-diff.patch
+2025-02-26 21:51:05,590 INFO    wandb-upload_1:19476 [upload_job.py:push():131] Uploaded file /tmp/tmpqve_n9ihwandb/lbwmbxt1-code/aerial_gym/rl_training/rl_games/runner.py
+2025-02-26 21:51:06,337 INFO    Thread-12 :19476 [dir_watcher.py:_on_file_created():271] file/dir created: /home/shruti/workspaces/aerial_gym_ws/src/aerial_gym_simulator/aerial_gym/rl_training/rl_games/wandb/run-20250226_215103-yh9jzmtn/files/output.log
+2025-02-26 21:51:07,412 INFO    cpu       :19476 [interfaces.py:monitor():140] Process cpu has exited.
+2025-02-26 21:51:07,415 DEBUG   SystemMonitor:19476 [system_monitor.py:_start():172] Starting system metrics aggregation loop
+2025-02-26 21:51:07,415 DEBUG   SystemMonitor:19476 [system_monitor.py:_start():179] Finished system metrics aggregation loop
+2025-02-26 21:51:07,415 DEBUG   SystemMonitor:19476 [system_monitor.py:_start():183] Publishing last batch of metrics
+2025-02-26 21:51:07,418 DEBUG   SenderThread:19476 [sender.py:send():379] send: stats
+2025-02-26 21:51:08,339 INFO    Thread-12 :19476 [dir_watcher.py:_on_file_modified():288] file/dir modified: /home/shruti/workspaces/aerial_gym_ws/src/aerial_gym_simulator/aerial_gym/rl_training/rl_games/wandb/run-20250226_215103-yh9jzmtn/files/output.log
+2025-02-26 21:51:08,399 INFO    MainThread:19476 [internal.py:handle_exit():76] Internal process exited
diff --git a/aerial_gym/rl_training/rl_games/wandb/run-20250226_215103-yh9jzmtn/logs/debug.log b/aerial_gym/rl_training/rl_games/wandb/run-20250226_215103-yh9jzmtn/logs/debug.log
new file mode 100644
index 0000000..ca62928
--- /dev/null
+++ b/aerial_gym/rl_training/rl_games/wandb/run-20250226_215103-yh9jzmtn/logs/debug.log
@@ -0,0 +1,28 @@
+2025-02-26 21:51:03,097 INFO    MainThread:19416 [wandb_setup.py:_flush():76] Current SDK version is 0.16.6
+2025-02-26 21:51:03,097 INFO    MainThread:19416 [wandb_setup.py:_flush():76] Configure stats pid to 19416
+2025-02-26 21:51:03,097 INFO    MainThread:19416 [wandb_setup.py:_flush():76] Loading settings from /home/shruti/.config/wandb/settings
+2025-02-26 21:51:03,097 INFO    MainThread:19416 [wandb_setup.py:_flush():76] Loading settings from /home/shruti/workspaces/aerial_gym_ws/src/aerial_gym_simulator/aerial_gym/rl_training/rl_games/wandb/settings
+2025-02-26 21:51:03,097 INFO    MainThread:19416 [wandb_setup.py:_flush():76] Loading settings from environment variables: {}
+2025-02-26 21:51:03,097 INFO    MainThread:19416 [wandb_setup.py:_flush():76] Applying setup settings: {'_disable_service': False}
+2025-02-26 21:51:03,097 INFO    MainThread:19416 [wandb_setup.py:_flush():76] Inferring run settings from compute environment: {'program_relpath': 'aerial_gym/rl_training/rl_games/runner.py', 'program_abspath': '/home/shruti/workspaces/aerial_gym_ws/src/aerial_gym_simulator/aerial_gym/rl_training/rl_games/runner.py', 'program': 'runner.py'}
+2025-02-26 21:51:03,097 INFO    MainThread:19416 [wandb_setup.py:_flush():76] Applying login settings: {}
+2025-02-26 21:51:03,098 INFO    MainThread:19416 [wandb_init.py:_log_setup():521] Logging user logs to /home/shruti/workspaces/aerial_gym_ws/src/aerial_gym_simulator/aerial_gym/rl_training/rl_games/wandb/run-20250226_215103-yh9jzmtn/logs/debug.log
+2025-02-26 21:51:03,098 INFO    MainThread:19416 [wandb_init.py:_log_setup():522] Logging internal logs to /home/shruti/workspaces/aerial_gym_ws/src/aerial_gym_simulator/aerial_gym/rl_training/rl_games/wandb/run-20250226_215103-yh9jzmtn/logs/debug-internal.log
+2025-02-26 21:51:03,098 INFO    MainThread:19416 [wandb_init.py:init():561] calling init triggers
+2025-02-26 21:51:03,098 INFO    MainThread:19416 [wandb_init.py:init():568] wandb.init called with sweep_config: {}
+config: {'params': {'seed': 10, 'algo': {'name': 'a2c_continuous'}, 'model': {'name': 'continuous_a2c_logstd'}, 'load_checkpoint': False, 'network': {'name': 'actor_critic', 'separate': False, 'space': {'continuous': {'mu_activation': 'None', 'sigma_activation': 'None', 'mu_init': {'name': 'default'}, 'sigma_init': {'name': 'const_initializer', 'val': 0}, 'fixed_sigma': True}}, 'mlp': {'units': [256, 128, 64], 'd2rl': False, 'activation': 'elu', 'initializer': {'name': 'default', 'scale': 2}}}, 'config': {'env_name': 'navigation_task', 'env_config': {'num_envs': 16, 'headless': False, 'use_warp': True}, 'name': 'gen_ppo', 'reward_shaper': {'scale_value': 0.1}, 'normalize_advantage': True, 'gamma': 0.98, 'tau': 0.95, 'ppo': True, 'learning_rate': '1e-4', 'lr_schedule': 'adaptive', 'kl_threshold': 0.016, 'save_best_after': 10, 'score_to_win': 100000, 'grad_norm': 1.0, 'entropy_coef': 0, 'truncate_grads': True, 'e_clip': 0.2, 'clip_value': False, 'num_actors': 16, 'horizon_length': 32, 'minibatch_size': 2048, 'mini_epochs': 4, 'critic_coef': 2, 'normalize_input': True, 'bounds_loss_coef': 0.0001, 'max_epochs': 500, 'normalize_value': True, 'use_diagnostics': True, 'value_bootstrap': True, 'use_smooth_clamp': False, 'player': {'use_vecenv': True}}}}
+2025-02-26 21:51:03,098 INFO    MainThread:19416 [wandb_init.py:init():611] starting backend
+2025-02-26 21:51:03,098 INFO    MainThread:19416 [wandb_init.py:init():615] setting up manager
+2025-02-26 21:51:03,098 INFO    MainThread:19416 [backend.py:_multiprocessing_setup():105] multiprocessing start_methods=fork,spawn,forkserver, using: spawn
+2025-02-26 21:51:03,099 INFO    MainThread:19416 [wandb_init.py:init():623] backend started and connected
+2025-02-26 21:51:03,101 INFO    MainThread:19416 [wandb_init.py:init():715] updated telemetry
+2025-02-26 21:51:03,112 INFO    MainThread:19416 [wandb_init.py:init():748] communicating run to backend with 90.0 second timeout
+2025-02-26 21:51:03,341 INFO    MainThread:19416 [wandb_run.py:_on_init():2357] communicating current version
+2025-02-26 21:51:03,393 INFO    MainThread:19416 [wandb_run.py:_on_init():2366] got version response upgrade_message: "wandb version 0.19.7 is available!  To upgrade, please run:\n $ pip install wandb --upgrade"
+
+2025-02-26 21:51:03,394 INFO    MainThread:19416 [wandb_init.py:init():799] starting run threads in backend
+2025-02-26 21:51:05,333 INFO    MainThread:19416 [wandb_run.py:_console_start():2335] atexit reg
+2025-02-26 21:51:05,333 INFO    MainThread:19416 [wandb_run.py:_redirect():2190] redirect: wrap_raw
+2025-02-26 21:51:05,333 INFO    MainThread:19416 [wandb_run.py:_redirect():2255] Wrapping output streams.
+2025-02-26 21:51:05,333 INFO    MainThread:19416 [wandb_run.py:_redirect():2280] Redirects installed.
+2025-02-26 21:51:05,334 INFO    MainThread:19416 [wandb_init.py:init():842] run started, returning control to user process
diff --git a/aerial_gym/rl_training/rl_games/wandb/run-20250226_215103-yh9jzmtn/run-yh9jzmtn.wandb b/aerial_gym/rl_training/rl_games/wandb/run-20250226_215103-yh9jzmtn/run-yh9jzmtn.wandb
new file mode 100644
index 0000000..9717715
Binary files /dev/null and b/aerial_gym/rl_training/rl_games/wandb/run-20250226_215103-yh9jzmtn/run-yh9jzmtn.wandb differ
diff --git a/aerial_gym/rl_training/rl_games/wandb/run-20250305_134400-m9motmxm/files/code/aerial_gym/rl_training/rl_games/runner.py b/aerial_gym/rl_training/rl_games/wandb/run-20250305_134400-m9motmxm/files/code/aerial_gym/rl_training/rl_games/runner.py
new file mode 100644
index 0000000..bd45a3c
--- /dev/null
+++ b/aerial_gym/rl_training/rl_games/wandb/run-20250305_134400-m9motmxm/files/code/aerial_gym/rl_training/rl_games/runner.py
@@ -0,0 +1,331 @@
+import numpy as np
+import os
+import yaml
+
+
+import isaacgym
+
+
+from aerial_gym.registry.task_registry import task_registry
+from aerial_gym.utils.helpers import parse_arguments
+
+import gym
+from gym import spaces
+from argparse import Namespace
+
+from rl_games.common import env_configurations, vecenv
+
+import torch
+import distutils
+
+os.environ["XLA_PYTHON_CLIENT_PREALLOCATE"] = "false"
+# import warnings
+# warnings.filterwarnings("error")
+
+
+class ExtractObsWrapper(gym.Wrapper):
+    def __init__(self, env):
+        super().__init__(env)
+
+    def reset(self, **kwargs):
+        observations, *_ = super().reset(**kwargs)
+        return observations["observations"]
+
+    def step(self, action):
+        observations, rewards, terminated, truncated, infos = super().step(action)
+
+        dones = torch.where(
+            terminated | truncated,
+            torch.ones_like(terminated),
+            torch.zeros_like(terminated),
+        )
+
+        return (
+            observations["observations"],
+            rewards,
+            dones,
+            infos,
+        )
+
+
+class AERIALRLGPUEnv(vecenv.IVecEnv):
+    def __init__(self, config_name, num_actors, **kwargs):
+        self.env = env_configurations.configurations[config_name]["env_creator"](**kwargs)
+        self.env = ExtractObsWrapper(self.env)
+
+    def step(self, actions):
+        return self.env.step(actions)
+
+    def reset(self):
+        return self.env.reset()
+
+    def reset_done(self):
+        return self.env.reset_done()
+
+    def get_number_of_agents(self):
+        return self.env.get_number_of_agents()
+
+    def get_env_info(self):
+        info = {}
+        info["action_space"] = spaces.Box(
+            -np.ones(self.env.task_config.action_space_dim),
+            np.ones(self.env.task_config.action_space_dim),
+        )
+        info["observation_space"] = spaces.Box(
+            np.ones(self.env.task_config.observation_space_dim) * -np.Inf,
+            np.ones(self.env.task_config.observation_space_dim) * np.Inf,
+        )
+        print(info["action_space"], info["observation_space"])
+        return info
+
+
+env_configurations.register(
+    "position_setpoint_task",
+    {
+        "env_creator": lambda **kwargs: task_registry.make_task("position_setpoint_task", **kwargs),
+        "vecenv_type": "AERIAL-RLGPU",
+    },
+)
+
+env_configurations.register(
+    "position_setpoint_task_sim2real",
+    {
+        "env_creator": lambda **kwargs: task_registry.make_task(
+            "position_setpoint_task_sim2real", **kwargs
+        ),
+        "vecenv_type": "AERIAL-RLGPU",
+    },
+)
+
+env_configurations.register(
+    "position_setpoint_task_acceleration_sim2real",
+    {
+        "env_creator": lambda **kwargs: task_registry.make_task(
+            "position_setpoint_task_acceleration_sim2real", **kwargs
+        ),
+        "vecenv_type": "AERIAL-RLGPU",
+    },
+)
+
+env_configurations.register(
+    "navigation_task",
+    {
+        "env_creator": lambda **kwargs: task_registry.make_task("navigation_task", **kwargs),
+        "vecenv_type": "AERIAL-RLGPU",
+    },
+)
+
+env_configurations.register(
+    "position_setpoint_task_reconfigurable",
+    {
+        "env_creator": lambda **kwargs: task_registry.make_task(
+            "position_setpoint_task_reconfigurable", **kwargs
+        ),
+        "vecenv_type": "AERIAL-RLGPU",
+    },
+)
+
+env_configurations.register(
+    "position_setpoint_task_morphy",
+    {
+        "env_creator": lambda **kwargs: task_registry.make_task(
+            "position_setpoint_task_morphy", **kwargs
+        ),
+        "vecenv_type": "AERIAL-RLGPU",
+    },
+)
+
+env_configurations.register(
+    "position_setpoint_task_sim2real_end_to_end",
+    {
+        "env_creator": lambda **kwargs: task_registry.make_task(
+            "position_setpoint_task_sim2real_end_to_end", **kwargs
+        ),
+        "vecenv_type": "AERIAL-RLGPU",
+    },
+)
+
+vecenv.register(
+    "AERIAL-RLGPU",
+    lambda config_name, num_actors, **kwargs: AERIALRLGPUEnv(config_name, num_actors, **kwargs),
+)
+
+
+def get_args():
+    from isaacgym import gymutil
+
+    custom_parameters = [
+        {
+            "name": "--seed",
+            "type": int,
+            "default": 0,
+            "required": False,
+            "help": "Random seed, if larger than 0 will overwrite the value in yaml config.",
+        },
+        {
+            "name": "--tf",
+            "required": False,
+            "help": "run tensorflow runner",
+            "action": "store_true",
+        },
+        {
+            "name": "--train",
+            "required": False,
+            "help": "train network",
+            "action": "store_true",
+        },
+        {
+            "name": "--play",
+            "required": False,
+            "help": "play(test) network",
+            "action": "store_true",
+        },
+        {
+            "name": "--checkpoint",
+            "type": str,
+            "required": False,
+            "help": "path to checkpoint",
+        },
+        {
+            "name": "--file",
+            "type": str,
+            "default": "ppo_aerial_quad.yaml",
+            "required": False,
+            "help": "path to config",
+        },
+        {
+            "name": "--num_envs",
+            "type": int,
+            "default": "1024",
+            "help": "Number of environments to create. Overrides config file if provided.",
+        },
+        {
+            "name": "--sigma",
+            "type": float,
+            "required": False,
+            "help": "sets new sigma value in case if 'fixed_sigma: True' in yaml config",
+        },
+        {
+            "name": "--track",
+            "action": "store_true",
+            "help": "if toggled, this experiment will be tracked with Weights and Biases",
+        },
+        {
+            "name": "--wandb-project-name",
+            "type": str,
+            "default": "rl_games",
+            "help": "the wandb's project name",
+        },
+        {
+            "name": "--wandb-entity",
+            "type": str,
+            "default": None,
+            "help": "the entity (team) of wandb's project",
+        },
+        {
+            "name": "--task",
+            "type": str,
+            "default": "navigation_task",
+            "help": "Override task from config file if provided.",
+        },
+        {
+            "name": "--experiment_name",
+            "type": str,
+            "help": "Name of the experiment to run or load. Overrides config file if provided.",
+        },
+        {
+            "name": "--headless",
+            "type": lambda x: bool(distutils.util.strtobool(x)),
+            "default": "False",
+            "help": "Force display off at all times",
+        },
+        {
+            "name": "--horovod",
+            "action": "store_true",
+            "default": False,
+            "help": "Use horovod for multi-gpu training",
+        },
+        {
+            "name": "--rl_device",
+            "type": str,
+            "default": "cuda:0",
+            "help": "Device used by the RL algorithm, (cpu, gpu, cuda:0, cuda:1 etc..)",
+        },
+        {
+            "name": "--use_warp",
+            "type": lambda x: bool(distutils.util.strtobool(x)),
+            "default": "True",
+            "help": "Choose whether to use warp or Isaac Gym rendering pipeline.",
+        },
+    ]
+
+    # parse arguments
+    args = parse_arguments(description="RL Policy", custom_parameters=custom_parameters)
+
+    # name allignment
+    args.sim_device_id = args.compute_device_id
+    args.sim_device = args.sim_device_type
+    if args.sim_device == "cuda":
+        args.sim_device += f":{args.sim_device_id}"
+    return args
+
+
+def update_config(config, args):
+
+    if args["task"] is not None:
+        config["params"]["config"]["env_name"] = args["task"]
+    if args["experiment_name"] is not None:
+        config["params"]["config"]["name"] = args["experiment_name"]
+    config["params"]["config"]["env_config"]["headless"] = args["headless"]
+    config["params"]["config"]["env_config"]["num_envs"] = args["num_envs"]
+    config["params"]["config"]["env_config"]["use_warp"] = args["use_warp"]
+    if args["num_envs"] > 0:
+        config["params"]["config"]["num_actors"] = args["num_envs"]
+        # config['params']['config']['num_envs'] = args['num_envs']
+        config["params"]["config"]["env_config"]["num_envs"] = args["num_envs"]
+    if args["seed"] > 0:
+        config["params"]["seed"] = args["seed"]
+        config["params"]["config"]["env_config"]["seed"] = args["seed"]
+
+    config["params"]["config"]["player"] = {"use_vecenv": True}
+    return config
+
+
+if __name__ == "__main__":
+    os.makedirs("nn", exist_ok=True)
+    os.makedirs("runs", exist_ok=True)
+
+    args = vars(get_args())
+
+    config_name = args["file"]
+
+    print("Loading config: ", config_name)
+    with open(config_name, "r") as stream:
+        config = yaml.safe_load(stream)
+
+        config = update_config(config, args)
+
+        from rl_games.torch_runner import Runner
+
+        runner = Runner()
+        try:
+            runner.load(config)
+        except yaml.YAMLError as exc:
+            print(exc)
+
+    rank = int(os.getenv("LOCAL_RANK", "0"))
+    if args["track"] and rank == 0:
+        import wandb
+
+        wandb.init(
+            project=args["wandb_project_name"],
+            entity=args["wandb_entity"],
+            sync_tensorboard=True,
+            config=config,
+            monitor_gym=True,
+            save_code=True,
+        )
+    runner.run(args)
+
+    if args["track"] and rank == 0:
+        wandb.finish()
diff --git a/aerial_gym/rl_training/rl_games/wandb/run-20250305_134400-m9motmxm/files/conda-environment.yaml b/aerial_gym/rl_training/rl_games/wandb/run-20250305_134400-m9motmxm/files/conda-environment.yaml
new file mode 100644
index 0000000..b5e6902
--- /dev/null
+++ b/aerial_gym/rl_training/rl_games/wandb/run-20250305_134400-m9motmxm/files/conda-environment.yaml
@@ -0,0 +1,409 @@
+name: aerialgym
+channels:
+  - pytorch3d
+  - iopath
+  - fvcore
+  - pytorch
+  - nvidia
+  - nvidia/label/cuda-11.8.0
+  - conda-forge
+  - defaults
+  - https://repo.anaconda.com/pkgs/main
+  - https://repo.anaconda.com/pkgs/r
+dependencies:
+  - _libgcc_mutex=0.1=main
+  - _openmp_mutex=5.1=1_gnu
+  - absl-py=2.1.0=pyhd8ed1ab_0
+  - aiohttp=3.7.4.post0=py38h497a2fe_1
+  - antlr-python-runtime=4.9.3=pyhd8ed1ab_1
+  - anyio=4.5.0=pyhd8ed1ab_0
+  - appdirs=1.4.4=pyh9f0ad1d_0
+  - argon2-cffi=23.1.0=pyhd8ed1ab_0
+  - argon2-cffi-bindings=21.2.0=py38h01eb140_4
+  - arrow=1.3.0=pyhd8ed1ab_0
+  - asttokens=3.0.0=pyhd8ed1ab_0
+  - async-lru=2.0.4=pyhd8ed1ab_0
+  - async-timeout=3.0.1=py_1000
+  - attrs=24.2.0=pyh71513ae_0
+  - babel=2.16.0=pyhd8ed1ab_0
+  - backcall=0.2.0=pyh9f0ad1d_0
+  - beautifulsoup4=4.12.3=pyha770c72_0
+  - blas=1.0=mkl
+  - bleach=6.1.0=pyhd8ed1ab_0
+  - blinker=1.8.2=pyhd8ed1ab_0
+  - brotli=1.1.0=hb9d3cd8_2
+  - brotli-bin=1.1.0=hb9d3cd8_2
+  - brotli-python=1.0.9=py38hfa26641_7
+  - bullet-cpp=3.21=h43a58ef_1
+  - bzip2=1.0.8=h5eee18b_6
+  - c-ares=1.19.1=h5eee18b_0
+  - ca-certificates=2025.2.25=h06a4308_0
+  - cached-property=1.5.2=hd8ed1ab_1
+  - cached_property=1.5.2=pyha770c72_1
+  - cachetools=5.5.0=pyhd8ed1ab_0
+  - certifi=2024.8.30=pyhd8ed1ab_0
+  - cffi=1.15.0=py38h3931269_0
+  - chardet=4.0.0=py38h578d9bd_3
+  - charset-normalizer=3.4.0=pyhd8ed1ab_0
+  - click=8.1.7=unix_pyh707e725_0
+  - colorama=0.4.6=pyhd8ed1ab_0
+  - comm=0.2.2=pyhd8ed1ab_0
+  - cryptography=43.0.0=py38hdda0065_0
+  - cuda=11.8.0=0
+  - cuda-cccl=11.8.89=0
+  - cuda-command-line-tools=11.8.0=0
+  - cuda-compiler=11.8.0=0
+  - cuda-cudart=11.8.89=0
+  - cuda-cudart-dev=11.8.89=0
+  - cuda-cuobjdump=11.8.86=0
+  - cuda-cupti=11.8.87=0
+  - cuda-cuxxfilt=11.8.86=0
+  - cuda-demo-suite=11.8.86=0
+  - cuda-documentation=11.8.86=0
+  - cuda-driver-dev=11.8.89=0
+  - cuda-gdb=11.8.86=0
+  - cuda-libraries=11.8.0=0
+  - cuda-libraries-dev=11.8.0=0
+  - cuda-memcheck=11.8.86=0
+  - cuda-nsight=11.8.86=0
+  - cuda-nsight-compute=11.8.0=0
+  - cuda-nvcc=11.8.89=0
+  - cuda-nvdisasm=11.8.86=0
+  - cuda-nvml-dev=11.8.86=0
+  - cuda-nvprof=11.8.87=0
+  - cuda-nvprune=11.8.86=0
+  - cuda-nvrtc=11.8.89=0
+  - cuda-nvrtc-dev=11.8.89=0
+  - cuda-nvtx=11.8.86=0
+  - cuda-nvvp=11.8.87=0
+  - cuda-opencl=12.4.127=0
+  - cuda-profiler-api=11.8.86=0
+  - cuda-runtime=11.8.0=0
+  - cuda-sanitizer-api=11.8.86=0
+  - cuda-toolkit=11.8.0=0
+  - cuda-tools=11.8.0=0
+  - cuda-visual-tools=11.8.0=0
+  - cycler=0.12.1=pyhd8ed1ab_0
+  - dbus=1.13.18=hb2f20db_0
+  - debugpy=1.6.7=py38h6a678d5_0
+  - defusedxml=0.7.1=pyhd8ed1ab_0
+  - dill=0.3.9=pyhd8ed1ab_0
+  - docker-pycreds=0.4.0=py_0
+  - entrypoints=0.4=pyhd8ed1ab_0
+  - exceptiongroup=1.2.2=pyhd8ed1ab_0
+  - executing=2.1.0=pyhd8ed1ab_0
+  - expat=2.6.4=h5888daf_0
+  - fastcache=1.1.0=py38h7b6447c_0
+  - ffmpeg=4.3=hf484d3e_0
+  - filelock=3.13.1=py38h06a4308_0
+  - fontconfig=2.14.0=h8e229c2_0
+  - fqdn=1.5.1=pyhd8ed1ab_0
+  - freetype=2.10.4=h0708190_1
+  - fvcore=0.1.5.post20210915=py38
+  - gds-tools=1.4.0.31=0
+  - geos=3.10.2=h9c3ff4c_0
+  - giflib=5.2.2=h5eee18b_0
+  - glib=2.78.4=h6a678d5_0
+  - glib-tools=2.78.4=h6a678d5_0
+  - gmp=6.3.0=h6a678d5_0
+  - gmpy2=2.1.2=py38heeb90bb_0
+  - gnutls=3.6.15=he1e5248_0
+  - google-auth=2.35.0=pyhff2d567_0
+  - google-auth-oauthlib=1.0.0=pyhd8ed1ab_1
+  - grpcio=1.62.2=py38h6a678d5_0
+  - gst-plugins-base=1.14.1=h6a678d5_1
+  - gstreamer=1.14.1=h5eee18b_1
+  - gym-notices=0.0.8=pyhd8ed1ab_0
+  - h11=0.14.0=pyhd8ed1ab_0
+  - h2=4.1.0=pyhd8ed1ab_0
+  - hpack=4.0.0=pyh9f0ad1d_0
+  - httpcore=1.0.7=pyh29332c3_1
+  - httpx=0.27.2=pyhd8ed1ab_0
+  - hyperframe=6.0.1=pyhd8ed1ab_0
+  - icu=58.2=hf484d3e_1000
+  - idna=3.10=pyhd8ed1ab_0
+  - importlib-metadata=8.5.0=pyha770c72_0
+  - importlib_metadata=8.5.0=hd8ed1ab_1
+  - importlib_resources=6.4.5=pyhd8ed1ab_0
+  - intel-openmp=2021.4.0=h06a4308_3561
+  - iopath=0.1.9=py38
+  - ipykernel=6.29.5=pyh3099207_0
+  - ipython=8.12.2=pyh41d4057_0
+  - ipywidgets=8.1.5=pyhd8ed1ab_0
+  - isoduration=20.11.0=pyhd8ed1ab_0
+  - jbig=2.1=h7f98852_2003
+  - jedi=0.19.1=pyhd8ed1ab_0
+  - jinja2=3.1.4=pyhd8ed1ab_0
+  - jpeg=9e=h166bdaf_1
+  - json5=0.9.25=pyhd8ed1ab_0
+  - jsonpointer=3.0.0=py38h578d9bd_0
+  - jsonschema=4.23.0=pyhd8ed1ab_0
+  - jsonschema-specifications=2024.10.1=pyhd8ed1ab_0
+  - jsonschema-with-format-nongpl=4.23.0=hd8ed1ab_1
+  - jupyter=1.1.1=pyhd8ed1ab_0
+  - jupyter-lsp=2.2.5=pyhd8ed1ab_0
+  - jupyter_client=8.6.3=pyhd8ed1ab_0
+  - jupyter_console=6.6.3=pyhd8ed1ab_0
+  - jupyter_core=5.7.2=pyh31011fe_1
+  - jupyter_events=0.10.0=pyhd8ed1ab_0
+  - jupyter_server=2.14.2=pyhd8ed1ab_0
+  - jupyter_server_terminals=0.5.3=pyhd8ed1ab_0
+  - jupyterlab=4.2.5=pyhd8ed1ab_0
+  - jupyterlab_pygments=0.3.0=pyhd8ed1ab_1
+  - jupyterlab_server=2.27.3=pyhd8ed1ab_0
+  - jupyterlab_widgets=3.0.13=pyhd8ed1ab_0
+  - krb5=1.20.1=h143b758_1
+  - lame=3.100=h7b6447c_0
+  - lcms2=2.12=hddcbb42_0
+  - ld_impl_linux-64=2.40=h12ee557_0
+  - lerc=2.2.1=h9c3ff4c_0
+  - libabseil=20240116.2=cxx17_h6a678d5_0
+  - libblas=3.9.0=12_linux64_mkl
+  - libbrotlicommon=1.1.0=hb9d3cd8_2
+  - libbrotlidec=1.1.0=hb9d3cd8_2
+  - libbrotlienc=1.1.0=hb9d3cd8_2
+  - libcblas=3.9.0=12_linux64_mkl
+  - libclang=10.0.1=default_hde54327_1
+  - libcublas=11.11.3.6=0
+  - libcublas-dev=11.11.3.6=0
+  - libcufft=10.9.0.58=0
+  - libcufft-dev=10.9.0.58=0
+  - libcufile=1.9.1.3=0
+  - libcufile-dev=1.4.0.31=0
+  - libcurand=10.3.5.147=0
+  - libcurand-dev=10.3.0.86=0
+  - libcusolver=11.4.1.48=0
+  - libcusolver-dev=11.4.1.48=0
+  - libcusparse=11.7.5.86=0
+  - libcusparse-dev=11.7.5.86=0
+  - libdeflate=1.7=h7f98852_5
+  - libedit=3.1.20230828=h5eee18b_0
+  - libevent=2.1.12=hf998b51_1
+  - libexpat=2.6.4=h5888daf_0
+  - libffi=3.4.4=h6a678d5_1
+  - libgcc=14.2.0=h767d61c_2
+  - libgcc-ng=14.2.0=h69a702a_2
+  - libgfortran-ng=13.2.0=h69a702a_0
+  - libgfortran5=13.2.0=ha4646dd_0
+  - libglib=2.78.4=hdc74915_0
+  - libgomp=14.2.0=h767d61c_2
+  - libgrpc=1.62.2=h2d74bed_0
+  - libiconv=1.16=h5eee18b_3
+  - libidn2=2.3.4=h5eee18b_0
+  - libjpeg-turbo=2.0.0=h9bf148f_0
+  - liblapack=3.9.0=12_linux64_mkl
+  - libllvm10=10.0.1=he513fc3_3
+  - libnpp=11.8.0.86=0
+  - libnpp-dev=11.8.0.86=0
+  - libnvfatbin=12.4.127=0
+  - libnvjitlink=12.4.127=0
+  - libnvjpeg=11.9.0.86=0
+  - libnvjpeg-dev=11.9.0.86=0
+  - libopenblas=0.3.21=h043d6bf_0
+  - libpng=1.6.37=h21135ba_2
+  - libpq=12.20=hdbd6064_0
+  - libprotobuf=4.25.3=he621ea3_0
+  - libsodium=1.0.18=h36c2ea0_1
+  - libstdcxx=14.2.0=h8f9b012_2
+  - libstdcxx-ng=11.2.0=h1234567_1
+  - libtasn1=4.19.0=h5eee18b_0
+  - libtiff=4.3.0=hf544144_1
+  - libunistring=0.9.10=h27cfd23_0
+  - libuuid=2.38.1=h0b41bf4_0
+  - libwebp=1.2.2=h55f646e_0
+  - libwebp-base=1.2.2=h7f98852_1
+  - libxcb=1.17.0=h8a09558_0
+  - libxkbcommon=1.0.3=he3ba5ed_0
+  - libxml2=2.9.14=h74e7548_0
+  - llvm-openmp=14.0.6=h9e868ea_0
+  - lz4-c=1.9.4=h6a678d5_1
+  - markdown=3.6=pyhd8ed1ab_0
+  - markupsafe=2.1.1=py38h0a891b7_1
+  - matplotlib-base=3.7.2=py38h1128e8f_0
+  - matplotlib-inline=0.1.7=pyhd8ed1ab_0
+  - metis=5.1.0=hd0bcaf9_1007
+  - mistune=3.0.2=pyhd8ed1ab_0
+  - mkl=2021.4.0=h06a4308_640
+  - mkl-service=2.4.0=py38h7f8727e_0
+  - mkl_fft=1.3.1=py38hd3c417c_0
+  - mkl_random=1.2.2=py38h51133e4_0
+  - mpc=1.3.1=h5eee18b_0
+  - mpfr=4.2.1=h90cbb55_3
+  - mpmath=1.3.0=py38h06a4308_0
+  - multidict=6.0.2=py38h0a891b7_1
+  - munkres=1.1.4=pyh9f0ad1d_0
+  - nbclient=0.10.2=pyhd8ed1ab_0
+  - nbconvert-core=7.16.4=pyhff2d567_2
+  - nbformat=5.10.4=pyhd8ed1ab_0
+  - ncurses=6.4=h6a678d5_0
+  - nest-asyncio=1.6.0=pyhd8ed1ab_0
+  - nettle=3.7.3=hbbd107a_1
+  - ninja-base=1.12.1=hdb19cb5_0
+  - notebook=7.2.2=pyhd8ed1ab_0
+  - notebook-shim=0.2.4=pyhd8ed1ab_0
+  - nsight-compute=2022.3.0.22=0
+  - nspr=4.36=h5888daf_0
+  - nss=3.89.1=h6a678d5_0
+  - oauthlib=3.2.2=pyhd8ed1ab_0
+  - olefile=0.47=pyhd8ed1ab_0
+  - omegaconf=2.3.0=pyhd8ed1ab_0
+  - openh264=2.1.1=h4ff587b_0
+  - openjpeg=2.4.0=hb52868f_1
+  - openssl=3.4.1=h7b32b05_0
+  - overrides=7.7.0=pyhd8ed1ab_0
+  - packaging=24.2=pyhd8ed1ab_2
+  - pandas=1.4.2=py38h47df419_1
+  - pandocfilters=1.5.0=pyhd8ed1ab_0
+  - parso=0.8.4=pyhd8ed1ab_0
+  - pcre2=10.42=hebb0a14_1
+  - pexpect=4.9.0=pyhd8ed1ab_0
+  - pickleshare=0.7.5=py_1003
+  - pillow=9.4.0=py38h6a678d5_0
+  - pip=24.2=py38h06a4308_0
+  - pkgutil-resolve-name=1.3.10=pyhd8ed1ab_1
+  - platformdirs=4.3.6=pyhd8ed1ab_0
+  - plotly=5.24.1=pyhd8ed1ab_0
+  - portalocker=2.10.1=py38h578d9bd_0
+  - prometheus_client=0.21.0=pyhd8ed1ab_0
+  - prompt-toolkit=3.0.48=pyha770c72_0
+  - prompt_toolkit=3.0.48=hd8ed1ab_1
+  - pthread-stubs=0.4=hb9d3cd8_1002
+  - ptyprocess=0.7.0=pyhd3deb0d_0
+  - pure_eval=0.2.3=pyhd8ed1ab_0
+  - pyasn1=0.6.1=pyhd8ed1ab_1
+  - pyasn1-modules=0.4.1=pyhd8ed1ab_0
+  - pybullet=3.21=py38h43a58ef_1
+  - pycparser=2.22=pyhd8ed1ab_0
+  - pygments=2.18.0=pyhd8ed1ab_0
+  - pyjwt=2.9.0=pyhd8ed1ab_1
+  - pyopenssl=24.2.1=pyhd8ed1ab_2
+  - pyqt=5.15.4=py38hfa26641_0
+  - pyqt5-sip=12.9.0=py38hfa26641_0
+  - pysocks=1.7.1=pyha2e5f31_6
+  - python=3.8.20=he870216_0
+  - python-fastjsonschema=2.20.0=pyhd8ed1ab_0
+  - python-json-logger=2.0.7=pyhd8ed1ab_0
+  - python_abi=3.8=2_cp38
+  - pytorch=2.2.0=py3.8_cuda11.8_cudnn8.7.0_0
+  - pytorch-cuda=11.8=h7e8668a_6
+  - pytorch-mutex=1.0=cuda
+  - pytorch3d=0.7.8=py38_cu118_pyt220
+  - pytz=2024.2=pyhd8ed1ab_0
+  - pyu2f=0.1.5=pyhd8ed1ab_0
+  - pyyaml=6.0=py38h0a891b7_5
+  - pyzmq=25.1.2=py38h6a678d5_0
+  - qt-main=5.15.2=h327a75a_7
+  - re2=2022.04.01=h27087fc_0
+  - readline=8.2=h5eee18b_0
+  - referencing=0.35.1=pyhd8ed1ab_0
+  - requests=2.32.3=pyhd8ed1ab_0
+  - requests-oauthlib=2.0.0=pyhd8ed1ab_0
+  - rfc3339-validator=0.1.4=pyhd8ed1ab_0
+  - rfc3986-validator=0.1.1=pyh9f0ad1d_0
+  - rpds-py=0.20.0=py38h4005ec7_0
+  - rsa=4.9=pyhd8ed1ab_0
+  - send2trash=1.8.3=pyh0d859eb_0
+  - setuptools=75.1.0=py38h06a4308_0
+  - shapely=1.8.2=py38h97f7145_1
+  - sip=6.5.1=py38h709712a_2
+  - six=1.16.0=pyh6c4a22f_0
+  - sniffio=1.3.1=pyhd8ed1ab_0
+  - soupsieve=2.5=pyhd8ed1ab_1
+  - sqlite=3.45.3=h5eee18b_0
+  - stack_data=0.6.2=pyhd8ed1ab_0
+  - suitesparse=5.10.1=h9e50725_1
+  - sympy=1.5.1=py38_0
+  - tabulate=0.9.0=pyhd8ed1ab_1
+  - tbb=2021.5.0=h924138e_1
+  - tenacity=9.0.0=pyhd8ed1ab_0
+  - tensorboard=2.13.0=pyhd8ed1ab_0
+  - tensorboard-data-server=0.7.0=py38h52d8a92_1
+  - termcolor=2.4.0=pyhd8ed1ab_0
+  - terminado=0.18.1=pyh0d859eb_0
+  - tinycss2=1.4.0=pyhd8ed1ab_0
+  - tk=8.6.14=h39e8969_0
+  - toml=0.10.2=pyhd8ed1ab_0
+  - tomli=2.0.2=pyhd8ed1ab_0
+  - torchaudio=2.2.0=py38_cu118
+  - torchtriton=2.2.0=py38
+  - torchvision=0.17.0=py38_cu118
+  - tornado=6.4.1=py38hfb59056_0
+  - tqdm=4.67.1=pyhd8ed1ab_0
+  - traitlets=5.14.3=pyhd8ed1ab_0
+  - types-python-dateutil=2.9.0.20241003=pyhff2d567_0
+  - typing-extensions=4.12.2=hd8ed1ab_0
+  - typing_extensions=4.12.2=pyha770c72_0
+  - typing_utils=0.1.0=pyhd8ed1ab_0
+  - unicodedata2=15.1.0=py38h01eb140_0
+  - uri-template=1.3.0=pyhd8ed1ab_0
+  - urllib3=2.2.3=pyhd8ed1ab_0
+  - wcwidth=0.2.13=pyhd8ed1ab_0
+  - webcolors=24.8.0=pyhd8ed1ab_0
+  - webencodings=0.5.1=pyhd8ed1ab_2
+  - websocket-client=1.8.0=pyhd8ed1ab_0
+  - werkzeug=3.0.6=pyhd8ed1ab_0
+  - wheel=0.44.0=py38h06a4308_0
+  - widgetsnbextension=4.0.13=pyhd8ed1ab_0
+  - xorg-libx11=1.8.11=h4f16b4b_0
+  - xorg-libxau=1.0.12=hb9d3cd8_0
+  - xorg-libxdmcp=1.1.5=hb9d3cd8_0
+  - xorg-libxext=1.3.6=hb9d3cd8_0
+  - xz=5.6.4=h5eee18b_1
+  - yacs=0.1.8=pyhd8ed1ab_0
+  - yaml=0.2.5=h7f98852_2
+  - yarl=1.7.2=py38h0a891b7_2
+  - zeromq=4.3.5=h6a678d5_0
+  - zipp=3.21.0=pyhd8ed1ab_0
+  - zlib=1.2.13=h5eee18b_1
+  - zstandard=0.23.0=py38h2c38b39_0
+  - zstd=1.5.6=hc292b87_0
+  - pip:
+      - aerial-gym==2.0.0
+      - cloudpickle==3.1.1
+      - colorlog==6.9.0
+      - contourpy==1.1.1
+      - cython==3.0.12
+      - decorator==5.2.1
+      - farama-notifications==0.0.4
+      - faster-fifo==1.4.7
+      - fonttools==4.56.0
+      - freetype-py==2.5.1
+      - fsspec==2025.2.0
+      - gitdb==4.0.12
+      - gitpython==3.1.44
+      - gym==0.23.1
+      - gymnasium==0.29.1
+      - huggingface-hub==0.29.1
+      - imageio==2.35.1
+      - kiwisolver==1.4.7
+      - lxml==5.3.1
+      - matplotlib==3.7.5
+      - networkx==2.2
+      - ninja==1.11.1.3
+      - numpy==1.23.0
+      - opencv-python==4.11.0.86
+      - pathtools==0.1.2
+      - promise==2.3
+      - protobuf==3.20.3
+      - psutil==5.9.8
+      - pycollada==0.6
+      - pygame==2.1.0
+      - pyglet==2.1.3
+      - pyopengl==3.1.0
+      - pyparsing==3.1.4
+      - pyrender==0.1.45
+      - python-dateutil==2.9.0.post0
+      - rl-games==1.6.1
+      - sample-factory==2.1.1
+      - scipy==1.10.1
+      - sentry-sdk==2.22.0
+      - setproctitle==1.3.5
+      - shortuuid==1.0.13
+      - signal-slot-mp==1.0.5
+      - smmap==5.0.2
+      - tensorboardx==2.6.2.2
+      - threadpoolctl==3.5.0
+      - trimesh==4.6.3
+      - wandb==0.12.21
+      - warp-lang==1.0.0b5
+prefix: /home/shruti/miniconda3/envs/aerialgym
diff --git a/aerial_gym/rl_training/rl_games/wandb/run-20250305_134400-m9motmxm/files/config.yaml b/aerial_gym/rl_training/rl_games/wandb/run-20250305_134400-m9motmxm/files/config.yaml
new file mode 100644
index 0000000..0c83393
--- /dev/null
+++ b/aerial_gym/rl_training/rl_games/wandb/run-20250305_134400-m9motmxm/files/config.yaml
@@ -0,0 +1,94 @@
+wandb_version: 1
+
+params:
+  desc: null
+  value:
+    seed: 10
+    algo:
+      name: a2c_continuous
+    model:
+      name: continuous_a2c_logstd
+    load_checkpoint: false
+    network:
+      name: actor_critic
+      separate: false
+      space:
+        continuous:
+          mu_activation: None
+          sigma_activation: None
+          mu_init:
+            name: default
+          sigma_init:
+            name: const_initializer
+            val: 0
+          fixed_sigma: true
+      mlp:
+        units:
+        - 256
+        - 128
+        - 64
+        d2rl: false
+        activation: elu
+        initializer:
+          name: default
+          scale: 2
+    config:
+      env_name: navigation_task
+      env_config:
+        num_envs: 16
+        headless: false
+        use_warp: true
+      name: gen_ppo
+      reward_shaper:
+        scale_value: 0.1
+      normalize_advantage: true
+      gamma: 0.98
+      tau: 0.95
+      ppo: true
+      learning_rate: 1e-4
+      lr_schedule: adaptive
+      kl_threshold: 0.016
+      save_best_after: 10
+      score_to_win: 100000
+      grad_norm: 1.0
+      entropy_coef: 0
+      truncate_grads: true
+      e_clip: 0.2
+      clip_value: false
+      num_actors: 16
+      horizon_length: 32
+      minibatch_size: 2048
+      mini_epochs: 4
+      critic_coef: 2
+      normalize_input: true
+      bounds_loss_coef: 0.0001
+      max_epochs: 500
+      normalize_value: true
+      use_diagnostics: true
+      value_bootstrap: true
+      use_smooth_clamp: false
+      player:
+        use_vecenv: true
+_wandb:
+  desc: null
+  value:
+    code_path: code/aerial_gym/rl_training/rl_games/runner.py
+    python_version: 3.8.20
+    cli_version: 0.16.6
+    framework: torch
+    is_jupyter_run: false
+    is_kaggle_kernel: false
+    start_time: 1741200240.0
+    t:
+      1:
+      - 1
+      - 55
+      3:
+      - 16
+      - 23
+      - 35
+      4: 3.8.20
+      5: 0.16.6
+      8:
+      - 5
+      13: linux-x86_64
diff --git a/aerial_gym/rl_training/rl_games/wandb/run-20250305_134400-m9motmxm/files/diff.patch b/aerial_gym/rl_training/rl_games/wandb/run-20250305_134400-m9motmxm/files/diff.patch
new file mode 100644
index 0000000..a7ff8db
--- /dev/null
+++ b/aerial_gym/rl_training/rl_games/wandb/run-20250305_134400-m9motmxm/files/diff.patch
@@ -0,0 +1,38 @@
+diff --git a/aerial_gym/config/task_config/navigation_task_config.py b/aerial_gym/config/task_config/navigation_task_config.py
+index 7ecbda5..2f838d7 100644
+--- a/aerial_gym/config/task_config/navigation_task_config.py
++++ b/aerial_gym/config/task_config/navigation_task_config.py
+@@ -19,7 +19,7 @@ class task_config:
+     episode_len_steps = 100  # real physics time for simulation is this value multiplied by sim.dt
+ 
+     return_state_before_reset = (
+-        False  # False as usually state is returned for next episode after reset
++        True  # False as usually state is returned for next episode after reset
+     )
+     # user can set the above to true if they so desire
+ 
+diff --git a/aerial_gym/rl_training/rl_games/runner.py b/aerial_gym/rl_training/rl_games/runner.py
+index 7e8ffb4..bd45a3c 100644
+--- a/aerial_gym/rl_training/rl_games/runner.py
++++ b/aerial_gym/rl_training/rl_games/runner.py
+@@ -255,7 +255,7 @@ def get_args():
+             "name": "--use_warp",
+             "type": lambda x: bool(distutils.util.strtobool(x)),
+             "default": "True",
+-            "help": "Choose whether to use warp or Isaac Gym rendeing pipeline.",
++            "help": "Choose whether to use warp or Isaac Gym rendering pipeline.",
+         },
+     ]
+ 
+diff --git a/aerial_gym/task/__init__.py b/aerial_gym/task/__init__.py
+index 7dd966d..7975a4d 100644
+--- a/aerial_gym/task/__init__.py
++++ b/aerial_gym/task/__init__.py
+@@ -95,5 +95,5 @@ task_registry.register_task(
+ 
+ ## Uncomment this to use custom tasks
+ 
+-# from aerial_gym.task.custom_task.custom_task import CustomTask
+-# task_registry.register_task("custom_task", CustomTask, custom_task.task_config)
++#from aerial_gym.task.custom_task.custom_task import CustomTask
++#task_registry.register_task("custom_task", CustomTask, custom_task.task_config)
diff --git a/aerial_gym/rl_training/rl_games/wandb/run-20250305_134400-m9motmxm/files/output.log b/aerial_gym/rl_training/rl_games/wandb/run-20250305_134400-m9motmxm/files/output.log
new file mode 100644
index 0000000..133081b
--- /dev/null
+++ b/aerial_gym/rl_training/rl_games/wandb/run-20250305_134400-m9motmxm/files/output.log
@@ -0,0 +1,57 @@
+Started to play
+[BasePlayer] Creating vecenv:  navigation_task
+[isaacgym:gymutil.py] Unknown args:  ['--file=./ppo_aerial_quad_navigation.yaml', '--play', '--checkpoint=./runs/gen_ppo_26-16-11-42/nn/last_gen_ppo_ep_500_rew__377.14606_.pth', '--track', 'wandb-project-name=Trained_RL_Navigation', 'wandb-entity=shrutiroy03']
+[37m[7960 ms][base_task] - INFO : Setting seed: 1696985779 (base_task.py:38)
+[37m[7964 ms][navigation_task] - INFO : Building environment for navigation task. (navigation_task.py:44)
+[37m[7964 ms][navigation_task] - INFO : Sim Name: base_sim, Env Name: env_with_obstacles, Robot Name: lmf2, Controller Name: lmf2_velocity_control (navigation_task.py:45)
+[37m[7964 ms][env_manager] - INFO : Populating environments. (env_manager.py:73)
+[37m[7964 ms][env_manager] - INFO : Creating simulation instance. (env_manager.py:87)
+[37m[7964 ms][env_manager] - INFO : Instantiating IGE object. (env_manager.py:88)
+[37m[7964 ms][IsaacGymEnvManager] - INFO : Creating Isaac Gym Environment (IGE_env_manager.py:41)
+[37m[7964 ms][IsaacGymEnvManager] - INFO : Acquiring gym object (IGE_env_manager.py:73)
+[37m[7964 ms][IsaacGymEnvManager] - INFO : Acquired gym object (IGE_env_manager.py:75)
+[37m[7965 ms][IsaacGymEnvManager] - INFO : Fixing devices (IGE_env_manager.py:89)
+[37m[7965 ms][IsaacGymEnvManager] - INFO : Using GPU pipeline for simulation. (IGE_env_manager.py:102)
+[37m[7965 ms][IsaacGymEnvManager] - INFO : Sim Device type: cuda, Sim Device ID: 0 (IGE_env_manager.py:105)
+[37m[7965 ms][IsaacGymEnvManager] - INFO : Graphics Device ID: 0 (IGE_env_manager.py:119)
+[37m[7965 ms][IsaacGymEnvManager] - INFO : Creating Isaac Gym Simulation Object (IGE_env_manager.py:120)
+[33m[7965 ms][IsaacGymEnvManager] - WARNING : If you have set the CUDA_VISIBLE_DEVICES environment variable, please ensure that you set it
+[33mto a particular one that works for your system to use the viewer or Isaac Gym cameras.
+[33mIf you want to run parallel simulations on multiple GPUs with camera sensors,
+[33mplease disable Isaac Gym and use warp (by setting use_warp=True), set the viewer to headless. (IGE_env_manager.py:127)
+[33m[7965 ms][IsaacGymEnvManager] - WARNING : If you see a segfault in the next lines, it is because of the discrepancy between the CUDA device and the graphics device.
+[33mPlease ensure that the CUDA device and the graphics device are the same. (IGE_env_manager.py:132)
+[37m[9021 ms][IsaacGymEnvManager] - INFO : Created Isaac Gym Simulation Object (IGE_env_manager.py:136)
+[37m[9022 ms][IsaacGymEnvManager] - INFO : Created Isaac Gym Environment (IGE_env_manager.py:43)
+[37m[9214 ms][env_manager] - INFO : IGE object instantiated. (env_manager.py:109)
+[37m[9214 ms][env_manager] - INFO : Creating warp environment. (env_manager.py:112)
+[37m[9214 ms][env_manager] - INFO : Warp environment created. (env_manager.py:114)
+[37m[9214 ms][env_manager] - INFO : Creating robot manager. (env_manager.py:118)
+[37m[9214 ms][BaseRobot] - INFO : [DONE] Initializing controller (base_robot.py:26)
+[37m[9214 ms][BaseRobot] - INFO : Initializing controller lmf2_velocity_control (base_robot.py:29)
+[33m[9214 ms][base_multirotor] - WARNING : Creating 16 multirotors. (base_multirotor.py:32)
+[37m[9214 ms][env_manager] - INFO : [DONE] Creating robot manager. (env_manager.py:123)
+[37m[9214 ms][env_manager] - INFO : [DONE] Creating simulation instance. (env_manager.py:125)
+[37m[9215 ms][asset_loader] - INFO : Loading asset: model.urdf for the first time. Next use of this asset will be via the asset buffer. (asset_loader.py:71)
+[37m[9216 ms][asset_loader] - INFO : Loading asset: panel.urdf for the first time. Next use of this asset will be via the asset buffer. (asset_loader.py:71)
+[37m[9220 ms][asset_loader] - INFO : Loading asset: 0_5_x_0_5_wall.urdf for the first time. Next use of this asset will be via the asset buffer. (asset_loader.py:71)
+[37m[9222 ms][asset_loader] - INFO : Loading asset: small_cube.urdf for the first time. Next use of this asset will be via the asset buffer. (asset_loader.py:71)
+[37m[9223 ms][asset_loader] - INFO : Loading asset: cuboidal_rod.urdf for the first time. Next use of this asset will be via the asset buffer. (asset_loader.py:71)
+[37m[9224 ms][asset_loader] - INFO : Loading asset: left_wall.urdf for the first time. Next use of this asset will be via the asset buffer. (asset_loader.py:71)
+[37m[9225 ms][asset_loader] - INFO : Loading asset: right_wall.urdf for the first time. Next use of this asset will be via the asset buffer. (asset_loader.py:71)
+[37m[9226 ms][asset_loader] - INFO : Loading asset: back_wall.urdf for the first time. Next use of this asset will be via the asset buffer. (asset_loader.py:71)
+[37m[9228 ms][asset_loader] - INFO : Loading asset: front_wall.urdf for the first time. Next use of this asset will be via the asset buffer. (asset_loader.py:71)
+[37m[9229 ms][asset_loader] - INFO : Loading asset: bottom_wall.urdf for the first time. Next use of this asset will be via the asset buffer. (asset_loader.py:71)
+[37m[9230 ms][asset_loader] - INFO : Loading asset: top_wall.urdf for the first time. Next use of this asset will be via the asset buffer. (asset_loader.py:71)
+[37m[9231 ms][asset_loader] - INFO : Loading asset: 1_x_1_wall.urdf for the first time. Next use of this asset will be via the asset buffer. (asset_loader.py:71)
+[37m[9234 ms][env_manager] - INFO : Populating environment 0 (env_manager.py:179)
+[33m[9427 ms][robot_manager] - WARNING : 
+[33mRobot mass: 1.2400000467896461,
+[33mInertia: tensor([[0.0134, 0.0000, 0.0000],
+[33m        [0.0000, 0.0144, 0.0000],
+[33m        [0.0000, 0.0000, 0.0138]], device='cuda:0'),
+[33mRobot COM: tensor([[0., 0., 0., 1.]], device='cuda:0') (robot_manager.py:427)
+[33m[9427 ms][robot_manager] - WARNING : Calculated robot mass and inertia for this robot. This code assumes that your robot is the same across environments. (robot_manager.py:430)
+[31m[9427 ms][robot_manager] - CRITICAL : If your robot differs across environments you need to perform this computation for each different robot here. (robot_manager.py:433)
+[37m[9456 ms][env_manager] - INFO : [DONE] Populating environments. (env_manager.py:75)
+[33m[9468 ms][IsaacGymEnvManager] - WARNING : Headless: False (IGE_env_manager.py:424)
diff --git a/aerial_gym/rl_training/rl_games/wandb/run-20250305_134400-m9motmxm/files/requirements.txt b/aerial_gym/rl_training/rl_games/wandb/run-20250305_134400-m9motmxm/files/requirements.txt
new file mode 100644
index 0000000..a906a9d
--- /dev/null
+++ b/aerial_gym/rl_training/rl_games/wandb/run-20250305_134400-m9motmxm/files/requirements.txt
@@ -0,0 +1,264 @@
+Brotli==1.0.9
+Cython==3.0.12
+Farama-Notifications==0.0.4
+GitPython==3.1.43
+GitPython==3.1.44
+Jinja2==3.1.4
+Markdown==3.6
+MarkupSafe==2.1.1
+Pillow==9.4.0
+PyJWT==2.9.0
+PyOpenGL==3.1.0
+PyQt5-sip==12.9.0
+PyQt5==5.15.4
+PySocks==1.7.1
+PyYAML==6.0
+Pygments==2.18.0
+Send2Trash==1.8.3
+Shapely==1.8.2
+Werkzeug==3.0.6
+absl-py==2.1.0
+aerial_gym==2.0.0
+aiohttp==3.7.4.post0
+antlr4-python3-runtime==4.9.3
+anyio==4.5.0
+appdirs==1.4.4
+argon2-cffi-bindings==21.2.0
+argon2-cffi==23.1.0
+arrow==1.3.0
+asttokens==3.0.0
+async-lru==2.0.4
+async-timeout==3.0.1
+attrs==24.2.0
+autocommand==2.2.2
+babel==2.16.0
+backcall==0.2.0
+backports.tarfile==1.2.0
+beautifulsoup4==4.12.3
+bleach==6.1.0
+blinker==1.8.2
+cached-property==1.5.2
+cachetools==5.5.0
+certifi==2024.8.30
+cffi==1.15.0
+chardet==4.0.0
+charset-normalizer==3.4.0
+click==8.1.7
+cloudpickle==3.1.0
+cloudpickle==3.1.1
+colorama==0.4.6
+colorlog==6.9.0
+comm==0.2.2
+contourpy==1.0.2
+contourpy==1.1.1
+cryptography==43.0.0
+cycler==0.12.1
+debugpy==1.6.7
+decorator==5.1.1
+decorator==5.2.1
+defusedxml==0.7.1
+dill==0.3.9
+docker-pycreds==0.4.0
+entrypoints==0.4
+exceptiongroup==1.2.2
+executing==2.1.0
+fastcache==1.1.0
+faster-fifo==1.4.7
+fastjsonschema==2.20.0
+filelock==3.13.1
+fonttools==4.53.1
+fonttools==4.56.0
+fqdn==1.5.1
+freetype-py==2.5.1
+fsspec==2025.2.0
+fvcore==0.1.5.post20210915
+gitdb==4.0.11
+gitdb==4.0.12
+gmpy2==2.1.2
+google-auth-oauthlib==1.0.0
+google-auth==2.35.0
+grpcio==1.62.2
+gym-notices==0.0.8
+gym==0.23.1
+gym==0.26.1
+gymnasium==0.29.1
+h11==0.14.0
+h2==4.1.0
+hpack==4.0.0
+httpcore==1.0.7
+httpx==0.27.2
+huggingface-hub==0.29.1
+hyperframe==6.0.1
+idna==3.10
+imageio==2.35.1
+importlib_metadata==8.0.0
+importlib_metadata==8.5.0
+importlib_resources==6.4.0
+importlib_resources==6.4.5
+inflect==7.3.1
+iopath==0.1.9
+ipykernel==6.29.5
+ipython==8.12.2
+ipywidgets==8.1.5
+isaacgym==1.0rc4
+isoduration==20.11.0
+jaraco.collections==5.1.0
+jaraco.context==5.3.0
+jaraco.functools==4.0.1
+jaraco.text==3.12.1
+jedi==0.19.1
+json5==0.9.25
+jsonpointer==3.0.0
+jsonschema-specifications==2024.10.1
+jsonschema==4.23.0
+jupyter-console==6.6.3
+jupyter-events==0.10.0
+jupyter-lsp==2.2.5
+jupyter==1.1.1
+jupyter_client==8.6.3
+jupyter_core==5.7.2
+jupyter_server==2.14.2
+jupyter_server_terminals==0.5.3
+jupyterlab==4.2.5
+jupyterlab_pygments==0.3.0
+jupyterlab_server==2.27.3
+jupyterlab_widgets==3.0.13
+kiwisolver==1.4.2
+kiwisolver==1.4.7
+lxml==5.3.1
+matplotlib-inline==0.1.7
+matplotlib==3.7.2
+matplotlib==3.7.5
+mistune==3.0.2
+mkl-fft==1.3.1
+mkl-random==1.2.2
+mkl-service==2.4.0
+more-itertools==10.3.0
+mpmath==1.3.0
+multidict==6.0.2
+munkres==1.1.4
+nbclient==0.10.2
+nbconvert==7.16.4
+nbformat==5.10.4
+nest_asyncio==1.6.0
+networkx==2.2
+networkx==3.1
+ninja==1.11.1.3
+notebook==7.2.2
+notebook_shim==0.2.4
+numpy==1.23.0
+oauthlib==3.2.2
+olefile==0.47
+omegaconf==2.3.0
+opencv-python==4.11.0.86
+overrides==7.7.0
+packaging==24.1
+packaging==24.2
+pandas==1.4.2
+pandocfilters==1.5.0
+parso==0.8.4
+pathtools==0.1.2
+pexpect==4.9.0
+pickleshare==0.7.5
+pip==24.2
+pkgutil_resolve_name==1.3.10
+platformdirs==4.2.2
+platformdirs==4.3.6
+plotly==5.24.1
+portalocker==2.10.1
+prometheus_client==0.21.0
+promise==2.3
+prompt_toolkit==3.0.48
+protobuf==3.20.3
+protobuf==4.25.3
+psutil==5.9.8
+psutil==6.0.0
+ptyprocess==0.7.0
+pure_eval==0.2.3
+pyOpenSSL==24.2.1
+pyasn1==0.6.1
+pyasn1_modules==0.4.1
+pybullet==3.2.0
+pycollada==0.6
+pycparser==2.22
+pygame==2.1.0
+pyglet==2.1.3
+pyparsing==3.0.9
+pyparsing==3.1.4
+pyrender==0.1.45
+python-dateutil==2.9.0
+python-dateutil==2.9.0.post0
+python-json-logger==2.0.7
+pytorch3d==0.7.8
+pytz==2024.2
+pyu2f==0.1.5
+pyzmq==25.1.2
+referencing==0.35.1
+requests-oauthlib==2.0.0
+requests==2.32.3
+rfc3339-validator==0.1.4
+rfc3986-validator==0.1.1
+rl_games==1.6.1
+rpds-py==0.20.0
+rsa==4.9
+sample-factory==2.1.1
+scipy==1.10.1
+sentry-sdk==2.19.2
+sentry-sdk==2.22.0
+setproctitle==1.3.3
+setproctitle==1.3.5
+setuptools==75.1.0
+shortuuid==1.0.13
+signal-slot-mp==1.0.5
+sip==6.5.1
+six==1.16.0
+smmap==5.0.0
+smmap==5.0.2
+sniffio==1.3.1
+soupsieve==2.5
+stack-data==0.6.2
+sympy==1.5.1
+tabulate==0.9.0
+tenacity==9.0.0
+tensorboard==2.13.0
+tensorboardX==2.6.2.2
+tensorboard_data_server==0.7.0
+termcolor==2.4.0
+terminado==0.18.1
+threadpoolctl==3.5.0
+tinycss2==1.4.0
+toml==0.10.2
+tomli==2.0.1
+tomli==2.0.2
+torch==2.2.0
+torchaudio==2.2.0
+torchvision==0.17.0
+tornado==6.4.1
+tqdm==4.67.1
+traitlets==5.14.3
+trimesh==4.6.3
+triton==2.2.0
+typeguard==4.3.0
+types-python-dateutil==2.9.0.20241003
+typing-utils==0.1.0
+typing_extensions==4.12.2
+typing_extensions==4.12.2
+unicodedata2==15.1.0
+urdfpy==0.0.22
+uri-template==1.3.0
+urllib3==2.2.3
+wandb==0.12.21
+wandb==0.16.6
+warp-lang==1.0.0b5
+wcwidth==0.2.13
+webcolors==24.8.0
+webencodings==0.5.1
+websocket-client==1.8.0
+wheel==0.43.0
+wheel==0.44.0
+widgetsnbextension==4.0.13
+yacs==0.1.8
+yarl==1.7.2
+zipp==3.19.2
+zipp==3.21.0
+zstandard==0.23.0
\ No newline at end of file
diff --git a/aerial_gym/rl_training/rl_games/wandb/run-20250305_134400-m9motmxm/files/wandb-metadata.json b/aerial_gym/rl_training/rl_games/wandb/run-20250305_134400-m9motmxm/files/wandb-metadata.json
new file mode 100644
index 0000000..219dea4
--- /dev/null
+++ b/aerial_gym/rl_training/rl_games/wandb/run-20250305_134400-m9motmxm/files/wandb-metadata.json
@@ -0,0 +1,156 @@
+{
+    "os": "Linux-6.5.0-44-generic-x86_64-with-glibc2.17",
+    "python": "3.8.20",
+    "heartbeatAt": "2025-03-05T18:44:01.034497",
+    "startedAt": "2025-03-05T18:44:00.678627",
+    "docker": null,
+    "cuda": null,
+    "args": [
+        "--file=./ppo_aerial_quad_navigation.yaml",
+        "--num_envs=16",
+        "--play",
+        "--checkpoint=./runs/gen_ppo_26-16-11-42/nn/last_gen_ppo_ep_500_rew__377.14606_.pth",
+        "--track",
+        "wandb-project-name=Trained_RL_Navigation",
+        "wandb-entity=shrutiroy03"
+    ],
+    "state": "running",
+    "program": "runner.py",
+    "codePathLocal": "runner.py",
+    "codePath": "aerial_gym/rl_training/rl_games/runner.py",
+    "git": {
+        "remote": "https://github.com/ntnu-arl/aerial_gym_simulator.git",
+        "commit": "85114e7514ed0f3f8cfecfa23c40dad106c528a1"
+    },
+    "email": null,
+    "root": "/home/shruti/workspaces/aerial_gym_ws/src/aerial_gym_simulator",
+    "host": "saferoboticslab-ASUS-TUF-Gaming-F15-FX507ZM-FX507ZM",
+    "username": "shruti",
+    "executable": "/home/shruti/miniconda3/envs/aerialgym/bin/python3",
+    "cpu_count": 14,
+    "cpu_count_logical": 20,
+    "cpu_freq": {
+        "current": 1642.77765,
+        "min": 400.0,
+        "max": 4180.0
+    },
+    "cpu_freq_per_core": [
+        {
+            "current": 2767.052,
+            "min": 400.0,
+            "max": 4600.0
+        },
+        {
+            "current": 3981.081,
+            "min": 400.0,
+            "max": 4600.0
+        },
+        {
+            "current": 2759.478,
+            "min": 400.0,
+            "max": 4600.0
+        },
+        {
+            "current": 400.0,
+            "min": 400.0,
+            "max": 4600.0
+        },
+        {
+            "current": 3070.582,
+            "min": 400.0,
+            "max": 4700.0
+        },
+        {
+            "current": 3125.808,
+            "min": 400.0,
+            "max": 4700.0
+        },
+        {
+            "current": 2754.749,
+            "min": 400.0,
+            "max": 4700.0
+        },
+        {
+            "current": 2184.731,
+            "min": 400.0,
+            "max": 4700.0
+        },
+        {
+            "current": 2875.193,
+            "min": 400.0,
+            "max": 4600.0
+        },
+        {
+            "current": 400.0,
+            "min": 400.0,
+            "max": 4600.0
+        },
+        {
+            "current": 2565.825,
+            "min": 400.0,
+            "max": 4600.0
+        },
+        {
+            "current": 622.868,
+            "min": 400.0,
+            "max": 4600.0
+        },
+        {
+            "current": 2548.088,
+            "min": 400.0,
+            "max": 3500.0
+        },
+        {
+            "current": 400.143,
+            "min": 400.0,
+            "max": 3500.0
+        },
+        {
+            "current": 400.0,
+            "min": 400.0,
+            "max": 3500.0
+        },
+        {
+            "current": 400.0,
+            "min": 400.0,
+            "max": 3500.0
+        },
+        {
+            "current": 399.955,
+            "min": 400.0,
+            "max": 3500.0
+        },
+        {
+            "current": 400.0,
+            "min": 400.0,
+            "max": 3500.0
+        },
+        {
+            "current": 400.0,
+            "min": 400.0,
+            "max": 3500.0
+        },
+        {
+            "current": 400.0,
+            "min": 400.0,
+            "max": 3500.0
+        }
+    ],
+    "disk": {
+        "/": {
+            "total": 937.3305015563965,
+            "used": 231.72966384887695
+        }
+    },
+    "gpu": "NVIDIA GeForce RTX 3060 Laptop GPU",
+    "gpu_count": 1,
+    "gpu_devices": [
+        {
+            "name": "NVIDIA GeForce RTX 3060 Laptop GPU",
+            "memory_total": 6442450944
+        }
+    ],
+    "memory": {
+        "total": 15.238018035888672
+    }
+}
diff --git a/aerial_gym/rl_training/rl_games/wandb/run-20250305_134400-m9motmxm/logs/debug-internal.log b/aerial_gym/rl_training/rl_games/wandb/run-20250305_134400-m9motmxm/logs/debug-internal.log
new file mode 100644
index 0000000..e78efc7
--- /dev/null
+++ b/aerial_gym/rl_training/rl_games/wandb/run-20250305_134400-m9motmxm/logs/debug-internal.log
@@ -0,0 +1,66 @@
+2025-03-05 13:44:00,683 INFO    StreamThr :6290 [internal.py:wandb_internal():86] W&B internal server running at pid: 6290, started at: 2025-03-05 13:44:00.683380
+2025-03-05 13:44:00,685 DEBUG   HandlerThread:6290 [handler.py:handle_request():146] handle_request: status
+2025-03-05 13:44:00,687 INFO    WriterThread:6290 [datastore.py:open_for_write():87] open: /home/shruti/workspaces/aerial_gym_ws/src/aerial_gym_simulator/aerial_gym/rl_training/rl_games/wandb/run-20250305_134400-m9motmxm/run-m9motmxm.wandb
+2025-03-05 13:44:00,688 DEBUG   SenderThread:6290 [sender.py:send():379] send: header
+2025-03-05 13:44:00,703 DEBUG   SenderThread:6290 [sender.py:send():379] send: run
+2025-03-05 13:44:00,950 INFO    SenderThread:6290 [dir_watcher.py:__init__():211] watching files in: /home/shruti/workspaces/aerial_gym_ws/src/aerial_gym_simulator/aerial_gym/rl_training/rl_games/wandb/run-20250305_134400-m9motmxm/files
+2025-03-05 13:44:00,950 INFO    SenderThread:6290 [sender.py:_start_run_threads():1124] run started: m9motmxm with start time 1741200240.683583
+2025-03-05 13:44:00,956 DEBUG   HandlerThread:6290 [handler.py:handle_request():146] handle_request: check_version
+2025-03-05 13:44:00,956 DEBUG   SenderThread:6290 [sender.py:send_request():406] send_request: check_version
+2025-03-05 13:44:01,011 DEBUG   HandlerThread:6290 [handler.py:handle_request():146] handle_request: run_start
+2025-03-05 13:44:01,019 DEBUG   HandlerThread:6290 [system_info.py:__init__():26] System info init
+2025-03-05 13:44:01,019 DEBUG   HandlerThread:6290 [system_info.py:__init__():41] System info init done
+2025-03-05 13:44:01,019 INFO    HandlerThread:6290 [system_monitor.py:start():194] Starting system monitor
+2025-03-05 13:44:01,020 INFO    SystemMonitor:6290 [system_monitor.py:_start():158] Starting system asset monitoring threads
+2025-03-05 13:44:01,020 INFO    HandlerThread:6290 [system_monitor.py:probe():214] Collecting system info
+2025-03-05 13:44:01,020 INFO    SystemMonitor:6290 [interfaces.py:start():190] Started cpu monitoring
+2025-03-05 13:44:01,021 INFO    SystemMonitor:6290 [interfaces.py:start():190] Started disk monitoring
+2025-03-05 13:44:01,023 INFO    SystemMonitor:6290 [interfaces.py:start():190] Started gpu monitoring
+2025-03-05 13:44:01,024 INFO    SystemMonitor:6290 [interfaces.py:start():190] Started memory monitoring
+2025-03-05 13:44:01,024 INFO    SystemMonitor:6290 [interfaces.py:start():190] Started network monitoring
+2025-03-05 13:44:01,034 DEBUG   HandlerThread:6290 [system_info.py:probe():150] Probing system
+2025-03-05 13:44:01,038 DEBUG   HandlerThread:6290 [system_info.py:_probe_git():135] Probing git
+2025-03-05 13:44:01,046 DEBUG   HandlerThread:6290 [system_info.py:_probe_git():143] Probing git done
+2025-03-05 13:44:01,046 DEBUG   HandlerThread:6290 [system_info.py:probe():198] Probing system done
+2025-03-05 13:44:01,046 DEBUG   HandlerThread:6290 [system_monitor.py:probe():223] {'os': 'Linux-6.5.0-44-generic-x86_64-with-glibc2.17', 'python': '3.8.20', 'heartbeatAt': '2025-03-05T18:44:01.034497', 'startedAt': '2025-03-05T18:44:00.678627', 'docker': None, 'cuda': None, 'args': ('--file=./ppo_aerial_quad_navigation.yaml', '--num_envs=16', '--play', '--checkpoint=./runs/gen_ppo_26-16-11-42/nn/last_gen_ppo_ep_500_rew__377.14606_.pth', '--track', 'wandb-project-name=Trained_RL_Navigation', 'wandb-entity=shrutiroy03'), 'state': 'running', 'program': 'runner.py', 'codePathLocal': 'runner.py', 'codePath': 'aerial_gym/rl_training/rl_games/runner.py', 'git': {'remote': 'https://github.com/ntnu-arl/aerial_gym_simulator.git', 'commit': '85114e7514ed0f3f8cfecfa23c40dad106c528a1'}, 'email': None, 'root': '/home/shruti/workspaces/aerial_gym_ws/src/aerial_gym_simulator', 'host': 'saferoboticslab-ASUS-TUF-Gaming-F15-FX507ZM-FX507ZM', 'username': 'shruti', 'executable': '/home/shruti/miniconda3/envs/aerialgym/bin/python3', 'cpu_count': 14, 'cpu_count_logical': 20, 'cpu_freq': {'current': 1642.77765, 'min': 400.0, 'max': 4180.0}, 'cpu_freq_per_core': [{'current': 2767.052, 'min': 400.0, 'max': 4600.0}, {'current': 3981.081, 'min': 400.0, 'max': 4600.0}, {'current': 2759.478, 'min': 400.0, 'max': 4600.0}, {'current': 400.0, 'min': 400.0, 'max': 4600.0}, {'current': 3070.582, 'min': 400.0, 'max': 4700.0}, {'current': 3125.808, 'min': 400.0, 'max': 4700.0}, {'current': 2754.749, 'min': 400.0, 'max': 4700.0}, {'current': 2184.731, 'min': 400.0, 'max': 4700.0}, {'current': 2875.193, 'min': 400.0, 'max': 4600.0}, {'current': 400.0, 'min': 400.0, 'max': 4600.0}, {'current': 2565.825, 'min': 400.0, 'max': 4600.0}, {'current': 622.868, 'min': 400.0, 'max': 4600.0}, {'current': 2548.088, 'min': 400.0, 'max': 3500.0}, {'current': 400.143, 'min': 400.0, 'max': 3500.0}, {'current': 400.0, 'min': 400.0, 'max': 3500.0}, {'current': 400.0, 'min': 400.0, 'max': 3500.0}, {'current': 399.955, 'min': 400.0, 'max': 3500.0}, {'current': 400.0, 'min': 400.0, 'max': 3500.0}, {'current': 400.0, 'min': 400.0, 'max': 3500.0}, {'current': 400.0, 'min': 400.0, 'max': 3500.0}], 'disk': {'/': {'total': 937.3305015563965, 'used': 231.72966384887695}}, 'gpu': 'NVIDIA GeForce RTX 3060 Laptop GPU', 'gpu_count': 1, 'gpu_devices': [{'name': 'NVIDIA GeForce RTX 3060 Laptop GPU', 'memory_total': 6442450944}], 'memory': {'total': 15.238018035888672}}
+2025-03-05 13:44:01,046 INFO    HandlerThread:6290 [system_monitor.py:probe():224] Finished collecting system info
+2025-03-05 13:44:01,046 INFO    HandlerThread:6290 [system_monitor.py:probe():227] Publishing system info
+2025-03-05 13:44:01,046 DEBUG   HandlerThread:6290 [system_info.py:_save_conda():207] Saving list of conda packages installed into the current environment
+2025-03-05 13:44:01,952 INFO    Thread-12 :6290 [dir_watcher.py:_on_file_created():271] file/dir created: /home/shruti/workspaces/aerial_gym_ws/src/aerial_gym_simulator/aerial_gym/rl_training/rl_games/wandb/run-20250305_134400-m9motmxm/files/conda-environment.yaml
+2025-03-05 13:44:03,170 DEBUG   HandlerThread:6290 [system_info.py:_save_conda():222] Saving conda packages done
+2025-03-05 13:44:03,170 DEBUG   HandlerThread:6290 [system_info.py:_save_code():44] Saving code
+2025-03-05 13:44:03,174 DEBUG   HandlerThread:6290 [system_info.py:_save_code():65] Saving code done
+2025-03-05 13:44:03,174 DEBUG   HandlerThread:6290 [system_info.py:_save_patches():82] Saving git patches
+2025-03-05 13:44:03,217 DEBUG   HandlerThread:6290 [system_info.py:_save_patches():124] Saving git patches done
+2025-03-05 13:44:03,217 INFO    HandlerThread:6290 [system_monitor.py:probe():229] Finished publishing system info
+2025-03-05 13:44:03,220 DEBUG   SenderThread:6290 [sender.py:send():379] send: files
+2025-03-05 13:44:03,220 INFO    SenderThread:6290 [sender.py:_save_file():1390] saving file wandb-metadata.json with policy now
+2025-03-05 13:44:03,221 INFO    SenderThread:6290 [sender.py:_save_file():1390] saving file code/aerial_gym/rl_training/rl_games/runner.py with policy now
+2025-03-05 13:44:03,221 INFO    SenderThread:6290 [sender.py:_save_file():1390] saving file diff.patch with policy now
+2025-03-05 13:44:03,372 DEBUG   HandlerThread:6290 [handler.py:handle_request():146] handle_request: python_packages
+2025-03-05 13:44:03,372 DEBUG   HandlerThread:6290 [handler.py:handle_request():146] handle_request: stop_status
+2025-03-05 13:44:03,373 DEBUG   SenderThread:6290 [sender.py:send_request():406] send_request: python_packages
+2025-03-05 13:44:03,373 DEBUG   SenderThread:6290 [sender.py:send_request():406] send_request: stop_status
+2025-03-05 13:44:03,376 DEBUG   HandlerThread:6290 [handler.py:handle_request():146] handle_request: internal_messages
+2025-03-05 13:44:03,498 DEBUG   SenderThread:6290 [sender.py:send():379] send: telemetry
+2025-03-05 13:44:03,558 INFO    wandb-upload_1:6290 [upload_job.py:push():131] Uploaded file /tmp/tmpl6p5q8axwandb/olynagdc-code/aerial_gym/rl_training/rl_games/runner.py
+2025-03-05 13:44:03,558 INFO    wandb-upload_0:6290 [upload_job.py:push():131] Uploaded file /tmp/tmpl6p5q8axwandb/xsgmef1l-wandb-metadata.json
+2025-03-05 13:44:03,559 INFO    wandb-upload_2:6290 [upload_job.py:push():131] Uploaded file /tmp/tmpl6p5q8axwandb/odd6f8vs-diff.patch
+2025-03-05 13:44:03,951 INFO    Thread-12 :6290 [dir_watcher.py:_on_file_modified():288] file/dir modified: /home/shruti/workspaces/aerial_gym_ws/src/aerial_gym_simulator/aerial_gym/rl_training/rl_games/wandb/run-20250305_134400-m9motmxm/files/conda-environment.yaml
+2025-03-05 13:44:03,952 INFO    Thread-12 :6290 [dir_watcher.py:_on_file_created():271] file/dir created: /home/shruti/workspaces/aerial_gym_ws/src/aerial_gym_simulator/aerial_gym/rl_training/rl_games/wandb/run-20250305_134400-m9motmxm/files/requirements.txt
+2025-03-05 13:44:03,952 INFO    Thread-12 :6290 [dir_watcher.py:_on_file_created():271] file/dir created: /home/shruti/workspaces/aerial_gym_ws/src/aerial_gym_simulator/aerial_gym/rl_training/rl_games/wandb/run-20250305_134400-m9motmxm/files/wandb-metadata.json
+2025-03-05 13:44:03,952 INFO    Thread-12 :6290 [dir_watcher.py:_on_file_created():271] file/dir created: /home/shruti/workspaces/aerial_gym_ws/src/aerial_gym_simulator/aerial_gym/rl_training/rl_games/wandb/run-20250305_134400-m9motmxm/files/output.log
+2025-03-05 13:44:03,952 INFO    Thread-12 :6290 [dir_watcher.py:_on_file_created():271] file/dir created: /home/shruti/workspaces/aerial_gym_ws/src/aerial_gym_simulator/aerial_gym/rl_training/rl_games/wandb/run-20250305_134400-m9motmxm/files/diff.patch
+2025-03-05 13:44:03,952 INFO    Thread-12 :6290 [dir_watcher.py:_on_file_created():271] file/dir created: /home/shruti/workspaces/aerial_gym_ws/src/aerial_gym_simulator/aerial_gym/rl_training/rl_games/wandb/run-20250305_134400-m9motmxm/files/code/aerial_gym/rl_training/rl_games/runner.py
+2025-03-05 13:44:03,952 INFO    Thread-12 :6290 [dir_watcher.py:_on_file_created():271] file/dir created: /home/shruti/workspaces/aerial_gym_ws/src/aerial_gym_simulator/aerial_gym/rl_training/rl_games/wandb/run-20250305_134400-m9motmxm/files/code/aerial_gym/rl_training/rl_games
+2025-03-05 13:44:03,952 INFO    Thread-12 :6290 [dir_watcher.py:_on_file_created():271] file/dir created: /home/shruti/workspaces/aerial_gym_ws/src/aerial_gym_simulator/aerial_gym/rl_training/rl_games/wandb/run-20250305_134400-m9motmxm/files/code/aerial_gym/rl_training
+2025-03-05 13:44:03,952 INFO    Thread-12 :6290 [dir_watcher.py:_on_file_created():271] file/dir created: /home/shruti/workspaces/aerial_gym_ws/src/aerial_gym_simulator/aerial_gym/rl_training/rl_games/wandb/run-20250305_134400-m9motmxm/files/code
+2025-03-05 13:44:03,952 INFO    Thread-12 :6290 [dir_watcher.py:_on_file_created():271] file/dir created: /home/shruti/workspaces/aerial_gym_ws/src/aerial_gym_simulator/aerial_gym/rl_training/rl_games/wandb/run-20250305_134400-m9motmxm/files/code/aerial_gym
+2025-03-05 13:44:05,883 DEBUG   HandlerThread:6290 [handler.py:handle_request():146] handle_request: status_report
+2025-03-05 13:44:05,952 INFO    Thread-12 :6290 [dir_watcher.py:_on_file_modified():288] file/dir modified: /home/shruti/workspaces/aerial_gym_ws/src/aerial_gym_simulator/aerial_gym/rl_training/rl_games/wandb/run-20250305_134400-m9motmxm/files/output.log
+2025-03-05 13:44:07,045 INFO    cpu       :6290 [interfaces.py:monitor():140] Process cpu has exited.
+2025-03-05 13:44:07,046 DEBUG   SystemMonitor:6290 [system_monitor.py:_start():172] Starting system metrics aggregation loop
+2025-03-05 13:44:07,046 DEBUG   SystemMonitor:6290 [system_monitor.py:_start():179] Finished system metrics aggregation loop
+2025-03-05 13:44:07,046 DEBUG   SystemMonitor:6290 [system_monitor.py:_start():183] Publishing last batch of metrics
+2025-03-05 13:44:07,047 DEBUG   SenderThread:6290 [sender.py:send():379] send: stats
+2025-03-05 13:44:08,015 INFO    MainThread:6290 [internal.py:handle_exit():76] Internal process exited
diff --git a/aerial_gym/rl_training/rl_games/wandb/run-20250305_134400-m9motmxm/logs/debug.log b/aerial_gym/rl_training/rl_games/wandb/run-20250305_134400-m9motmxm/logs/debug.log
new file mode 100644
index 0000000..eebc475
--- /dev/null
+++ b/aerial_gym/rl_training/rl_games/wandb/run-20250305_134400-m9motmxm/logs/debug.log
@@ -0,0 +1,28 @@
+2025-03-05 13:44:00,680 INFO    MainThread:6214 [wandb_setup.py:_flush():76] Current SDK version is 0.16.6
+2025-03-05 13:44:00,680 INFO    MainThread:6214 [wandb_setup.py:_flush():76] Configure stats pid to 6214
+2025-03-05 13:44:00,680 INFO    MainThread:6214 [wandb_setup.py:_flush():76] Loading settings from /home/shruti/.config/wandb/settings
+2025-03-05 13:44:00,680 INFO    MainThread:6214 [wandb_setup.py:_flush():76] Loading settings from /home/shruti/workspaces/aerial_gym_ws/src/aerial_gym_simulator/aerial_gym/rl_training/rl_games/wandb/settings
+2025-03-05 13:44:00,680 INFO    MainThread:6214 [wandb_setup.py:_flush():76] Loading settings from environment variables: {}
+2025-03-05 13:44:00,680 INFO    MainThread:6214 [wandb_setup.py:_flush():76] Applying setup settings: {'_disable_service': False}
+2025-03-05 13:44:00,680 INFO    MainThread:6214 [wandb_setup.py:_flush():76] Inferring run settings from compute environment: {'program_relpath': 'aerial_gym/rl_training/rl_games/runner.py', 'program_abspath': '/home/shruti/workspaces/aerial_gym_ws/src/aerial_gym_simulator/aerial_gym/rl_training/rl_games/runner.py', 'program': 'runner.py'}
+2025-03-05 13:44:00,680 INFO    MainThread:6214 [wandb_setup.py:_flush():76] Applying login settings: {}
+2025-03-05 13:44:00,680 INFO    MainThread:6214 [wandb_init.py:_log_setup():521] Logging user logs to /home/shruti/workspaces/aerial_gym_ws/src/aerial_gym_simulator/aerial_gym/rl_training/rl_games/wandb/run-20250305_134400-m9motmxm/logs/debug.log
+2025-03-05 13:44:00,680 INFO    MainThread:6214 [wandb_init.py:_log_setup():522] Logging internal logs to /home/shruti/workspaces/aerial_gym_ws/src/aerial_gym_simulator/aerial_gym/rl_training/rl_games/wandb/run-20250305_134400-m9motmxm/logs/debug-internal.log
+2025-03-05 13:44:00,680 INFO    MainThread:6214 [wandb_init.py:init():561] calling init triggers
+2025-03-05 13:44:00,680 INFO    MainThread:6214 [wandb_init.py:init():568] wandb.init called with sweep_config: {}
+config: {'params': {'seed': 10, 'algo': {'name': 'a2c_continuous'}, 'model': {'name': 'continuous_a2c_logstd'}, 'load_checkpoint': False, 'network': {'name': 'actor_critic', 'separate': False, 'space': {'continuous': {'mu_activation': 'None', 'sigma_activation': 'None', 'mu_init': {'name': 'default'}, 'sigma_init': {'name': 'const_initializer', 'val': 0}, 'fixed_sigma': True}}, 'mlp': {'units': [256, 128, 64], 'd2rl': False, 'activation': 'elu', 'initializer': {'name': 'default', 'scale': 2}}}, 'config': {'env_name': 'navigation_task', 'env_config': {'num_envs': 16, 'headless': False, 'use_warp': True}, 'name': 'gen_ppo', 'reward_shaper': {'scale_value': 0.1}, 'normalize_advantage': True, 'gamma': 0.98, 'tau': 0.95, 'ppo': True, 'learning_rate': '1e-4', 'lr_schedule': 'adaptive', 'kl_threshold': 0.016, 'save_best_after': 10, 'score_to_win': 100000, 'grad_norm': 1.0, 'entropy_coef': 0, 'truncate_grads': True, 'e_clip': 0.2, 'clip_value': False, 'num_actors': 16, 'horizon_length': 32, 'minibatch_size': 2048, 'mini_epochs': 4, 'critic_coef': 2, 'normalize_input': True, 'bounds_loss_coef': 0.0001, 'max_epochs': 500, 'normalize_value': True, 'use_diagnostics': True, 'value_bootstrap': True, 'use_smooth_clamp': False, 'player': {'use_vecenv': True}}}}
+2025-03-05 13:44:00,680 INFO    MainThread:6214 [wandb_init.py:init():611] starting backend
+2025-03-05 13:44:00,680 INFO    MainThread:6214 [wandb_init.py:init():615] setting up manager
+2025-03-05 13:44:00,681 INFO    MainThread:6214 [backend.py:_multiprocessing_setup():105] multiprocessing start_methods=fork,spawn,forkserver, using: spawn
+2025-03-05 13:44:00,683 INFO    MainThread:6214 [wandb_init.py:init():623] backend started and connected
+2025-03-05 13:44:00,686 INFO    MainThread:6214 [wandb_init.py:init():715] updated telemetry
+2025-03-05 13:44:00,701 INFO    MainThread:6214 [wandb_init.py:init():748] communicating run to backend with 90.0 second timeout
+2025-03-05 13:44:00,955 INFO    MainThread:6214 [wandb_run.py:_on_init():2357] communicating current version
+2025-03-05 13:44:01,008 INFO    MainThread:6214 [wandb_run.py:_on_init():2366] got version response upgrade_message: "wandb version 0.19.8 is available!  To upgrade, please run:\n $ pip install wandb --upgrade"
+
+2025-03-05 13:44:01,008 INFO    MainThread:6214 [wandb_init.py:init():799] starting run threads in backend
+2025-03-05 13:44:03,373 INFO    MainThread:6214 [wandb_run.py:_console_start():2335] atexit reg
+2025-03-05 13:44:03,373 INFO    MainThread:6214 [wandb_run.py:_redirect():2190] redirect: wrap_raw
+2025-03-05 13:44:03,373 INFO    MainThread:6214 [wandb_run.py:_redirect():2255] Wrapping output streams.
+2025-03-05 13:44:03,373 INFO    MainThread:6214 [wandb_run.py:_redirect():2280] Redirects installed.
+2025-03-05 13:44:03,373 INFO    MainThread:6214 [wandb_init.py:init():842] run started, returning control to user process
diff --git a/aerial_gym/rl_training/rl_games/wandb/run-20250305_134400-m9motmxm/run-m9motmxm.wandb b/aerial_gym/rl_training/rl_games/wandb/run-20250305_134400-m9motmxm/run-m9motmxm.wandb
new file mode 100644
index 0000000..25b4179
Binary files /dev/null and b/aerial_gym/rl_training/rl_games/wandb/run-20250305_134400-m9motmxm/run-m9motmxm.wandb differ
diff --git a/aerial_gym/rl_training/rl_games/wandb/run-20250305_134417-8gm06wv3/files/code/aerial_gym/rl_training/rl_games/runner.py b/aerial_gym/rl_training/rl_games/wandb/run-20250305_134417-8gm06wv3/files/code/aerial_gym/rl_training/rl_games/runner.py
new file mode 100644
index 0000000..bd45a3c
--- /dev/null
+++ b/aerial_gym/rl_training/rl_games/wandb/run-20250305_134417-8gm06wv3/files/code/aerial_gym/rl_training/rl_games/runner.py
@@ -0,0 +1,331 @@
+import numpy as np
+import os
+import yaml
+
+
+import isaacgym
+
+
+from aerial_gym.registry.task_registry import task_registry
+from aerial_gym.utils.helpers import parse_arguments
+
+import gym
+from gym import spaces
+from argparse import Namespace
+
+from rl_games.common import env_configurations, vecenv
+
+import torch
+import distutils
+
+os.environ["XLA_PYTHON_CLIENT_PREALLOCATE"] = "false"
+# import warnings
+# warnings.filterwarnings("error")
+
+
+class ExtractObsWrapper(gym.Wrapper):
+    def __init__(self, env):
+        super().__init__(env)
+
+    def reset(self, **kwargs):
+        observations, *_ = super().reset(**kwargs)
+        return observations["observations"]
+
+    def step(self, action):
+        observations, rewards, terminated, truncated, infos = super().step(action)
+
+        dones = torch.where(
+            terminated | truncated,
+            torch.ones_like(terminated),
+            torch.zeros_like(terminated),
+        )
+
+        return (
+            observations["observations"],
+            rewards,
+            dones,
+            infos,
+        )
+
+
+class AERIALRLGPUEnv(vecenv.IVecEnv):
+    def __init__(self, config_name, num_actors, **kwargs):
+        self.env = env_configurations.configurations[config_name]["env_creator"](**kwargs)
+        self.env = ExtractObsWrapper(self.env)
+
+    def step(self, actions):
+        return self.env.step(actions)
+
+    def reset(self):
+        return self.env.reset()
+
+    def reset_done(self):
+        return self.env.reset_done()
+
+    def get_number_of_agents(self):
+        return self.env.get_number_of_agents()
+
+    def get_env_info(self):
+        info = {}
+        info["action_space"] = spaces.Box(
+            -np.ones(self.env.task_config.action_space_dim),
+            np.ones(self.env.task_config.action_space_dim),
+        )
+        info["observation_space"] = spaces.Box(
+            np.ones(self.env.task_config.observation_space_dim) * -np.Inf,
+            np.ones(self.env.task_config.observation_space_dim) * np.Inf,
+        )
+        print(info["action_space"], info["observation_space"])
+        return info
+
+
+env_configurations.register(
+    "position_setpoint_task",
+    {
+        "env_creator": lambda **kwargs: task_registry.make_task("position_setpoint_task", **kwargs),
+        "vecenv_type": "AERIAL-RLGPU",
+    },
+)
+
+env_configurations.register(
+    "position_setpoint_task_sim2real",
+    {
+        "env_creator": lambda **kwargs: task_registry.make_task(
+            "position_setpoint_task_sim2real", **kwargs
+        ),
+        "vecenv_type": "AERIAL-RLGPU",
+    },
+)
+
+env_configurations.register(
+    "position_setpoint_task_acceleration_sim2real",
+    {
+        "env_creator": lambda **kwargs: task_registry.make_task(
+            "position_setpoint_task_acceleration_sim2real", **kwargs
+        ),
+        "vecenv_type": "AERIAL-RLGPU",
+    },
+)
+
+env_configurations.register(
+    "navigation_task",
+    {
+        "env_creator": lambda **kwargs: task_registry.make_task("navigation_task", **kwargs),
+        "vecenv_type": "AERIAL-RLGPU",
+    },
+)
+
+env_configurations.register(
+    "position_setpoint_task_reconfigurable",
+    {
+        "env_creator": lambda **kwargs: task_registry.make_task(
+            "position_setpoint_task_reconfigurable", **kwargs
+        ),
+        "vecenv_type": "AERIAL-RLGPU",
+    },
+)
+
+env_configurations.register(
+    "position_setpoint_task_morphy",
+    {
+        "env_creator": lambda **kwargs: task_registry.make_task(
+            "position_setpoint_task_morphy", **kwargs
+        ),
+        "vecenv_type": "AERIAL-RLGPU",
+    },
+)
+
+env_configurations.register(
+    "position_setpoint_task_sim2real_end_to_end",
+    {
+        "env_creator": lambda **kwargs: task_registry.make_task(
+            "position_setpoint_task_sim2real_end_to_end", **kwargs
+        ),
+        "vecenv_type": "AERIAL-RLGPU",
+    },
+)
+
+vecenv.register(
+    "AERIAL-RLGPU",
+    lambda config_name, num_actors, **kwargs: AERIALRLGPUEnv(config_name, num_actors, **kwargs),
+)
+
+
+def get_args():
+    from isaacgym import gymutil
+
+    custom_parameters = [
+        {
+            "name": "--seed",
+            "type": int,
+            "default": 0,
+            "required": False,
+            "help": "Random seed, if larger than 0 will overwrite the value in yaml config.",
+        },
+        {
+            "name": "--tf",
+            "required": False,
+            "help": "run tensorflow runner",
+            "action": "store_true",
+        },
+        {
+            "name": "--train",
+            "required": False,
+            "help": "train network",
+            "action": "store_true",
+        },
+        {
+            "name": "--play",
+            "required": False,
+            "help": "play(test) network",
+            "action": "store_true",
+        },
+        {
+            "name": "--checkpoint",
+            "type": str,
+            "required": False,
+            "help": "path to checkpoint",
+        },
+        {
+            "name": "--file",
+            "type": str,
+            "default": "ppo_aerial_quad.yaml",
+            "required": False,
+            "help": "path to config",
+        },
+        {
+            "name": "--num_envs",
+            "type": int,
+            "default": "1024",
+            "help": "Number of environments to create. Overrides config file if provided.",
+        },
+        {
+            "name": "--sigma",
+            "type": float,
+            "required": False,
+            "help": "sets new sigma value in case if 'fixed_sigma: True' in yaml config",
+        },
+        {
+            "name": "--track",
+            "action": "store_true",
+            "help": "if toggled, this experiment will be tracked with Weights and Biases",
+        },
+        {
+            "name": "--wandb-project-name",
+            "type": str,
+            "default": "rl_games",
+            "help": "the wandb's project name",
+        },
+        {
+            "name": "--wandb-entity",
+            "type": str,
+            "default": None,
+            "help": "the entity (team) of wandb's project",
+        },
+        {
+            "name": "--task",
+            "type": str,
+            "default": "navigation_task",
+            "help": "Override task from config file if provided.",
+        },
+        {
+            "name": "--experiment_name",
+            "type": str,
+            "help": "Name of the experiment to run or load. Overrides config file if provided.",
+        },
+        {
+            "name": "--headless",
+            "type": lambda x: bool(distutils.util.strtobool(x)),
+            "default": "False",
+            "help": "Force display off at all times",
+        },
+        {
+            "name": "--horovod",
+            "action": "store_true",
+            "default": False,
+            "help": "Use horovod for multi-gpu training",
+        },
+        {
+            "name": "--rl_device",
+            "type": str,
+            "default": "cuda:0",
+            "help": "Device used by the RL algorithm, (cpu, gpu, cuda:0, cuda:1 etc..)",
+        },
+        {
+            "name": "--use_warp",
+            "type": lambda x: bool(distutils.util.strtobool(x)),
+            "default": "True",
+            "help": "Choose whether to use warp or Isaac Gym rendering pipeline.",
+        },
+    ]
+
+    # parse arguments
+    args = parse_arguments(description="RL Policy", custom_parameters=custom_parameters)
+
+    # name allignment
+    args.sim_device_id = args.compute_device_id
+    args.sim_device = args.sim_device_type
+    if args.sim_device == "cuda":
+        args.sim_device += f":{args.sim_device_id}"
+    return args
+
+
+def update_config(config, args):
+
+    if args["task"] is not None:
+        config["params"]["config"]["env_name"] = args["task"]
+    if args["experiment_name"] is not None:
+        config["params"]["config"]["name"] = args["experiment_name"]
+    config["params"]["config"]["env_config"]["headless"] = args["headless"]
+    config["params"]["config"]["env_config"]["num_envs"] = args["num_envs"]
+    config["params"]["config"]["env_config"]["use_warp"] = args["use_warp"]
+    if args["num_envs"] > 0:
+        config["params"]["config"]["num_actors"] = args["num_envs"]
+        # config['params']['config']['num_envs'] = args['num_envs']
+        config["params"]["config"]["env_config"]["num_envs"] = args["num_envs"]
+    if args["seed"] > 0:
+        config["params"]["seed"] = args["seed"]
+        config["params"]["config"]["env_config"]["seed"] = args["seed"]
+
+    config["params"]["config"]["player"] = {"use_vecenv": True}
+    return config
+
+
+if __name__ == "__main__":
+    os.makedirs("nn", exist_ok=True)
+    os.makedirs("runs", exist_ok=True)
+
+    args = vars(get_args())
+
+    config_name = args["file"]
+
+    print("Loading config: ", config_name)
+    with open(config_name, "r") as stream:
+        config = yaml.safe_load(stream)
+
+        config = update_config(config, args)
+
+        from rl_games.torch_runner import Runner
+
+        runner = Runner()
+        try:
+            runner.load(config)
+        except yaml.YAMLError as exc:
+            print(exc)
+
+    rank = int(os.getenv("LOCAL_RANK", "0"))
+    if args["track"] and rank == 0:
+        import wandb
+
+        wandb.init(
+            project=args["wandb_project_name"],
+            entity=args["wandb_entity"],
+            sync_tensorboard=True,
+            config=config,
+            monitor_gym=True,
+            save_code=True,
+        )
+    runner.run(args)
+
+    if args["track"] and rank == 0:
+        wandb.finish()
diff --git a/aerial_gym/rl_training/rl_games/wandb/run-20250305_134417-8gm06wv3/files/conda-environment.yaml b/aerial_gym/rl_training/rl_games/wandb/run-20250305_134417-8gm06wv3/files/conda-environment.yaml
new file mode 100644
index 0000000..b5e6902
--- /dev/null
+++ b/aerial_gym/rl_training/rl_games/wandb/run-20250305_134417-8gm06wv3/files/conda-environment.yaml
@@ -0,0 +1,409 @@
+name: aerialgym
+channels:
+  - pytorch3d
+  - iopath
+  - fvcore
+  - pytorch
+  - nvidia
+  - nvidia/label/cuda-11.8.0
+  - conda-forge
+  - defaults
+  - https://repo.anaconda.com/pkgs/main
+  - https://repo.anaconda.com/pkgs/r
+dependencies:
+  - _libgcc_mutex=0.1=main
+  - _openmp_mutex=5.1=1_gnu
+  - absl-py=2.1.0=pyhd8ed1ab_0
+  - aiohttp=3.7.4.post0=py38h497a2fe_1
+  - antlr-python-runtime=4.9.3=pyhd8ed1ab_1
+  - anyio=4.5.0=pyhd8ed1ab_0
+  - appdirs=1.4.4=pyh9f0ad1d_0
+  - argon2-cffi=23.1.0=pyhd8ed1ab_0
+  - argon2-cffi-bindings=21.2.0=py38h01eb140_4
+  - arrow=1.3.0=pyhd8ed1ab_0
+  - asttokens=3.0.0=pyhd8ed1ab_0
+  - async-lru=2.0.4=pyhd8ed1ab_0
+  - async-timeout=3.0.1=py_1000
+  - attrs=24.2.0=pyh71513ae_0
+  - babel=2.16.0=pyhd8ed1ab_0
+  - backcall=0.2.0=pyh9f0ad1d_0
+  - beautifulsoup4=4.12.3=pyha770c72_0
+  - blas=1.0=mkl
+  - bleach=6.1.0=pyhd8ed1ab_0
+  - blinker=1.8.2=pyhd8ed1ab_0
+  - brotli=1.1.0=hb9d3cd8_2
+  - brotli-bin=1.1.0=hb9d3cd8_2
+  - brotli-python=1.0.9=py38hfa26641_7
+  - bullet-cpp=3.21=h43a58ef_1
+  - bzip2=1.0.8=h5eee18b_6
+  - c-ares=1.19.1=h5eee18b_0
+  - ca-certificates=2025.2.25=h06a4308_0
+  - cached-property=1.5.2=hd8ed1ab_1
+  - cached_property=1.5.2=pyha770c72_1
+  - cachetools=5.5.0=pyhd8ed1ab_0
+  - certifi=2024.8.30=pyhd8ed1ab_0
+  - cffi=1.15.0=py38h3931269_0
+  - chardet=4.0.0=py38h578d9bd_3
+  - charset-normalizer=3.4.0=pyhd8ed1ab_0
+  - click=8.1.7=unix_pyh707e725_0
+  - colorama=0.4.6=pyhd8ed1ab_0
+  - comm=0.2.2=pyhd8ed1ab_0
+  - cryptography=43.0.0=py38hdda0065_0
+  - cuda=11.8.0=0
+  - cuda-cccl=11.8.89=0
+  - cuda-command-line-tools=11.8.0=0
+  - cuda-compiler=11.8.0=0
+  - cuda-cudart=11.8.89=0
+  - cuda-cudart-dev=11.8.89=0
+  - cuda-cuobjdump=11.8.86=0
+  - cuda-cupti=11.8.87=0
+  - cuda-cuxxfilt=11.8.86=0
+  - cuda-demo-suite=11.8.86=0
+  - cuda-documentation=11.8.86=0
+  - cuda-driver-dev=11.8.89=0
+  - cuda-gdb=11.8.86=0
+  - cuda-libraries=11.8.0=0
+  - cuda-libraries-dev=11.8.0=0
+  - cuda-memcheck=11.8.86=0
+  - cuda-nsight=11.8.86=0
+  - cuda-nsight-compute=11.8.0=0
+  - cuda-nvcc=11.8.89=0
+  - cuda-nvdisasm=11.8.86=0
+  - cuda-nvml-dev=11.8.86=0
+  - cuda-nvprof=11.8.87=0
+  - cuda-nvprune=11.8.86=0
+  - cuda-nvrtc=11.8.89=0
+  - cuda-nvrtc-dev=11.8.89=0
+  - cuda-nvtx=11.8.86=0
+  - cuda-nvvp=11.8.87=0
+  - cuda-opencl=12.4.127=0
+  - cuda-profiler-api=11.8.86=0
+  - cuda-runtime=11.8.0=0
+  - cuda-sanitizer-api=11.8.86=0
+  - cuda-toolkit=11.8.0=0
+  - cuda-tools=11.8.0=0
+  - cuda-visual-tools=11.8.0=0
+  - cycler=0.12.1=pyhd8ed1ab_0
+  - dbus=1.13.18=hb2f20db_0
+  - debugpy=1.6.7=py38h6a678d5_0
+  - defusedxml=0.7.1=pyhd8ed1ab_0
+  - dill=0.3.9=pyhd8ed1ab_0
+  - docker-pycreds=0.4.0=py_0
+  - entrypoints=0.4=pyhd8ed1ab_0
+  - exceptiongroup=1.2.2=pyhd8ed1ab_0
+  - executing=2.1.0=pyhd8ed1ab_0
+  - expat=2.6.4=h5888daf_0
+  - fastcache=1.1.0=py38h7b6447c_0
+  - ffmpeg=4.3=hf484d3e_0
+  - filelock=3.13.1=py38h06a4308_0
+  - fontconfig=2.14.0=h8e229c2_0
+  - fqdn=1.5.1=pyhd8ed1ab_0
+  - freetype=2.10.4=h0708190_1
+  - fvcore=0.1.5.post20210915=py38
+  - gds-tools=1.4.0.31=0
+  - geos=3.10.2=h9c3ff4c_0
+  - giflib=5.2.2=h5eee18b_0
+  - glib=2.78.4=h6a678d5_0
+  - glib-tools=2.78.4=h6a678d5_0
+  - gmp=6.3.0=h6a678d5_0
+  - gmpy2=2.1.2=py38heeb90bb_0
+  - gnutls=3.6.15=he1e5248_0
+  - google-auth=2.35.0=pyhff2d567_0
+  - google-auth-oauthlib=1.0.0=pyhd8ed1ab_1
+  - grpcio=1.62.2=py38h6a678d5_0
+  - gst-plugins-base=1.14.1=h6a678d5_1
+  - gstreamer=1.14.1=h5eee18b_1
+  - gym-notices=0.0.8=pyhd8ed1ab_0
+  - h11=0.14.0=pyhd8ed1ab_0
+  - h2=4.1.0=pyhd8ed1ab_0
+  - hpack=4.0.0=pyh9f0ad1d_0
+  - httpcore=1.0.7=pyh29332c3_1
+  - httpx=0.27.2=pyhd8ed1ab_0
+  - hyperframe=6.0.1=pyhd8ed1ab_0
+  - icu=58.2=hf484d3e_1000
+  - idna=3.10=pyhd8ed1ab_0
+  - importlib-metadata=8.5.0=pyha770c72_0
+  - importlib_metadata=8.5.0=hd8ed1ab_1
+  - importlib_resources=6.4.5=pyhd8ed1ab_0
+  - intel-openmp=2021.4.0=h06a4308_3561
+  - iopath=0.1.9=py38
+  - ipykernel=6.29.5=pyh3099207_0
+  - ipython=8.12.2=pyh41d4057_0
+  - ipywidgets=8.1.5=pyhd8ed1ab_0
+  - isoduration=20.11.0=pyhd8ed1ab_0
+  - jbig=2.1=h7f98852_2003
+  - jedi=0.19.1=pyhd8ed1ab_0
+  - jinja2=3.1.4=pyhd8ed1ab_0
+  - jpeg=9e=h166bdaf_1
+  - json5=0.9.25=pyhd8ed1ab_0
+  - jsonpointer=3.0.0=py38h578d9bd_0
+  - jsonschema=4.23.0=pyhd8ed1ab_0
+  - jsonschema-specifications=2024.10.1=pyhd8ed1ab_0
+  - jsonschema-with-format-nongpl=4.23.0=hd8ed1ab_1
+  - jupyter=1.1.1=pyhd8ed1ab_0
+  - jupyter-lsp=2.2.5=pyhd8ed1ab_0
+  - jupyter_client=8.6.3=pyhd8ed1ab_0
+  - jupyter_console=6.6.3=pyhd8ed1ab_0
+  - jupyter_core=5.7.2=pyh31011fe_1
+  - jupyter_events=0.10.0=pyhd8ed1ab_0
+  - jupyter_server=2.14.2=pyhd8ed1ab_0
+  - jupyter_server_terminals=0.5.3=pyhd8ed1ab_0
+  - jupyterlab=4.2.5=pyhd8ed1ab_0
+  - jupyterlab_pygments=0.3.0=pyhd8ed1ab_1
+  - jupyterlab_server=2.27.3=pyhd8ed1ab_0
+  - jupyterlab_widgets=3.0.13=pyhd8ed1ab_0
+  - krb5=1.20.1=h143b758_1
+  - lame=3.100=h7b6447c_0
+  - lcms2=2.12=hddcbb42_0
+  - ld_impl_linux-64=2.40=h12ee557_0
+  - lerc=2.2.1=h9c3ff4c_0
+  - libabseil=20240116.2=cxx17_h6a678d5_0
+  - libblas=3.9.0=12_linux64_mkl
+  - libbrotlicommon=1.1.0=hb9d3cd8_2
+  - libbrotlidec=1.1.0=hb9d3cd8_2
+  - libbrotlienc=1.1.0=hb9d3cd8_2
+  - libcblas=3.9.0=12_linux64_mkl
+  - libclang=10.0.1=default_hde54327_1
+  - libcublas=11.11.3.6=0
+  - libcublas-dev=11.11.3.6=0
+  - libcufft=10.9.0.58=0
+  - libcufft-dev=10.9.0.58=0
+  - libcufile=1.9.1.3=0
+  - libcufile-dev=1.4.0.31=0
+  - libcurand=10.3.5.147=0
+  - libcurand-dev=10.3.0.86=0
+  - libcusolver=11.4.1.48=0
+  - libcusolver-dev=11.4.1.48=0
+  - libcusparse=11.7.5.86=0
+  - libcusparse-dev=11.7.5.86=0
+  - libdeflate=1.7=h7f98852_5
+  - libedit=3.1.20230828=h5eee18b_0
+  - libevent=2.1.12=hf998b51_1
+  - libexpat=2.6.4=h5888daf_0
+  - libffi=3.4.4=h6a678d5_1
+  - libgcc=14.2.0=h767d61c_2
+  - libgcc-ng=14.2.0=h69a702a_2
+  - libgfortran-ng=13.2.0=h69a702a_0
+  - libgfortran5=13.2.0=ha4646dd_0
+  - libglib=2.78.4=hdc74915_0
+  - libgomp=14.2.0=h767d61c_2
+  - libgrpc=1.62.2=h2d74bed_0
+  - libiconv=1.16=h5eee18b_3
+  - libidn2=2.3.4=h5eee18b_0
+  - libjpeg-turbo=2.0.0=h9bf148f_0
+  - liblapack=3.9.0=12_linux64_mkl
+  - libllvm10=10.0.1=he513fc3_3
+  - libnpp=11.8.0.86=0
+  - libnpp-dev=11.8.0.86=0
+  - libnvfatbin=12.4.127=0
+  - libnvjitlink=12.4.127=0
+  - libnvjpeg=11.9.0.86=0
+  - libnvjpeg-dev=11.9.0.86=0
+  - libopenblas=0.3.21=h043d6bf_0
+  - libpng=1.6.37=h21135ba_2
+  - libpq=12.20=hdbd6064_0
+  - libprotobuf=4.25.3=he621ea3_0
+  - libsodium=1.0.18=h36c2ea0_1
+  - libstdcxx=14.2.0=h8f9b012_2
+  - libstdcxx-ng=11.2.0=h1234567_1
+  - libtasn1=4.19.0=h5eee18b_0
+  - libtiff=4.3.0=hf544144_1
+  - libunistring=0.9.10=h27cfd23_0
+  - libuuid=2.38.1=h0b41bf4_0
+  - libwebp=1.2.2=h55f646e_0
+  - libwebp-base=1.2.2=h7f98852_1
+  - libxcb=1.17.0=h8a09558_0
+  - libxkbcommon=1.0.3=he3ba5ed_0
+  - libxml2=2.9.14=h74e7548_0
+  - llvm-openmp=14.0.6=h9e868ea_0
+  - lz4-c=1.9.4=h6a678d5_1
+  - markdown=3.6=pyhd8ed1ab_0
+  - markupsafe=2.1.1=py38h0a891b7_1
+  - matplotlib-base=3.7.2=py38h1128e8f_0
+  - matplotlib-inline=0.1.7=pyhd8ed1ab_0
+  - metis=5.1.0=hd0bcaf9_1007
+  - mistune=3.0.2=pyhd8ed1ab_0
+  - mkl=2021.4.0=h06a4308_640
+  - mkl-service=2.4.0=py38h7f8727e_0
+  - mkl_fft=1.3.1=py38hd3c417c_0
+  - mkl_random=1.2.2=py38h51133e4_0
+  - mpc=1.3.1=h5eee18b_0
+  - mpfr=4.2.1=h90cbb55_3
+  - mpmath=1.3.0=py38h06a4308_0
+  - multidict=6.0.2=py38h0a891b7_1
+  - munkres=1.1.4=pyh9f0ad1d_0
+  - nbclient=0.10.2=pyhd8ed1ab_0
+  - nbconvert-core=7.16.4=pyhff2d567_2
+  - nbformat=5.10.4=pyhd8ed1ab_0
+  - ncurses=6.4=h6a678d5_0
+  - nest-asyncio=1.6.0=pyhd8ed1ab_0
+  - nettle=3.7.3=hbbd107a_1
+  - ninja-base=1.12.1=hdb19cb5_0
+  - notebook=7.2.2=pyhd8ed1ab_0
+  - notebook-shim=0.2.4=pyhd8ed1ab_0
+  - nsight-compute=2022.3.0.22=0
+  - nspr=4.36=h5888daf_0
+  - nss=3.89.1=h6a678d5_0
+  - oauthlib=3.2.2=pyhd8ed1ab_0
+  - olefile=0.47=pyhd8ed1ab_0
+  - omegaconf=2.3.0=pyhd8ed1ab_0
+  - openh264=2.1.1=h4ff587b_0
+  - openjpeg=2.4.0=hb52868f_1
+  - openssl=3.4.1=h7b32b05_0
+  - overrides=7.7.0=pyhd8ed1ab_0
+  - packaging=24.2=pyhd8ed1ab_2
+  - pandas=1.4.2=py38h47df419_1
+  - pandocfilters=1.5.0=pyhd8ed1ab_0
+  - parso=0.8.4=pyhd8ed1ab_0
+  - pcre2=10.42=hebb0a14_1
+  - pexpect=4.9.0=pyhd8ed1ab_0
+  - pickleshare=0.7.5=py_1003
+  - pillow=9.4.0=py38h6a678d5_0
+  - pip=24.2=py38h06a4308_0
+  - pkgutil-resolve-name=1.3.10=pyhd8ed1ab_1
+  - platformdirs=4.3.6=pyhd8ed1ab_0
+  - plotly=5.24.1=pyhd8ed1ab_0
+  - portalocker=2.10.1=py38h578d9bd_0
+  - prometheus_client=0.21.0=pyhd8ed1ab_0
+  - prompt-toolkit=3.0.48=pyha770c72_0
+  - prompt_toolkit=3.0.48=hd8ed1ab_1
+  - pthread-stubs=0.4=hb9d3cd8_1002
+  - ptyprocess=0.7.0=pyhd3deb0d_0
+  - pure_eval=0.2.3=pyhd8ed1ab_0
+  - pyasn1=0.6.1=pyhd8ed1ab_1
+  - pyasn1-modules=0.4.1=pyhd8ed1ab_0
+  - pybullet=3.21=py38h43a58ef_1
+  - pycparser=2.22=pyhd8ed1ab_0
+  - pygments=2.18.0=pyhd8ed1ab_0
+  - pyjwt=2.9.0=pyhd8ed1ab_1
+  - pyopenssl=24.2.1=pyhd8ed1ab_2
+  - pyqt=5.15.4=py38hfa26641_0
+  - pyqt5-sip=12.9.0=py38hfa26641_0
+  - pysocks=1.7.1=pyha2e5f31_6
+  - python=3.8.20=he870216_0
+  - python-fastjsonschema=2.20.0=pyhd8ed1ab_0
+  - python-json-logger=2.0.7=pyhd8ed1ab_0
+  - python_abi=3.8=2_cp38
+  - pytorch=2.2.0=py3.8_cuda11.8_cudnn8.7.0_0
+  - pytorch-cuda=11.8=h7e8668a_6
+  - pytorch-mutex=1.0=cuda
+  - pytorch3d=0.7.8=py38_cu118_pyt220
+  - pytz=2024.2=pyhd8ed1ab_0
+  - pyu2f=0.1.5=pyhd8ed1ab_0
+  - pyyaml=6.0=py38h0a891b7_5
+  - pyzmq=25.1.2=py38h6a678d5_0
+  - qt-main=5.15.2=h327a75a_7
+  - re2=2022.04.01=h27087fc_0
+  - readline=8.2=h5eee18b_0
+  - referencing=0.35.1=pyhd8ed1ab_0
+  - requests=2.32.3=pyhd8ed1ab_0
+  - requests-oauthlib=2.0.0=pyhd8ed1ab_0
+  - rfc3339-validator=0.1.4=pyhd8ed1ab_0
+  - rfc3986-validator=0.1.1=pyh9f0ad1d_0
+  - rpds-py=0.20.0=py38h4005ec7_0
+  - rsa=4.9=pyhd8ed1ab_0
+  - send2trash=1.8.3=pyh0d859eb_0
+  - setuptools=75.1.0=py38h06a4308_0
+  - shapely=1.8.2=py38h97f7145_1
+  - sip=6.5.1=py38h709712a_2
+  - six=1.16.0=pyh6c4a22f_0
+  - sniffio=1.3.1=pyhd8ed1ab_0
+  - soupsieve=2.5=pyhd8ed1ab_1
+  - sqlite=3.45.3=h5eee18b_0
+  - stack_data=0.6.2=pyhd8ed1ab_0
+  - suitesparse=5.10.1=h9e50725_1
+  - sympy=1.5.1=py38_0
+  - tabulate=0.9.0=pyhd8ed1ab_1
+  - tbb=2021.5.0=h924138e_1
+  - tenacity=9.0.0=pyhd8ed1ab_0
+  - tensorboard=2.13.0=pyhd8ed1ab_0
+  - tensorboard-data-server=0.7.0=py38h52d8a92_1
+  - termcolor=2.4.0=pyhd8ed1ab_0
+  - terminado=0.18.1=pyh0d859eb_0
+  - tinycss2=1.4.0=pyhd8ed1ab_0
+  - tk=8.6.14=h39e8969_0
+  - toml=0.10.2=pyhd8ed1ab_0
+  - tomli=2.0.2=pyhd8ed1ab_0
+  - torchaudio=2.2.0=py38_cu118
+  - torchtriton=2.2.0=py38
+  - torchvision=0.17.0=py38_cu118
+  - tornado=6.4.1=py38hfb59056_0
+  - tqdm=4.67.1=pyhd8ed1ab_0
+  - traitlets=5.14.3=pyhd8ed1ab_0
+  - types-python-dateutil=2.9.0.20241003=pyhff2d567_0
+  - typing-extensions=4.12.2=hd8ed1ab_0
+  - typing_extensions=4.12.2=pyha770c72_0
+  - typing_utils=0.1.0=pyhd8ed1ab_0
+  - unicodedata2=15.1.0=py38h01eb140_0
+  - uri-template=1.3.0=pyhd8ed1ab_0
+  - urllib3=2.2.3=pyhd8ed1ab_0
+  - wcwidth=0.2.13=pyhd8ed1ab_0
+  - webcolors=24.8.0=pyhd8ed1ab_0
+  - webencodings=0.5.1=pyhd8ed1ab_2
+  - websocket-client=1.8.0=pyhd8ed1ab_0
+  - werkzeug=3.0.6=pyhd8ed1ab_0
+  - wheel=0.44.0=py38h06a4308_0
+  - widgetsnbextension=4.0.13=pyhd8ed1ab_0
+  - xorg-libx11=1.8.11=h4f16b4b_0
+  - xorg-libxau=1.0.12=hb9d3cd8_0
+  - xorg-libxdmcp=1.1.5=hb9d3cd8_0
+  - xorg-libxext=1.3.6=hb9d3cd8_0
+  - xz=5.6.4=h5eee18b_1
+  - yacs=0.1.8=pyhd8ed1ab_0
+  - yaml=0.2.5=h7f98852_2
+  - yarl=1.7.2=py38h0a891b7_2
+  - zeromq=4.3.5=h6a678d5_0
+  - zipp=3.21.0=pyhd8ed1ab_0
+  - zlib=1.2.13=h5eee18b_1
+  - zstandard=0.23.0=py38h2c38b39_0
+  - zstd=1.5.6=hc292b87_0
+  - pip:
+      - aerial-gym==2.0.0
+      - cloudpickle==3.1.1
+      - colorlog==6.9.0
+      - contourpy==1.1.1
+      - cython==3.0.12
+      - decorator==5.2.1
+      - farama-notifications==0.0.4
+      - faster-fifo==1.4.7
+      - fonttools==4.56.0
+      - freetype-py==2.5.1
+      - fsspec==2025.2.0
+      - gitdb==4.0.12
+      - gitpython==3.1.44
+      - gym==0.23.1
+      - gymnasium==0.29.1
+      - huggingface-hub==0.29.1
+      - imageio==2.35.1
+      - kiwisolver==1.4.7
+      - lxml==5.3.1
+      - matplotlib==3.7.5
+      - networkx==2.2
+      - ninja==1.11.1.3
+      - numpy==1.23.0
+      - opencv-python==4.11.0.86
+      - pathtools==0.1.2
+      - promise==2.3
+      - protobuf==3.20.3
+      - psutil==5.9.8
+      - pycollada==0.6
+      - pygame==2.1.0
+      - pyglet==2.1.3
+      - pyopengl==3.1.0
+      - pyparsing==3.1.4
+      - pyrender==0.1.45
+      - python-dateutil==2.9.0.post0
+      - rl-games==1.6.1
+      - sample-factory==2.1.1
+      - scipy==1.10.1
+      - sentry-sdk==2.22.0
+      - setproctitle==1.3.5
+      - shortuuid==1.0.13
+      - signal-slot-mp==1.0.5
+      - smmap==5.0.2
+      - tensorboardx==2.6.2.2
+      - threadpoolctl==3.5.0
+      - trimesh==4.6.3
+      - wandb==0.12.21
+      - warp-lang==1.0.0b5
+prefix: /home/shruti/miniconda3/envs/aerialgym
diff --git a/aerial_gym/rl_training/rl_games/wandb/run-20250305_134417-8gm06wv3/files/config.yaml b/aerial_gym/rl_training/rl_games/wandb/run-20250305_134417-8gm06wv3/files/config.yaml
new file mode 100644
index 0000000..2ddac71
--- /dev/null
+++ b/aerial_gym/rl_training/rl_games/wandb/run-20250305_134417-8gm06wv3/files/config.yaml
@@ -0,0 +1,94 @@
+wandb_version: 1
+
+params:
+  desc: null
+  value:
+    seed: 10
+    algo:
+      name: a2c_continuous
+    model:
+      name: continuous_a2c_logstd
+    load_checkpoint: false
+    network:
+      name: actor_critic
+      separate: false
+      space:
+        continuous:
+          mu_activation: None
+          sigma_activation: None
+          mu_init:
+            name: default
+          sigma_init:
+            name: const_initializer
+            val: 0
+          fixed_sigma: true
+      mlp:
+        units:
+        - 256
+        - 128
+        - 64
+        d2rl: false
+        activation: elu
+        initializer:
+          name: default
+          scale: 2
+    config:
+      env_name: navigation_task
+      env_config:
+        num_envs: 16
+        headless: false
+        use_warp: true
+      name: gen_ppo
+      reward_shaper:
+        scale_value: 0.1
+      normalize_advantage: true
+      gamma: 0.98
+      tau: 0.95
+      ppo: true
+      learning_rate: 1e-4
+      lr_schedule: adaptive
+      kl_threshold: 0.016
+      save_best_after: 10
+      score_to_win: 100000
+      grad_norm: 1.0
+      entropy_coef: 0
+      truncate_grads: true
+      e_clip: 0.2
+      clip_value: false
+      num_actors: 16
+      horizon_length: 32
+      minibatch_size: 2048
+      mini_epochs: 4
+      critic_coef: 2
+      normalize_input: true
+      bounds_loss_coef: 0.0001
+      max_epochs: 500
+      normalize_value: true
+      use_diagnostics: true
+      value_bootstrap: true
+      use_smooth_clamp: false
+      player:
+        use_vecenv: true
+_wandb:
+  desc: null
+  value:
+    code_path: code/aerial_gym/rl_training/rl_games/runner.py
+    python_version: 3.8.20
+    cli_version: 0.16.6
+    framework: torch
+    is_jupyter_run: false
+    is_kaggle_kernel: false
+    start_time: 1741200257.0
+    t:
+      1:
+      - 1
+      - 55
+      3:
+      - 16
+      - 23
+      - 35
+      4: 3.8.20
+      5: 0.16.6
+      8:
+      - 5
+      13: linux-x86_64
diff --git a/aerial_gym/rl_training/rl_games/wandb/run-20250305_134417-8gm06wv3/files/diff.patch b/aerial_gym/rl_training/rl_games/wandb/run-20250305_134417-8gm06wv3/files/diff.patch
new file mode 100644
index 0000000..a7ff8db
--- /dev/null
+++ b/aerial_gym/rl_training/rl_games/wandb/run-20250305_134417-8gm06wv3/files/diff.patch
@@ -0,0 +1,38 @@
+diff --git a/aerial_gym/config/task_config/navigation_task_config.py b/aerial_gym/config/task_config/navigation_task_config.py
+index 7ecbda5..2f838d7 100644
+--- a/aerial_gym/config/task_config/navigation_task_config.py
++++ b/aerial_gym/config/task_config/navigation_task_config.py
+@@ -19,7 +19,7 @@ class task_config:
+     episode_len_steps = 100  # real physics time for simulation is this value multiplied by sim.dt
+ 
+     return_state_before_reset = (
+-        False  # False as usually state is returned for next episode after reset
++        True  # False as usually state is returned for next episode after reset
+     )
+     # user can set the above to true if they so desire
+ 
+diff --git a/aerial_gym/rl_training/rl_games/runner.py b/aerial_gym/rl_training/rl_games/runner.py
+index 7e8ffb4..bd45a3c 100644
+--- a/aerial_gym/rl_training/rl_games/runner.py
++++ b/aerial_gym/rl_training/rl_games/runner.py
+@@ -255,7 +255,7 @@ def get_args():
+             "name": "--use_warp",
+             "type": lambda x: bool(distutils.util.strtobool(x)),
+             "default": "True",
+-            "help": "Choose whether to use warp or Isaac Gym rendeing pipeline.",
++            "help": "Choose whether to use warp or Isaac Gym rendering pipeline.",
+         },
+     ]
+ 
+diff --git a/aerial_gym/task/__init__.py b/aerial_gym/task/__init__.py
+index 7dd966d..7975a4d 100644
+--- a/aerial_gym/task/__init__.py
++++ b/aerial_gym/task/__init__.py
+@@ -95,5 +95,5 @@ task_registry.register_task(
+ 
+ ## Uncomment this to use custom tasks
+ 
+-# from aerial_gym.task.custom_task.custom_task import CustomTask
+-# task_registry.register_task("custom_task", CustomTask, custom_task.task_config)
++#from aerial_gym.task.custom_task.custom_task import CustomTask
++#task_registry.register_task("custom_task", CustomTask, custom_task.task_config)
diff --git a/aerial_gym/rl_training/rl_games/wandb/run-20250305_134417-8gm06wv3/files/output.log b/aerial_gym/rl_training/rl_games/wandb/run-20250305_134417-8gm06wv3/files/output.log
new file mode 100644
index 0000000..73ca5c2
--- /dev/null
+++ b/aerial_gym/rl_training/rl_games/wandb/run-20250305_134417-8gm06wv3/files/output.log
@@ -0,0 +1,57 @@
+Started to play
+[BasePlayer] Creating vecenv:  navigation_task
+[isaacgym:gymutil.py] Unknown args:  ['--file=./ppo_aerial_quad_navigation.yaml', '--play', '--checkpoint=./runs/gen_ppo_26-16-11-42/nn/last_gen_ppo_ep_500_rew__377.14606_.pth', '--track', 'wandb-project-name=Trained_RL_Navigation', 'wandb-entity=shrutiroy03']
+[37m[4921 ms][base_task] - INFO : Setting seed: 916472096 (base_task.py:38)
+[37m[4922 ms][navigation_task] - INFO : Building environment for navigation task. (navigation_task.py:44)
+[37m[4922 ms][navigation_task] - INFO : Sim Name: base_sim, Env Name: env_with_obstacles, Robot Name: lmf2, Controller Name: lmf2_velocity_control (navigation_task.py:45)
+[37m[4922 ms][env_manager] - INFO : Populating environments. (env_manager.py:73)
+[37m[4922 ms][env_manager] - INFO : Creating simulation instance. (env_manager.py:87)
+[37m[4922 ms][env_manager] - INFO : Instantiating IGE object. (env_manager.py:88)
+[37m[4922 ms][IsaacGymEnvManager] - INFO : Creating Isaac Gym Environment (IGE_env_manager.py:41)
+[37m[4922 ms][IsaacGymEnvManager] - INFO : Acquiring gym object (IGE_env_manager.py:73)
+[37m[4922 ms][IsaacGymEnvManager] - INFO : Acquired gym object (IGE_env_manager.py:75)
+[37m[4923 ms][IsaacGymEnvManager] - INFO : Fixing devices (IGE_env_manager.py:89)
+[37m[4923 ms][IsaacGymEnvManager] - INFO : Using GPU pipeline for simulation. (IGE_env_manager.py:102)
+[37m[4923 ms][IsaacGymEnvManager] - INFO : Sim Device type: cuda, Sim Device ID: 0 (IGE_env_manager.py:105)
+[37m[4923 ms][IsaacGymEnvManager] - INFO : Graphics Device ID: 0 (IGE_env_manager.py:119)
+[37m[4923 ms][IsaacGymEnvManager] - INFO : Creating Isaac Gym Simulation Object (IGE_env_manager.py:120)
+[33m[4923 ms][IsaacGymEnvManager] - WARNING : If you have set the CUDA_VISIBLE_DEVICES environment variable, please ensure that you set it
+[33mto a particular one that works for your system to use the viewer or Isaac Gym cameras.
+[33mIf you want to run parallel simulations on multiple GPUs with camera sensors,
+[33mplease disable Isaac Gym and use warp (by setting use_warp=True), set the viewer to headless. (IGE_env_manager.py:127)
+[33m[4923 ms][IsaacGymEnvManager] - WARNING : If you see a segfault in the next lines, it is because of the discrepancy between the CUDA device and the graphics device.
+[33mPlease ensure that the CUDA device and the graphics device are the same. (IGE_env_manager.py:132)
+[37m[5827 ms][IsaacGymEnvManager] - INFO : Created Isaac Gym Simulation Object (IGE_env_manager.py:136)
+[37m[5828 ms][IsaacGymEnvManager] - INFO : Created Isaac Gym Environment (IGE_env_manager.py:43)
+[37m[5940 ms][env_manager] - INFO : IGE object instantiated. (env_manager.py:109)
+[37m[5940 ms][env_manager] - INFO : Creating warp environment. (env_manager.py:112)
+[37m[5940 ms][env_manager] - INFO : Warp environment created. (env_manager.py:114)
+[37m[5940 ms][env_manager] - INFO : Creating robot manager. (env_manager.py:118)
+[37m[5940 ms][BaseRobot] - INFO : [DONE] Initializing controller (base_robot.py:26)
+[37m[5940 ms][BaseRobot] - INFO : Initializing controller lmf2_velocity_control (base_robot.py:29)
+[33m[5940 ms][base_multirotor] - WARNING : Creating 16 multirotors. (base_multirotor.py:32)
+[37m[5941 ms][env_manager] - INFO : [DONE] Creating robot manager. (env_manager.py:123)
+[37m[5941 ms][env_manager] - INFO : [DONE] Creating simulation instance. (env_manager.py:125)
+[37m[5941 ms][asset_loader] - INFO : Loading asset: model.urdf for the first time. Next use of this asset will be via the asset buffer. (asset_loader.py:71)
+[37m[5941 ms][asset_loader] - INFO : Loading asset: panel.urdf for the first time. Next use of this asset will be via the asset buffer. (asset_loader.py:71)
+[37m[5944 ms][asset_loader] - INFO : Loading asset: 0_5_x_0_5_wall.urdf for the first time. Next use of this asset will be via the asset buffer. (asset_loader.py:71)
+[37m[5945 ms][asset_loader] - INFO : Loading asset: 1_x_1_wall.urdf for the first time. Next use of this asset will be via the asset buffer. (asset_loader.py:71)
+[37m[5947 ms][asset_loader] - INFO : Loading asset: small_cube.urdf for the first time. Next use of this asset will be via the asset buffer. (asset_loader.py:71)
+[37m[5948 ms][asset_loader] - INFO : Loading asset: left_wall.urdf for the first time. Next use of this asset will be via the asset buffer. (asset_loader.py:71)
+[37m[5949 ms][asset_loader] - INFO : Loading asset: right_wall.urdf for the first time. Next use of this asset will be via the asset buffer. (asset_loader.py:71)
+[37m[5950 ms][asset_loader] - INFO : Loading asset: back_wall.urdf for the first time. Next use of this asset will be via the asset buffer. (asset_loader.py:71)
+[37m[5951 ms][asset_loader] - INFO : Loading asset: front_wall.urdf for the first time. Next use of this asset will be via the asset buffer. (asset_loader.py:71)
+[37m[5952 ms][asset_loader] - INFO : Loading asset: bottom_wall.urdf for the first time. Next use of this asset will be via the asset buffer. (asset_loader.py:71)
+[37m[5953 ms][asset_loader] - INFO : Loading asset: top_wall.urdf for the first time. Next use of this asset will be via the asset buffer. (asset_loader.py:71)
+[37m[5955 ms][asset_loader] - INFO : Loading asset: cuboidal_rod.urdf for the first time. Next use of this asset will be via the asset buffer. (asset_loader.py:71)
+[37m[5957 ms][env_manager] - INFO : Populating environment 0 (env_manager.py:179)
+[33m[6041 ms][robot_manager] - WARNING : 
+[33mRobot mass: 1.2400000467896461,
+[33mInertia: tensor([[0.0134, 0.0000, 0.0000],
+[33m        [0.0000, 0.0144, 0.0000],
+[33m        [0.0000, 0.0000, 0.0138]], device='cuda:0'),
+[33mRobot COM: tensor([[0., 0., 0., 1.]], device='cuda:0') (robot_manager.py:427)
+[33m[6042 ms][robot_manager] - WARNING : Calculated robot mass and inertia for this robot. This code assumes that your robot is the same across environments. (robot_manager.py:430)
+[31m[6042 ms][robot_manager] - CRITICAL : If your robot differs across environments you need to perform this computation for each different robot here. (robot_manager.py:433)
+[37m[6071 ms][env_manager] - INFO : [DONE] Populating environments. (env_manager.py:75)
+[33m[6083 ms][IsaacGymEnvManager] - WARNING : Headless: False (IGE_env_manager.py:424)
diff --git a/aerial_gym/rl_training/rl_games/wandb/run-20250305_134417-8gm06wv3/files/requirements.txt b/aerial_gym/rl_training/rl_games/wandb/run-20250305_134417-8gm06wv3/files/requirements.txt
new file mode 100644
index 0000000..a906a9d
--- /dev/null
+++ b/aerial_gym/rl_training/rl_games/wandb/run-20250305_134417-8gm06wv3/files/requirements.txt
@@ -0,0 +1,264 @@
+Brotli==1.0.9
+Cython==3.0.12
+Farama-Notifications==0.0.4
+GitPython==3.1.43
+GitPython==3.1.44
+Jinja2==3.1.4
+Markdown==3.6
+MarkupSafe==2.1.1
+Pillow==9.4.0
+PyJWT==2.9.0
+PyOpenGL==3.1.0
+PyQt5-sip==12.9.0
+PyQt5==5.15.4
+PySocks==1.7.1
+PyYAML==6.0
+Pygments==2.18.0
+Send2Trash==1.8.3
+Shapely==1.8.2
+Werkzeug==3.0.6
+absl-py==2.1.0
+aerial_gym==2.0.0
+aiohttp==3.7.4.post0
+antlr4-python3-runtime==4.9.3
+anyio==4.5.0
+appdirs==1.4.4
+argon2-cffi-bindings==21.2.0
+argon2-cffi==23.1.0
+arrow==1.3.0
+asttokens==3.0.0
+async-lru==2.0.4
+async-timeout==3.0.1
+attrs==24.2.0
+autocommand==2.2.2
+babel==2.16.0
+backcall==0.2.0
+backports.tarfile==1.2.0
+beautifulsoup4==4.12.3
+bleach==6.1.0
+blinker==1.8.2
+cached-property==1.5.2
+cachetools==5.5.0
+certifi==2024.8.30
+cffi==1.15.0
+chardet==4.0.0
+charset-normalizer==3.4.0
+click==8.1.7
+cloudpickle==3.1.0
+cloudpickle==3.1.1
+colorama==0.4.6
+colorlog==6.9.0
+comm==0.2.2
+contourpy==1.0.2
+contourpy==1.1.1
+cryptography==43.0.0
+cycler==0.12.1
+debugpy==1.6.7
+decorator==5.1.1
+decorator==5.2.1
+defusedxml==0.7.1
+dill==0.3.9
+docker-pycreds==0.4.0
+entrypoints==0.4
+exceptiongroup==1.2.2
+executing==2.1.0
+fastcache==1.1.0
+faster-fifo==1.4.7
+fastjsonschema==2.20.0
+filelock==3.13.1
+fonttools==4.53.1
+fonttools==4.56.0
+fqdn==1.5.1
+freetype-py==2.5.1
+fsspec==2025.2.0
+fvcore==0.1.5.post20210915
+gitdb==4.0.11
+gitdb==4.0.12
+gmpy2==2.1.2
+google-auth-oauthlib==1.0.0
+google-auth==2.35.0
+grpcio==1.62.2
+gym-notices==0.0.8
+gym==0.23.1
+gym==0.26.1
+gymnasium==0.29.1
+h11==0.14.0
+h2==4.1.0
+hpack==4.0.0
+httpcore==1.0.7
+httpx==0.27.2
+huggingface-hub==0.29.1
+hyperframe==6.0.1
+idna==3.10
+imageio==2.35.1
+importlib_metadata==8.0.0
+importlib_metadata==8.5.0
+importlib_resources==6.4.0
+importlib_resources==6.4.5
+inflect==7.3.1
+iopath==0.1.9
+ipykernel==6.29.5
+ipython==8.12.2
+ipywidgets==8.1.5
+isaacgym==1.0rc4
+isoduration==20.11.0
+jaraco.collections==5.1.0
+jaraco.context==5.3.0
+jaraco.functools==4.0.1
+jaraco.text==3.12.1
+jedi==0.19.1
+json5==0.9.25
+jsonpointer==3.0.0
+jsonschema-specifications==2024.10.1
+jsonschema==4.23.0
+jupyter-console==6.6.3
+jupyter-events==0.10.0
+jupyter-lsp==2.2.5
+jupyter==1.1.1
+jupyter_client==8.6.3
+jupyter_core==5.7.2
+jupyter_server==2.14.2
+jupyter_server_terminals==0.5.3
+jupyterlab==4.2.5
+jupyterlab_pygments==0.3.0
+jupyterlab_server==2.27.3
+jupyterlab_widgets==3.0.13
+kiwisolver==1.4.2
+kiwisolver==1.4.7
+lxml==5.3.1
+matplotlib-inline==0.1.7
+matplotlib==3.7.2
+matplotlib==3.7.5
+mistune==3.0.2
+mkl-fft==1.3.1
+mkl-random==1.2.2
+mkl-service==2.4.0
+more-itertools==10.3.0
+mpmath==1.3.0
+multidict==6.0.2
+munkres==1.1.4
+nbclient==0.10.2
+nbconvert==7.16.4
+nbformat==5.10.4
+nest_asyncio==1.6.0
+networkx==2.2
+networkx==3.1
+ninja==1.11.1.3
+notebook==7.2.2
+notebook_shim==0.2.4
+numpy==1.23.0
+oauthlib==3.2.2
+olefile==0.47
+omegaconf==2.3.0
+opencv-python==4.11.0.86
+overrides==7.7.0
+packaging==24.1
+packaging==24.2
+pandas==1.4.2
+pandocfilters==1.5.0
+parso==0.8.4
+pathtools==0.1.2
+pexpect==4.9.0
+pickleshare==0.7.5
+pip==24.2
+pkgutil_resolve_name==1.3.10
+platformdirs==4.2.2
+platformdirs==4.3.6
+plotly==5.24.1
+portalocker==2.10.1
+prometheus_client==0.21.0
+promise==2.3
+prompt_toolkit==3.0.48
+protobuf==3.20.3
+protobuf==4.25.3
+psutil==5.9.8
+psutil==6.0.0
+ptyprocess==0.7.0
+pure_eval==0.2.3
+pyOpenSSL==24.2.1
+pyasn1==0.6.1
+pyasn1_modules==0.4.1
+pybullet==3.2.0
+pycollada==0.6
+pycparser==2.22
+pygame==2.1.0
+pyglet==2.1.3
+pyparsing==3.0.9
+pyparsing==3.1.4
+pyrender==0.1.45
+python-dateutil==2.9.0
+python-dateutil==2.9.0.post0
+python-json-logger==2.0.7
+pytorch3d==0.7.8
+pytz==2024.2
+pyu2f==0.1.5
+pyzmq==25.1.2
+referencing==0.35.1
+requests-oauthlib==2.0.0
+requests==2.32.3
+rfc3339-validator==0.1.4
+rfc3986-validator==0.1.1
+rl_games==1.6.1
+rpds-py==0.20.0
+rsa==4.9
+sample-factory==2.1.1
+scipy==1.10.1
+sentry-sdk==2.19.2
+sentry-sdk==2.22.0
+setproctitle==1.3.3
+setproctitle==1.3.5
+setuptools==75.1.0
+shortuuid==1.0.13
+signal-slot-mp==1.0.5
+sip==6.5.1
+six==1.16.0
+smmap==5.0.0
+smmap==5.0.2
+sniffio==1.3.1
+soupsieve==2.5
+stack-data==0.6.2
+sympy==1.5.1
+tabulate==0.9.0
+tenacity==9.0.0
+tensorboard==2.13.0
+tensorboardX==2.6.2.2
+tensorboard_data_server==0.7.0
+termcolor==2.4.0
+terminado==0.18.1
+threadpoolctl==3.5.0
+tinycss2==1.4.0
+toml==0.10.2
+tomli==2.0.1
+tomli==2.0.2
+torch==2.2.0
+torchaudio==2.2.0
+torchvision==0.17.0
+tornado==6.4.1
+tqdm==4.67.1
+traitlets==5.14.3
+trimesh==4.6.3
+triton==2.2.0
+typeguard==4.3.0
+types-python-dateutil==2.9.0.20241003
+typing-utils==0.1.0
+typing_extensions==4.12.2
+typing_extensions==4.12.2
+unicodedata2==15.1.0
+urdfpy==0.0.22
+uri-template==1.3.0
+urllib3==2.2.3
+wandb==0.12.21
+wandb==0.16.6
+warp-lang==1.0.0b5
+wcwidth==0.2.13
+webcolors==24.8.0
+webencodings==0.5.1
+websocket-client==1.8.0
+wheel==0.43.0
+wheel==0.44.0
+widgetsnbextension==4.0.13
+yacs==0.1.8
+yarl==1.7.2
+zipp==3.19.2
+zipp==3.21.0
+zstandard==0.23.0
\ No newline at end of file
diff --git a/aerial_gym/rl_training/rl_games/wandb/run-20250305_134417-8gm06wv3/files/wandb-metadata.json b/aerial_gym/rl_training/rl_games/wandb/run-20250305_134417-8gm06wv3/files/wandb-metadata.json
new file mode 100644
index 0000000..eb35db6
--- /dev/null
+++ b/aerial_gym/rl_training/rl_games/wandb/run-20250305_134417-8gm06wv3/files/wandb-metadata.json
@@ -0,0 +1,156 @@
+{
+    "os": "Linux-6.5.0-44-generic-x86_64-with-glibc2.17",
+    "python": "3.8.20",
+    "heartbeatAt": "2025-03-05T18:44:17.746427",
+    "startedAt": "2025-03-05T18:44:17.346806",
+    "docker": null,
+    "cuda": null,
+    "args": [
+        "--file=./ppo_aerial_quad_navigation.yaml",
+        "--num_envs=16",
+        "--play",
+        "--checkpoint=./runs/gen_ppo_26-16-11-42/nn/last_gen_ppo_ep_500_rew__377.14606_.pth",
+        "--track",
+        "wandb-project-name=Trained_RL_Navigation",
+        "wandb-entity=shrutiroy03"
+    ],
+    "state": "running",
+    "program": "runner.py",
+    "codePathLocal": "runner.py",
+    "codePath": "aerial_gym/rl_training/rl_games/runner.py",
+    "git": {
+        "remote": "https://github.com/ntnu-arl/aerial_gym_simulator.git",
+        "commit": "85114e7514ed0f3f8cfecfa23c40dad106c528a1"
+    },
+    "email": null,
+    "root": "/home/shruti/workspaces/aerial_gym_ws/src/aerial_gym_simulator",
+    "host": "saferoboticslab-ASUS-TUF-Gaming-F15-FX507ZM-FX507ZM",
+    "username": "shruti",
+    "executable": "/home/shruti/miniconda3/envs/aerialgym/bin/python3",
+    "cpu_count": 14,
+    "cpu_count_logical": 20,
+    "cpu_freq": {
+        "current": 1456.5124,
+        "min": 400.0,
+        "max": 4180.0
+    },
+    "cpu_freq_per_core": [
+        {
+            "current": 1626.493,
+            "min": 400.0,
+            "max": 4600.0
+        },
+        {
+            "current": 400.0,
+            "min": 400.0,
+            "max": 4600.0
+        },
+        {
+            "current": 1062.922,
+            "min": 400.0,
+            "max": 4600.0
+        },
+        {
+            "current": 400.0,
+            "min": 400.0,
+            "max": 4600.0
+        },
+        {
+            "current": 1966.579,
+            "min": 400.0,
+            "max": 4700.0
+        },
+        {
+            "current": 2409.759,
+            "min": 400.0,
+            "max": 4700.0
+        },
+        {
+            "current": 864.077,
+            "min": 400.0,
+            "max": 4700.0
+        },
+        {
+            "current": 1522.344,
+            "min": 400.0,
+            "max": 4700.0
+        },
+        {
+            "current": 2061.786,
+            "min": 400.0,
+            "max": 4600.0
+        },
+        {
+            "current": 400.0,
+            "min": 400.0,
+            "max": 4600.0
+        },
+        {
+            "current": 1578.388,
+            "min": 400.0,
+            "max": 4600.0
+        },
+        {
+            "current": 400.0,
+            "min": 400.0,
+            "max": 4600.0
+        },
+        {
+            "current": 400.0,
+            "min": 400.0,
+            "max": 3500.0
+        },
+        {
+            "current": 1828.137,
+            "min": 400.0,
+            "max": 3500.0
+        },
+        {
+            "current": 1715.618,
+            "min": 400.0,
+            "max": 3500.0
+        },
+        {
+            "current": 976.714,
+            "min": 400.0,
+            "max": 3500.0
+        },
+        {
+            "current": 400.0,
+            "min": 400.0,
+            "max": 3500.0
+        },
+        {
+            "current": 400.0,
+            "min": 400.0,
+            "max": 3500.0
+        },
+        {
+            "current": 826.931,
+            "min": 400.0,
+            "max": 3500.0
+        },
+        {
+            "current": 400.0,
+            "min": 400.0,
+            "max": 3500.0
+        }
+    ],
+    "disk": {
+        "/": {
+            "total": 937.3305015563965,
+            "used": 231.72907638549805
+        }
+    },
+    "gpu": "NVIDIA GeForce RTX 3060 Laptop GPU",
+    "gpu_count": 1,
+    "gpu_devices": [
+        {
+            "name": "NVIDIA GeForce RTX 3060 Laptop GPU",
+            "memory_total": 6442450944
+        }
+    ],
+    "memory": {
+        "total": 15.238018035888672
+    }
+}
diff --git a/aerial_gym/rl_training/rl_games/wandb/run-20250305_134417-8gm06wv3/logs/debug-internal.log b/aerial_gym/rl_training/rl_games/wandb/run-20250305_134417-8gm06wv3/logs/debug-internal.log
new file mode 100644
index 0000000..a237355
--- /dev/null
+++ b/aerial_gym/rl_training/rl_games/wandb/run-20250305_134417-8gm06wv3/logs/debug-internal.log
@@ -0,0 +1,66 @@
+2025-03-05 13:44:17,351 INFO    StreamThr :6660 [internal.py:wandb_internal():86] W&B internal server running at pid: 6660, started at: 2025-03-05 13:44:17.351418
+2025-03-05 13:44:17,354 DEBUG   HandlerThread:6660 [handler.py:handle_request():146] handle_request: status
+2025-03-05 13:44:17,355 INFO    WriterThread:6660 [datastore.py:open_for_write():87] open: /home/shruti/workspaces/aerial_gym_ws/src/aerial_gym_simulator/aerial_gym/rl_training/rl_games/wandb/run-20250305_134417-8gm06wv3/run-8gm06wv3.wandb
+2025-03-05 13:44:17,355 DEBUG   SenderThread:6660 [sender.py:send():379] send: header
+2025-03-05 13:44:17,367 DEBUG   SenderThread:6660 [sender.py:send():379] send: run
+2025-03-05 13:44:17,648 INFO    SenderThread:6660 [dir_watcher.py:__init__():211] watching files in: /home/shruti/workspaces/aerial_gym_ws/src/aerial_gym_simulator/aerial_gym/rl_training/rl_games/wandb/run-20250305_134417-8gm06wv3/files
+2025-03-05 13:44:17,648 INFO    SenderThread:6660 [sender.py:_start_run_threads():1124] run started: 8gm06wv3 with start time 1741200257.351095
+2025-03-05 13:44:17,653 DEBUG   HandlerThread:6660 [handler.py:handle_request():146] handle_request: check_version
+2025-03-05 13:44:17,654 DEBUG   SenderThread:6660 [sender.py:send_request():406] send_request: check_version
+2025-03-05 13:44:17,720 DEBUG   HandlerThread:6660 [handler.py:handle_request():146] handle_request: run_start
+2025-03-05 13:44:17,732 DEBUG   HandlerThread:6660 [system_info.py:__init__():26] System info init
+2025-03-05 13:44:17,732 DEBUG   HandlerThread:6660 [system_info.py:__init__():41] System info init done
+2025-03-05 13:44:17,732 INFO    HandlerThread:6660 [system_monitor.py:start():194] Starting system monitor
+2025-03-05 13:44:17,732 INFO    SystemMonitor:6660 [system_monitor.py:_start():158] Starting system asset monitoring threads
+2025-03-05 13:44:17,732 INFO    HandlerThread:6660 [system_monitor.py:probe():214] Collecting system info
+2025-03-05 13:44:17,733 INFO    SystemMonitor:6660 [interfaces.py:start():190] Started cpu monitoring
+2025-03-05 13:44:17,734 INFO    SystemMonitor:6660 [interfaces.py:start():190] Started disk monitoring
+2025-03-05 13:44:17,735 INFO    SystemMonitor:6660 [interfaces.py:start():190] Started gpu monitoring
+2025-03-05 13:44:17,735 INFO    SystemMonitor:6660 [interfaces.py:start():190] Started memory monitoring
+2025-03-05 13:44:17,736 INFO    SystemMonitor:6660 [interfaces.py:start():190] Started network monitoring
+2025-03-05 13:44:17,746 DEBUG   HandlerThread:6660 [system_info.py:probe():150] Probing system
+2025-03-05 13:44:17,750 DEBUG   HandlerThread:6660 [system_info.py:_probe_git():135] Probing git
+2025-03-05 13:44:17,758 DEBUG   HandlerThread:6660 [system_info.py:_probe_git():143] Probing git done
+2025-03-05 13:44:17,758 DEBUG   HandlerThread:6660 [system_info.py:probe():198] Probing system done
+2025-03-05 13:44:17,758 DEBUG   HandlerThread:6660 [system_monitor.py:probe():223] {'os': 'Linux-6.5.0-44-generic-x86_64-with-glibc2.17', 'python': '3.8.20', 'heartbeatAt': '2025-03-05T18:44:17.746427', 'startedAt': '2025-03-05T18:44:17.346806', 'docker': None, 'cuda': None, 'args': ('--file=./ppo_aerial_quad_navigation.yaml', '--num_envs=16', '--play', '--checkpoint=./runs/gen_ppo_26-16-11-42/nn/last_gen_ppo_ep_500_rew__377.14606_.pth', '--track', 'wandb-project-name=Trained_RL_Navigation', 'wandb-entity=shrutiroy03'), 'state': 'running', 'program': 'runner.py', 'codePathLocal': 'runner.py', 'codePath': 'aerial_gym/rl_training/rl_games/runner.py', 'git': {'remote': 'https://github.com/ntnu-arl/aerial_gym_simulator.git', 'commit': '85114e7514ed0f3f8cfecfa23c40dad106c528a1'}, 'email': None, 'root': '/home/shruti/workspaces/aerial_gym_ws/src/aerial_gym_simulator', 'host': 'saferoboticslab-ASUS-TUF-Gaming-F15-FX507ZM-FX507ZM', 'username': 'shruti', 'executable': '/home/shruti/miniconda3/envs/aerialgym/bin/python3', 'cpu_count': 14, 'cpu_count_logical': 20, 'cpu_freq': {'current': 1456.5124, 'min': 400.0, 'max': 4180.0}, 'cpu_freq_per_core': [{'current': 1626.493, 'min': 400.0, 'max': 4600.0}, {'current': 400.0, 'min': 400.0, 'max': 4600.0}, {'current': 1062.922, 'min': 400.0, 'max': 4600.0}, {'current': 400.0, 'min': 400.0, 'max': 4600.0}, {'current': 1966.579, 'min': 400.0, 'max': 4700.0}, {'current': 2409.759, 'min': 400.0, 'max': 4700.0}, {'current': 864.077, 'min': 400.0, 'max': 4700.0}, {'current': 1522.344, 'min': 400.0, 'max': 4700.0}, {'current': 2061.786, 'min': 400.0, 'max': 4600.0}, {'current': 400.0, 'min': 400.0, 'max': 4600.0}, {'current': 1578.388, 'min': 400.0, 'max': 4600.0}, {'current': 400.0, 'min': 400.0, 'max': 4600.0}, {'current': 400.0, 'min': 400.0, 'max': 3500.0}, {'current': 1828.137, 'min': 400.0, 'max': 3500.0}, {'current': 1715.618, 'min': 400.0, 'max': 3500.0}, {'current': 976.714, 'min': 400.0, 'max': 3500.0}, {'current': 400.0, 'min': 400.0, 'max': 3500.0}, {'current': 400.0, 'min': 400.0, 'max': 3500.0}, {'current': 826.931, 'min': 400.0, 'max': 3500.0}, {'current': 400.0, 'min': 400.0, 'max': 3500.0}], 'disk': {'/': {'total': 937.3305015563965, 'used': 231.72907638549805}}, 'gpu': 'NVIDIA GeForce RTX 3060 Laptop GPU', 'gpu_count': 1, 'gpu_devices': [{'name': 'NVIDIA GeForce RTX 3060 Laptop GPU', 'memory_total': 6442450944}], 'memory': {'total': 15.238018035888672}}
+2025-03-05 13:44:17,758 INFO    HandlerThread:6660 [system_monitor.py:probe():224] Finished collecting system info
+2025-03-05 13:44:17,758 INFO    HandlerThread:6660 [system_monitor.py:probe():227] Publishing system info
+2025-03-05 13:44:17,758 DEBUG   HandlerThread:6660 [system_info.py:_save_conda():207] Saving list of conda packages installed into the current environment
+2025-03-05 13:44:18,649 INFO    Thread-12 :6660 [dir_watcher.py:_on_file_created():271] file/dir created: /home/shruti/workspaces/aerial_gym_ws/src/aerial_gym_simulator/aerial_gym/rl_training/rl_games/wandb/run-20250305_134417-8gm06wv3/files/conda-environment.yaml
+2025-03-05 13:44:19,631 DEBUG   HandlerThread:6660 [system_info.py:_save_conda():222] Saving conda packages done
+2025-03-05 13:44:19,631 DEBUG   HandlerThread:6660 [system_info.py:_save_code():44] Saving code
+2025-03-05 13:44:19,641 DEBUG   HandlerThread:6660 [system_info.py:_save_code():65] Saving code done
+2025-03-05 13:44:19,641 DEBUG   HandlerThread:6660 [system_info.py:_save_patches():82] Saving git patches
+2025-03-05 13:44:19,652 INFO    Thread-12 :6660 [dir_watcher.py:_on_file_modified():288] file/dir modified: /home/shruti/workspaces/aerial_gym_ws/src/aerial_gym_simulator/aerial_gym/rl_training/rl_games/wandb/run-20250305_134417-8gm06wv3/files/conda-environment.yaml
+2025-03-05 13:44:19,653 INFO    Thread-12 :6660 [dir_watcher.py:_on_file_created():271] file/dir created: /home/shruti/workspaces/aerial_gym_ws/src/aerial_gym_simulator/aerial_gym/rl_training/rl_games/wandb/run-20250305_134417-8gm06wv3/files/code/aerial_gym/rl_training/rl_games/runner.py
+2025-03-05 13:44:19,653 INFO    Thread-12 :6660 [dir_watcher.py:_on_file_created():271] file/dir created: /home/shruti/workspaces/aerial_gym_ws/src/aerial_gym_simulator/aerial_gym/rl_training/rl_games/wandb/run-20250305_134417-8gm06wv3/files/code
+2025-03-05 13:44:19,653 INFO    Thread-12 :6660 [dir_watcher.py:_on_file_created():271] file/dir created: /home/shruti/workspaces/aerial_gym_ws/src/aerial_gym_simulator/aerial_gym/rl_training/rl_games/wandb/run-20250305_134417-8gm06wv3/files/code/aerial_gym/rl_training
+2025-03-05 13:44:19,653 INFO    Thread-12 :6660 [dir_watcher.py:_on_file_created():271] file/dir created: /home/shruti/workspaces/aerial_gym_ws/src/aerial_gym_simulator/aerial_gym/rl_training/rl_games/wandb/run-20250305_134417-8gm06wv3/files/code/aerial_gym
+2025-03-05 13:44:19,653 INFO    Thread-12 :6660 [dir_watcher.py:_on_file_created():271] file/dir created: /home/shruti/workspaces/aerial_gym_ws/src/aerial_gym_simulator/aerial_gym/rl_training/rl_games/wandb/run-20250305_134417-8gm06wv3/files/code/aerial_gym/rl_training/rl_games
+2025-03-05 13:44:19,675 DEBUG   HandlerThread:6660 [system_info.py:_save_patches():124] Saving git patches done
+2025-03-05 13:44:19,675 INFO    HandlerThread:6660 [system_monitor.py:probe():229] Finished publishing system info
+2025-03-05 13:44:19,678 DEBUG   SenderThread:6660 [sender.py:send():379] send: files
+2025-03-05 13:44:19,678 INFO    SenderThread:6660 [sender.py:_save_file():1390] saving file wandb-metadata.json with policy now
+2025-03-05 13:44:19,678 INFO    SenderThread:6660 [sender.py:_save_file():1390] saving file code/aerial_gym/rl_training/rl_games/runner.py with policy now
+2025-03-05 13:44:19,679 INFO    SenderThread:6660 [sender.py:_save_file():1390] saving file diff.patch with policy now
+2025-03-05 13:44:19,771 DEBUG   HandlerThread:6660 [handler.py:handle_request():146] handle_request: python_packages
+2025-03-05 13:44:19,771 DEBUG   SenderThread:6660 [sender.py:send_request():406] send_request: python_packages
+2025-03-05 13:44:19,773 DEBUG   HandlerThread:6660 [handler.py:handle_request():146] handle_request: stop_status
+2025-03-05 13:44:19,773 DEBUG   SenderThread:6660 [sender.py:send_request():406] send_request: stop_status
+2025-03-05 13:44:19,814 DEBUG   HandlerThread:6660 [handler.py:handle_request():146] handle_request: internal_messages
+2025-03-05 13:44:19,907 DEBUG   SenderThread:6660 [sender.py:send():379] send: telemetry
+2025-03-05 13:44:19,969 INFO    wandb-upload_0:6660 [upload_job.py:push():131] Uploaded file /tmp/tmpuf1cl5dgwandb/s6zq132z-wandb-metadata.json
+2025-03-05 13:44:19,991 INFO    wandb-upload_2:6660 [upload_job.py:push():131] Uploaded file /tmp/tmpuf1cl5dgwandb/eqwabynk-diff.patch
+2025-03-05 13:44:19,992 INFO    wandb-upload_1:6660 [upload_job.py:push():131] Uploaded file /tmp/tmpuf1cl5dgwandb/bwu9gc9i-code/aerial_gym/rl_training/rl_games/runner.py
+2025-03-05 13:44:20,653 INFO    Thread-12 :6660 [dir_watcher.py:_on_file_created():271] file/dir created: /home/shruti/workspaces/aerial_gym_ws/src/aerial_gym_simulator/aerial_gym/rl_training/rl_games/wandb/run-20250305_134417-8gm06wv3/files/wandb-metadata.json
+2025-03-05 13:44:20,653 INFO    Thread-12 :6660 [dir_watcher.py:_on_file_created():271] file/dir created: /home/shruti/workspaces/aerial_gym_ws/src/aerial_gym_simulator/aerial_gym/rl_training/rl_games/wandb/run-20250305_134417-8gm06wv3/files/diff.patch
+2025-03-05 13:44:20,653 INFO    Thread-12 :6660 [dir_watcher.py:_on_file_created():271] file/dir created: /home/shruti/workspaces/aerial_gym_ws/src/aerial_gym_simulator/aerial_gym/rl_training/rl_games/wandb/run-20250305_134417-8gm06wv3/files/output.log
+2025-03-05 13:44:20,653 INFO    Thread-12 :6660 [dir_watcher.py:_on_file_created():271] file/dir created: /home/shruti/workspaces/aerial_gym_ws/src/aerial_gym_simulator/aerial_gym/rl_training/rl_games/wandb/run-20250305_134417-8gm06wv3/files/requirements.txt
+2025-03-05 13:44:21,738 INFO    cpu       :6660 [interfaces.py:monitor():140] Process cpu has exited.
+2025-03-05 13:44:21,739 DEBUG   SystemMonitor:6660 [system_monitor.py:_start():172] Starting system metrics aggregation loop
+2025-03-05 13:44:21,742 INFO    memory    :6660 [interfaces.py:monitor():140] Process proc.memory.rssMB has exited.
+2025-03-05 13:44:21,747 DEBUG   SystemMonitor:6660 [system_monitor.py:_start():179] Finished system metrics aggregation loop
+2025-03-05 13:44:21,748 DEBUG   SystemMonitor:6660 [system_monitor.py:_start():183] Publishing last batch of metrics
+2025-03-05 13:44:21,750 DEBUG   SenderThread:6660 [sender.py:send():379] send: stats
+2025-03-05 13:44:22,654 INFO    Thread-12 :6660 [dir_watcher.py:_on_file_modified():288] file/dir modified: /home/shruti/workspaces/aerial_gym_ws/src/aerial_gym_simulator/aerial_gym/rl_training/rl_games/wandb/run-20250305_134417-8gm06wv3/files/output.log
+2025-03-05 13:44:22,722 INFO    MainThread:6660 [internal.py:handle_exit():76] Internal process exited
diff --git a/aerial_gym/rl_training/rl_games/wandb/run-20250305_134417-8gm06wv3/logs/debug.log b/aerial_gym/rl_training/rl_games/wandb/run-20250305_134417-8gm06wv3/logs/debug.log
new file mode 100644
index 0000000..b8bc786
--- /dev/null
+++ b/aerial_gym/rl_training/rl_games/wandb/run-20250305_134417-8gm06wv3/logs/debug.log
@@ -0,0 +1,28 @@
+2025-03-05 13:44:17,348 INFO    MainThread:6599 [wandb_setup.py:_flush():76] Current SDK version is 0.16.6
+2025-03-05 13:44:17,349 INFO    MainThread:6599 [wandb_setup.py:_flush():76] Configure stats pid to 6599
+2025-03-05 13:44:17,349 INFO    MainThread:6599 [wandb_setup.py:_flush():76] Loading settings from /home/shruti/.config/wandb/settings
+2025-03-05 13:44:17,349 INFO    MainThread:6599 [wandb_setup.py:_flush():76] Loading settings from /home/shruti/workspaces/aerial_gym_ws/src/aerial_gym_simulator/aerial_gym/rl_training/rl_games/wandb/settings
+2025-03-05 13:44:17,349 INFO    MainThread:6599 [wandb_setup.py:_flush():76] Loading settings from environment variables: {}
+2025-03-05 13:44:17,349 INFO    MainThread:6599 [wandb_setup.py:_flush():76] Applying setup settings: {'_disable_service': False}
+2025-03-05 13:44:17,349 INFO    MainThread:6599 [wandb_setup.py:_flush():76] Inferring run settings from compute environment: {'program_relpath': 'aerial_gym/rl_training/rl_games/runner.py', 'program_abspath': '/home/shruti/workspaces/aerial_gym_ws/src/aerial_gym_simulator/aerial_gym/rl_training/rl_games/runner.py', 'program': 'runner.py'}
+2025-03-05 13:44:17,349 INFO    MainThread:6599 [wandb_setup.py:_flush():76] Applying login settings: {}
+2025-03-05 13:44:17,349 INFO    MainThread:6599 [wandb_init.py:_log_setup():521] Logging user logs to /home/shruti/workspaces/aerial_gym_ws/src/aerial_gym_simulator/aerial_gym/rl_training/rl_games/wandb/run-20250305_134417-8gm06wv3/logs/debug.log
+2025-03-05 13:44:17,349 INFO    MainThread:6599 [wandb_init.py:_log_setup():522] Logging internal logs to /home/shruti/workspaces/aerial_gym_ws/src/aerial_gym_simulator/aerial_gym/rl_training/rl_games/wandb/run-20250305_134417-8gm06wv3/logs/debug-internal.log
+2025-03-05 13:44:17,349 INFO    MainThread:6599 [wandb_init.py:init():561] calling init triggers
+2025-03-05 13:44:17,349 INFO    MainThread:6599 [wandb_init.py:init():568] wandb.init called with sweep_config: {}
+config: {'params': {'seed': 10, 'algo': {'name': 'a2c_continuous'}, 'model': {'name': 'continuous_a2c_logstd'}, 'load_checkpoint': False, 'network': {'name': 'actor_critic', 'separate': False, 'space': {'continuous': {'mu_activation': 'None', 'sigma_activation': 'None', 'mu_init': {'name': 'default'}, 'sigma_init': {'name': 'const_initializer', 'val': 0}, 'fixed_sigma': True}}, 'mlp': {'units': [256, 128, 64], 'd2rl': False, 'activation': 'elu', 'initializer': {'name': 'default', 'scale': 2}}}, 'config': {'env_name': 'navigation_task', 'env_config': {'num_envs': 16, 'headless': False, 'use_warp': True}, 'name': 'gen_ppo', 'reward_shaper': {'scale_value': 0.1}, 'normalize_advantage': True, 'gamma': 0.98, 'tau': 0.95, 'ppo': True, 'learning_rate': '1e-4', 'lr_schedule': 'adaptive', 'kl_threshold': 0.016, 'save_best_after': 10, 'score_to_win': 100000, 'grad_norm': 1.0, 'entropy_coef': 0, 'truncate_grads': True, 'e_clip': 0.2, 'clip_value': False, 'num_actors': 16, 'horizon_length': 32, 'minibatch_size': 2048, 'mini_epochs': 4, 'critic_coef': 2, 'normalize_input': True, 'bounds_loss_coef': 0.0001, 'max_epochs': 500, 'normalize_value': True, 'use_diagnostics': True, 'value_bootstrap': True, 'use_smooth_clamp': False, 'player': {'use_vecenv': True}}}}
+2025-03-05 13:44:17,349 INFO    MainThread:6599 [wandb_init.py:init():611] starting backend
+2025-03-05 13:44:17,349 INFO    MainThread:6599 [wandb_init.py:init():615] setting up manager
+2025-03-05 13:44:17,350 INFO    MainThread:6599 [backend.py:_multiprocessing_setup():105] multiprocessing start_methods=fork,spawn,forkserver, using: spawn
+2025-03-05 13:44:17,350 INFO    MainThread:6599 [wandb_init.py:init():623] backend started and connected
+2025-03-05 13:44:17,353 INFO    MainThread:6599 [wandb_init.py:init():715] updated telemetry
+2025-03-05 13:44:17,366 INFO    MainThread:6599 [wandb_init.py:init():748] communicating run to backend with 90.0 second timeout
+2025-03-05 13:44:17,653 INFO    MainThread:6599 [wandb_run.py:_on_init():2357] communicating current version
+2025-03-05 13:44:17,715 INFO    MainThread:6599 [wandb_run.py:_on_init():2366] got version response upgrade_message: "wandb version 0.19.8 is available!  To upgrade, please run:\n $ pip install wandb --upgrade"
+
+2025-03-05 13:44:17,716 INFO    MainThread:6599 [wandb_init.py:init():799] starting run threads in backend
+2025-03-05 13:44:19,772 INFO    MainThread:6599 [wandb_run.py:_console_start():2335] atexit reg
+2025-03-05 13:44:19,772 INFO    MainThread:6599 [wandb_run.py:_redirect():2190] redirect: wrap_raw
+2025-03-05 13:44:19,772 INFO    MainThread:6599 [wandb_run.py:_redirect():2255] Wrapping output streams.
+2025-03-05 13:44:19,772 INFO    MainThread:6599 [wandb_run.py:_redirect():2280] Redirects installed.
+2025-03-05 13:44:19,773 INFO    MainThread:6599 [wandb_init.py:init():842] run started, returning control to user process
diff --git a/aerial_gym/rl_training/rl_games/wandb/run-20250305_134417-8gm06wv3/run-8gm06wv3.wandb b/aerial_gym/rl_training/rl_games/wandb/run-20250305_134417-8gm06wv3/run-8gm06wv3.wandb
new file mode 100644
index 0000000..993cff3
Binary files /dev/null and b/aerial_gym/rl_training/rl_games/wandb/run-20250305_134417-8gm06wv3/run-8gm06wv3.wandb differ
diff --git a/aerial_gym/rl_training/rl_games/wandb/run-20250305_134439-1fjwhm9a/files/code/aerial_gym/rl_training/rl_games/runner.py b/aerial_gym/rl_training/rl_games/wandb/run-20250305_134439-1fjwhm9a/files/code/aerial_gym/rl_training/rl_games/runner.py
new file mode 100644
index 0000000..bd45a3c
--- /dev/null
+++ b/aerial_gym/rl_training/rl_games/wandb/run-20250305_134439-1fjwhm9a/files/code/aerial_gym/rl_training/rl_games/runner.py
@@ -0,0 +1,331 @@
+import numpy as np
+import os
+import yaml
+
+
+import isaacgym
+
+
+from aerial_gym.registry.task_registry import task_registry
+from aerial_gym.utils.helpers import parse_arguments
+
+import gym
+from gym import spaces
+from argparse import Namespace
+
+from rl_games.common import env_configurations, vecenv
+
+import torch
+import distutils
+
+os.environ["XLA_PYTHON_CLIENT_PREALLOCATE"] = "false"
+# import warnings
+# warnings.filterwarnings("error")
+
+
+class ExtractObsWrapper(gym.Wrapper):
+    def __init__(self, env):
+        super().__init__(env)
+
+    def reset(self, **kwargs):
+        observations, *_ = super().reset(**kwargs)
+        return observations["observations"]
+
+    def step(self, action):
+        observations, rewards, terminated, truncated, infos = super().step(action)
+
+        dones = torch.where(
+            terminated | truncated,
+            torch.ones_like(terminated),
+            torch.zeros_like(terminated),
+        )
+
+        return (
+            observations["observations"],
+            rewards,
+            dones,
+            infos,
+        )
+
+
+class AERIALRLGPUEnv(vecenv.IVecEnv):
+    def __init__(self, config_name, num_actors, **kwargs):
+        self.env = env_configurations.configurations[config_name]["env_creator"](**kwargs)
+        self.env = ExtractObsWrapper(self.env)
+
+    def step(self, actions):
+        return self.env.step(actions)
+
+    def reset(self):
+        return self.env.reset()
+
+    def reset_done(self):
+        return self.env.reset_done()
+
+    def get_number_of_agents(self):
+        return self.env.get_number_of_agents()
+
+    def get_env_info(self):
+        info = {}
+        info["action_space"] = spaces.Box(
+            -np.ones(self.env.task_config.action_space_dim),
+            np.ones(self.env.task_config.action_space_dim),
+        )
+        info["observation_space"] = spaces.Box(
+            np.ones(self.env.task_config.observation_space_dim) * -np.Inf,
+            np.ones(self.env.task_config.observation_space_dim) * np.Inf,
+        )
+        print(info["action_space"], info["observation_space"])
+        return info
+
+
+env_configurations.register(
+    "position_setpoint_task",
+    {
+        "env_creator": lambda **kwargs: task_registry.make_task("position_setpoint_task", **kwargs),
+        "vecenv_type": "AERIAL-RLGPU",
+    },
+)
+
+env_configurations.register(
+    "position_setpoint_task_sim2real",
+    {
+        "env_creator": lambda **kwargs: task_registry.make_task(
+            "position_setpoint_task_sim2real", **kwargs
+        ),
+        "vecenv_type": "AERIAL-RLGPU",
+    },
+)
+
+env_configurations.register(
+    "position_setpoint_task_acceleration_sim2real",
+    {
+        "env_creator": lambda **kwargs: task_registry.make_task(
+            "position_setpoint_task_acceleration_sim2real", **kwargs
+        ),
+        "vecenv_type": "AERIAL-RLGPU",
+    },
+)
+
+env_configurations.register(
+    "navigation_task",
+    {
+        "env_creator": lambda **kwargs: task_registry.make_task("navigation_task", **kwargs),
+        "vecenv_type": "AERIAL-RLGPU",
+    },
+)
+
+env_configurations.register(
+    "position_setpoint_task_reconfigurable",
+    {
+        "env_creator": lambda **kwargs: task_registry.make_task(
+            "position_setpoint_task_reconfigurable", **kwargs
+        ),
+        "vecenv_type": "AERIAL-RLGPU",
+    },
+)
+
+env_configurations.register(
+    "position_setpoint_task_morphy",
+    {
+        "env_creator": lambda **kwargs: task_registry.make_task(
+            "position_setpoint_task_morphy", **kwargs
+        ),
+        "vecenv_type": "AERIAL-RLGPU",
+    },
+)
+
+env_configurations.register(
+    "position_setpoint_task_sim2real_end_to_end",
+    {
+        "env_creator": lambda **kwargs: task_registry.make_task(
+            "position_setpoint_task_sim2real_end_to_end", **kwargs
+        ),
+        "vecenv_type": "AERIAL-RLGPU",
+    },
+)
+
+vecenv.register(
+    "AERIAL-RLGPU",
+    lambda config_name, num_actors, **kwargs: AERIALRLGPUEnv(config_name, num_actors, **kwargs),
+)
+
+
+def get_args():
+    from isaacgym import gymutil
+
+    custom_parameters = [
+        {
+            "name": "--seed",
+            "type": int,
+            "default": 0,
+            "required": False,
+            "help": "Random seed, if larger than 0 will overwrite the value in yaml config.",
+        },
+        {
+            "name": "--tf",
+            "required": False,
+            "help": "run tensorflow runner",
+            "action": "store_true",
+        },
+        {
+            "name": "--train",
+            "required": False,
+            "help": "train network",
+            "action": "store_true",
+        },
+        {
+            "name": "--play",
+            "required": False,
+            "help": "play(test) network",
+            "action": "store_true",
+        },
+        {
+            "name": "--checkpoint",
+            "type": str,
+            "required": False,
+            "help": "path to checkpoint",
+        },
+        {
+            "name": "--file",
+            "type": str,
+            "default": "ppo_aerial_quad.yaml",
+            "required": False,
+            "help": "path to config",
+        },
+        {
+            "name": "--num_envs",
+            "type": int,
+            "default": "1024",
+            "help": "Number of environments to create. Overrides config file if provided.",
+        },
+        {
+            "name": "--sigma",
+            "type": float,
+            "required": False,
+            "help": "sets new sigma value in case if 'fixed_sigma: True' in yaml config",
+        },
+        {
+            "name": "--track",
+            "action": "store_true",
+            "help": "if toggled, this experiment will be tracked with Weights and Biases",
+        },
+        {
+            "name": "--wandb-project-name",
+            "type": str,
+            "default": "rl_games",
+            "help": "the wandb's project name",
+        },
+        {
+            "name": "--wandb-entity",
+            "type": str,
+            "default": None,
+            "help": "the entity (team) of wandb's project",
+        },
+        {
+            "name": "--task",
+            "type": str,
+            "default": "navigation_task",
+            "help": "Override task from config file if provided.",
+        },
+        {
+            "name": "--experiment_name",
+            "type": str,
+            "help": "Name of the experiment to run or load. Overrides config file if provided.",
+        },
+        {
+            "name": "--headless",
+            "type": lambda x: bool(distutils.util.strtobool(x)),
+            "default": "False",
+            "help": "Force display off at all times",
+        },
+        {
+            "name": "--horovod",
+            "action": "store_true",
+            "default": False,
+            "help": "Use horovod for multi-gpu training",
+        },
+        {
+            "name": "--rl_device",
+            "type": str,
+            "default": "cuda:0",
+            "help": "Device used by the RL algorithm, (cpu, gpu, cuda:0, cuda:1 etc..)",
+        },
+        {
+            "name": "--use_warp",
+            "type": lambda x: bool(distutils.util.strtobool(x)),
+            "default": "True",
+            "help": "Choose whether to use warp or Isaac Gym rendering pipeline.",
+        },
+    ]
+
+    # parse arguments
+    args = parse_arguments(description="RL Policy", custom_parameters=custom_parameters)
+
+    # name allignment
+    args.sim_device_id = args.compute_device_id
+    args.sim_device = args.sim_device_type
+    if args.sim_device == "cuda":
+        args.sim_device += f":{args.sim_device_id}"
+    return args
+
+
+def update_config(config, args):
+
+    if args["task"] is not None:
+        config["params"]["config"]["env_name"] = args["task"]
+    if args["experiment_name"] is not None:
+        config["params"]["config"]["name"] = args["experiment_name"]
+    config["params"]["config"]["env_config"]["headless"] = args["headless"]
+    config["params"]["config"]["env_config"]["num_envs"] = args["num_envs"]
+    config["params"]["config"]["env_config"]["use_warp"] = args["use_warp"]
+    if args["num_envs"] > 0:
+        config["params"]["config"]["num_actors"] = args["num_envs"]
+        # config['params']['config']['num_envs'] = args['num_envs']
+        config["params"]["config"]["env_config"]["num_envs"] = args["num_envs"]
+    if args["seed"] > 0:
+        config["params"]["seed"] = args["seed"]
+        config["params"]["config"]["env_config"]["seed"] = args["seed"]
+
+    config["params"]["config"]["player"] = {"use_vecenv": True}
+    return config
+
+
+if __name__ == "__main__":
+    os.makedirs("nn", exist_ok=True)
+    os.makedirs("runs", exist_ok=True)
+
+    args = vars(get_args())
+
+    config_name = args["file"]
+
+    print("Loading config: ", config_name)
+    with open(config_name, "r") as stream:
+        config = yaml.safe_load(stream)
+
+        config = update_config(config, args)
+
+        from rl_games.torch_runner import Runner
+
+        runner = Runner()
+        try:
+            runner.load(config)
+        except yaml.YAMLError as exc:
+            print(exc)
+
+    rank = int(os.getenv("LOCAL_RANK", "0"))
+    if args["track"] and rank == 0:
+        import wandb
+
+        wandb.init(
+            project=args["wandb_project_name"],
+            entity=args["wandb_entity"],
+            sync_tensorboard=True,
+            config=config,
+            monitor_gym=True,
+            save_code=True,
+        )
+    runner.run(args)
+
+    if args["track"] and rank == 0:
+        wandb.finish()
diff --git a/aerial_gym/rl_training/rl_games/wandb/run-20250305_134439-1fjwhm9a/files/conda-environment.yaml b/aerial_gym/rl_training/rl_games/wandb/run-20250305_134439-1fjwhm9a/files/conda-environment.yaml
new file mode 100644
index 0000000..b5e6902
--- /dev/null
+++ b/aerial_gym/rl_training/rl_games/wandb/run-20250305_134439-1fjwhm9a/files/conda-environment.yaml
@@ -0,0 +1,409 @@
+name: aerialgym
+channels:
+  - pytorch3d
+  - iopath
+  - fvcore
+  - pytorch
+  - nvidia
+  - nvidia/label/cuda-11.8.0
+  - conda-forge
+  - defaults
+  - https://repo.anaconda.com/pkgs/main
+  - https://repo.anaconda.com/pkgs/r
+dependencies:
+  - _libgcc_mutex=0.1=main
+  - _openmp_mutex=5.1=1_gnu
+  - absl-py=2.1.0=pyhd8ed1ab_0
+  - aiohttp=3.7.4.post0=py38h497a2fe_1
+  - antlr-python-runtime=4.9.3=pyhd8ed1ab_1
+  - anyio=4.5.0=pyhd8ed1ab_0
+  - appdirs=1.4.4=pyh9f0ad1d_0
+  - argon2-cffi=23.1.0=pyhd8ed1ab_0
+  - argon2-cffi-bindings=21.2.0=py38h01eb140_4
+  - arrow=1.3.0=pyhd8ed1ab_0
+  - asttokens=3.0.0=pyhd8ed1ab_0
+  - async-lru=2.0.4=pyhd8ed1ab_0
+  - async-timeout=3.0.1=py_1000
+  - attrs=24.2.0=pyh71513ae_0
+  - babel=2.16.0=pyhd8ed1ab_0
+  - backcall=0.2.0=pyh9f0ad1d_0
+  - beautifulsoup4=4.12.3=pyha770c72_0
+  - blas=1.0=mkl
+  - bleach=6.1.0=pyhd8ed1ab_0
+  - blinker=1.8.2=pyhd8ed1ab_0
+  - brotli=1.1.0=hb9d3cd8_2
+  - brotli-bin=1.1.0=hb9d3cd8_2
+  - brotli-python=1.0.9=py38hfa26641_7
+  - bullet-cpp=3.21=h43a58ef_1
+  - bzip2=1.0.8=h5eee18b_6
+  - c-ares=1.19.1=h5eee18b_0
+  - ca-certificates=2025.2.25=h06a4308_0
+  - cached-property=1.5.2=hd8ed1ab_1
+  - cached_property=1.5.2=pyha770c72_1
+  - cachetools=5.5.0=pyhd8ed1ab_0
+  - certifi=2024.8.30=pyhd8ed1ab_0
+  - cffi=1.15.0=py38h3931269_0
+  - chardet=4.0.0=py38h578d9bd_3
+  - charset-normalizer=3.4.0=pyhd8ed1ab_0
+  - click=8.1.7=unix_pyh707e725_0
+  - colorama=0.4.6=pyhd8ed1ab_0
+  - comm=0.2.2=pyhd8ed1ab_0
+  - cryptography=43.0.0=py38hdda0065_0
+  - cuda=11.8.0=0
+  - cuda-cccl=11.8.89=0
+  - cuda-command-line-tools=11.8.0=0
+  - cuda-compiler=11.8.0=0
+  - cuda-cudart=11.8.89=0
+  - cuda-cudart-dev=11.8.89=0
+  - cuda-cuobjdump=11.8.86=0
+  - cuda-cupti=11.8.87=0
+  - cuda-cuxxfilt=11.8.86=0
+  - cuda-demo-suite=11.8.86=0
+  - cuda-documentation=11.8.86=0
+  - cuda-driver-dev=11.8.89=0
+  - cuda-gdb=11.8.86=0
+  - cuda-libraries=11.8.0=0
+  - cuda-libraries-dev=11.8.0=0
+  - cuda-memcheck=11.8.86=0
+  - cuda-nsight=11.8.86=0
+  - cuda-nsight-compute=11.8.0=0
+  - cuda-nvcc=11.8.89=0
+  - cuda-nvdisasm=11.8.86=0
+  - cuda-nvml-dev=11.8.86=0
+  - cuda-nvprof=11.8.87=0
+  - cuda-nvprune=11.8.86=0
+  - cuda-nvrtc=11.8.89=0
+  - cuda-nvrtc-dev=11.8.89=0
+  - cuda-nvtx=11.8.86=0
+  - cuda-nvvp=11.8.87=0
+  - cuda-opencl=12.4.127=0
+  - cuda-profiler-api=11.8.86=0
+  - cuda-runtime=11.8.0=0
+  - cuda-sanitizer-api=11.8.86=0
+  - cuda-toolkit=11.8.0=0
+  - cuda-tools=11.8.0=0
+  - cuda-visual-tools=11.8.0=0
+  - cycler=0.12.1=pyhd8ed1ab_0
+  - dbus=1.13.18=hb2f20db_0
+  - debugpy=1.6.7=py38h6a678d5_0
+  - defusedxml=0.7.1=pyhd8ed1ab_0
+  - dill=0.3.9=pyhd8ed1ab_0
+  - docker-pycreds=0.4.0=py_0
+  - entrypoints=0.4=pyhd8ed1ab_0
+  - exceptiongroup=1.2.2=pyhd8ed1ab_0
+  - executing=2.1.0=pyhd8ed1ab_0
+  - expat=2.6.4=h5888daf_0
+  - fastcache=1.1.0=py38h7b6447c_0
+  - ffmpeg=4.3=hf484d3e_0
+  - filelock=3.13.1=py38h06a4308_0
+  - fontconfig=2.14.0=h8e229c2_0
+  - fqdn=1.5.1=pyhd8ed1ab_0
+  - freetype=2.10.4=h0708190_1
+  - fvcore=0.1.5.post20210915=py38
+  - gds-tools=1.4.0.31=0
+  - geos=3.10.2=h9c3ff4c_0
+  - giflib=5.2.2=h5eee18b_0
+  - glib=2.78.4=h6a678d5_0
+  - glib-tools=2.78.4=h6a678d5_0
+  - gmp=6.3.0=h6a678d5_0
+  - gmpy2=2.1.2=py38heeb90bb_0
+  - gnutls=3.6.15=he1e5248_0
+  - google-auth=2.35.0=pyhff2d567_0
+  - google-auth-oauthlib=1.0.0=pyhd8ed1ab_1
+  - grpcio=1.62.2=py38h6a678d5_0
+  - gst-plugins-base=1.14.1=h6a678d5_1
+  - gstreamer=1.14.1=h5eee18b_1
+  - gym-notices=0.0.8=pyhd8ed1ab_0
+  - h11=0.14.0=pyhd8ed1ab_0
+  - h2=4.1.0=pyhd8ed1ab_0
+  - hpack=4.0.0=pyh9f0ad1d_0
+  - httpcore=1.0.7=pyh29332c3_1
+  - httpx=0.27.2=pyhd8ed1ab_0
+  - hyperframe=6.0.1=pyhd8ed1ab_0
+  - icu=58.2=hf484d3e_1000
+  - idna=3.10=pyhd8ed1ab_0
+  - importlib-metadata=8.5.0=pyha770c72_0
+  - importlib_metadata=8.5.0=hd8ed1ab_1
+  - importlib_resources=6.4.5=pyhd8ed1ab_0
+  - intel-openmp=2021.4.0=h06a4308_3561
+  - iopath=0.1.9=py38
+  - ipykernel=6.29.5=pyh3099207_0
+  - ipython=8.12.2=pyh41d4057_0
+  - ipywidgets=8.1.5=pyhd8ed1ab_0
+  - isoduration=20.11.0=pyhd8ed1ab_0
+  - jbig=2.1=h7f98852_2003
+  - jedi=0.19.1=pyhd8ed1ab_0
+  - jinja2=3.1.4=pyhd8ed1ab_0
+  - jpeg=9e=h166bdaf_1
+  - json5=0.9.25=pyhd8ed1ab_0
+  - jsonpointer=3.0.0=py38h578d9bd_0
+  - jsonschema=4.23.0=pyhd8ed1ab_0
+  - jsonschema-specifications=2024.10.1=pyhd8ed1ab_0
+  - jsonschema-with-format-nongpl=4.23.0=hd8ed1ab_1
+  - jupyter=1.1.1=pyhd8ed1ab_0
+  - jupyter-lsp=2.2.5=pyhd8ed1ab_0
+  - jupyter_client=8.6.3=pyhd8ed1ab_0
+  - jupyter_console=6.6.3=pyhd8ed1ab_0
+  - jupyter_core=5.7.2=pyh31011fe_1
+  - jupyter_events=0.10.0=pyhd8ed1ab_0
+  - jupyter_server=2.14.2=pyhd8ed1ab_0
+  - jupyter_server_terminals=0.5.3=pyhd8ed1ab_0
+  - jupyterlab=4.2.5=pyhd8ed1ab_0
+  - jupyterlab_pygments=0.3.0=pyhd8ed1ab_1
+  - jupyterlab_server=2.27.3=pyhd8ed1ab_0
+  - jupyterlab_widgets=3.0.13=pyhd8ed1ab_0
+  - krb5=1.20.1=h143b758_1
+  - lame=3.100=h7b6447c_0
+  - lcms2=2.12=hddcbb42_0
+  - ld_impl_linux-64=2.40=h12ee557_0
+  - lerc=2.2.1=h9c3ff4c_0
+  - libabseil=20240116.2=cxx17_h6a678d5_0
+  - libblas=3.9.0=12_linux64_mkl
+  - libbrotlicommon=1.1.0=hb9d3cd8_2
+  - libbrotlidec=1.1.0=hb9d3cd8_2
+  - libbrotlienc=1.1.0=hb9d3cd8_2
+  - libcblas=3.9.0=12_linux64_mkl
+  - libclang=10.0.1=default_hde54327_1
+  - libcublas=11.11.3.6=0
+  - libcublas-dev=11.11.3.6=0
+  - libcufft=10.9.0.58=0
+  - libcufft-dev=10.9.0.58=0
+  - libcufile=1.9.1.3=0
+  - libcufile-dev=1.4.0.31=0
+  - libcurand=10.3.5.147=0
+  - libcurand-dev=10.3.0.86=0
+  - libcusolver=11.4.1.48=0
+  - libcusolver-dev=11.4.1.48=0
+  - libcusparse=11.7.5.86=0
+  - libcusparse-dev=11.7.5.86=0
+  - libdeflate=1.7=h7f98852_5
+  - libedit=3.1.20230828=h5eee18b_0
+  - libevent=2.1.12=hf998b51_1
+  - libexpat=2.6.4=h5888daf_0
+  - libffi=3.4.4=h6a678d5_1
+  - libgcc=14.2.0=h767d61c_2
+  - libgcc-ng=14.2.0=h69a702a_2
+  - libgfortran-ng=13.2.0=h69a702a_0
+  - libgfortran5=13.2.0=ha4646dd_0
+  - libglib=2.78.4=hdc74915_0
+  - libgomp=14.2.0=h767d61c_2
+  - libgrpc=1.62.2=h2d74bed_0
+  - libiconv=1.16=h5eee18b_3
+  - libidn2=2.3.4=h5eee18b_0
+  - libjpeg-turbo=2.0.0=h9bf148f_0
+  - liblapack=3.9.0=12_linux64_mkl
+  - libllvm10=10.0.1=he513fc3_3
+  - libnpp=11.8.0.86=0
+  - libnpp-dev=11.8.0.86=0
+  - libnvfatbin=12.4.127=0
+  - libnvjitlink=12.4.127=0
+  - libnvjpeg=11.9.0.86=0
+  - libnvjpeg-dev=11.9.0.86=0
+  - libopenblas=0.3.21=h043d6bf_0
+  - libpng=1.6.37=h21135ba_2
+  - libpq=12.20=hdbd6064_0
+  - libprotobuf=4.25.3=he621ea3_0
+  - libsodium=1.0.18=h36c2ea0_1
+  - libstdcxx=14.2.0=h8f9b012_2
+  - libstdcxx-ng=11.2.0=h1234567_1
+  - libtasn1=4.19.0=h5eee18b_0
+  - libtiff=4.3.0=hf544144_1
+  - libunistring=0.9.10=h27cfd23_0
+  - libuuid=2.38.1=h0b41bf4_0
+  - libwebp=1.2.2=h55f646e_0
+  - libwebp-base=1.2.2=h7f98852_1
+  - libxcb=1.17.0=h8a09558_0
+  - libxkbcommon=1.0.3=he3ba5ed_0
+  - libxml2=2.9.14=h74e7548_0
+  - llvm-openmp=14.0.6=h9e868ea_0
+  - lz4-c=1.9.4=h6a678d5_1
+  - markdown=3.6=pyhd8ed1ab_0
+  - markupsafe=2.1.1=py38h0a891b7_1
+  - matplotlib-base=3.7.2=py38h1128e8f_0
+  - matplotlib-inline=0.1.7=pyhd8ed1ab_0
+  - metis=5.1.0=hd0bcaf9_1007
+  - mistune=3.0.2=pyhd8ed1ab_0
+  - mkl=2021.4.0=h06a4308_640
+  - mkl-service=2.4.0=py38h7f8727e_0
+  - mkl_fft=1.3.1=py38hd3c417c_0
+  - mkl_random=1.2.2=py38h51133e4_0
+  - mpc=1.3.1=h5eee18b_0
+  - mpfr=4.2.1=h90cbb55_3
+  - mpmath=1.3.0=py38h06a4308_0
+  - multidict=6.0.2=py38h0a891b7_1
+  - munkres=1.1.4=pyh9f0ad1d_0
+  - nbclient=0.10.2=pyhd8ed1ab_0
+  - nbconvert-core=7.16.4=pyhff2d567_2
+  - nbformat=5.10.4=pyhd8ed1ab_0
+  - ncurses=6.4=h6a678d5_0
+  - nest-asyncio=1.6.0=pyhd8ed1ab_0
+  - nettle=3.7.3=hbbd107a_1
+  - ninja-base=1.12.1=hdb19cb5_0
+  - notebook=7.2.2=pyhd8ed1ab_0
+  - notebook-shim=0.2.4=pyhd8ed1ab_0
+  - nsight-compute=2022.3.0.22=0
+  - nspr=4.36=h5888daf_0
+  - nss=3.89.1=h6a678d5_0
+  - oauthlib=3.2.2=pyhd8ed1ab_0
+  - olefile=0.47=pyhd8ed1ab_0
+  - omegaconf=2.3.0=pyhd8ed1ab_0
+  - openh264=2.1.1=h4ff587b_0
+  - openjpeg=2.4.0=hb52868f_1
+  - openssl=3.4.1=h7b32b05_0
+  - overrides=7.7.0=pyhd8ed1ab_0
+  - packaging=24.2=pyhd8ed1ab_2
+  - pandas=1.4.2=py38h47df419_1
+  - pandocfilters=1.5.0=pyhd8ed1ab_0
+  - parso=0.8.4=pyhd8ed1ab_0
+  - pcre2=10.42=hebb0a14_1
+  - pexpect=4.9.0=pyhd8ed1ab_0
+  - pickleshare=0.7.5=py_1003
+  - pillow=9.4.0=py38h6a678d5_0
+  - pip=24.2=py38h06a4308_0
+  - pkgutil-resolve-name=1.3.10=pyhd8ed1ab_1
+  - platformdirs=4.3.6=pyhd8ed1ab_0
+  - plotly=5.24.1=pyhd8ed1ab_0
+  - portalocker=2.10.1=py38h578d9bd_0
+  - prometheus_client=0.21.0=pyhd8ed1ab_0
+  - prompt-toolkit=3.0.48=pyha770c72_0
+  - prompt_toolkit=3.0.48=hd8ed1ab_1
+  - pthread-stubs=0.4=hb9d3cd8_1002
+  - ptyprocess=0.7.0=pyhd3deb0d_0
+  - pure_eval=0.2.3=pyhd8ed1ab_0
+  - pyasn1=0.6.1=pyhd8ed1ab_1
+  - pyasn1-modules=0.4.1=pyhd8ed1ab_0
+  - pybullet=3.21=py38h43a58ef_1
+  - pycparser=2.22=pyhd8ed1ab_0
+  - pygments=2.18.0=pyhd8ed1ab_0
+  - pyjwt=2.9.0=pyhd8ed1ab_1
+  - pyopenssl=24.2.1=pyhd8ed1ab_2
+  - pyqt=5.15.4=py38hfa26641_0
+  - pyqt5-sip=12.9.0=py38hfa26641_0
+  - pysocks=1.7.1=pyha2e5f31_6
+  - python=3.8.20=he870216_0
+  - python-fastjsonschema=2.20.0=pyhd8ed1ab_0
+  - python-json-logger=2.0.7=pyhd8ed1ab_0
+  - python_abi=3.8=2_cp38
+  - pytorch=2.2.0=py3.8_cuda11.8_cudnn8.7.0_0
+  - pytorch-cuda=11.8=h7e8668a_6
+  - pytorch-mutex=1.0=cuda
+  - pytorch3d=0.7.8=py38_cu118_pyt220
+  - pytz=2024.2=pyhd8ed1ab_0
+  - pyu2f=0.1.5=pyhd8ed1ab_0
+  - pyyaml=6.0=py38h0a891b7_5
+  - pyzmq=25.1.2=py38h6a678d5_0
+  - qt-main=5.15.2=h327a75a_7
+  - re2=2022.04.01=h27087fc_0
+  - readline=8.2=h5eee18b_0
+  - referencing=0.35.1=pyhd8ed1ab_0
+  - requests=2.32.3=pyhd8ed1ab_0
+  - requests-oauthlib=2.0.0=pyhd8ed1ab_0
+  - rfc3339-validator=0.1.4=pyhd8ed1ab_0
+  - rfc3986-validator=0.1.1=pyh9f0ad1d_0
+  - rpds-py=0.20.0=py38h4005ec7_0
+  - rsa=4.9=pyhd8ed1ab_0
+  - send2trash=1.8.3=pyh0d859eb_0
+  - setuptools=75.1.0=py38h06a4308_0
+  - shapely=1.8.2=py38h97f7145_1
+  - sip=6.5.1=py38h709712a_2
+  - six=1.16.0=pyh6c4a22f_0
+  - sniffio=1.3.1=pyhd8ed1ab_0
+  - soupsieve=2.5=pyhd8ed1ab_1
+  - sqlite=3.45.3=h5eee18b_0
+  - stack_data=0.6.2=pyhd8ed1ab_0
+  - suitesparse=5.10.1=h9e50725_1
+  - sympy=1.5.1=py38_0
+  - tabulate=0.9.0=pyhd8ed1ab_1
+  - tbb=2021.5.0=h924138e_1
+  - tenacity=9.0.0=pyhd8ed1ab_0
+  - tensorboard=2.13.0=pyhd8ed1ab_0
+  - tensorboard-data-server=0.7.0=py38h52d8a92_1
+  - termcolor=2.4.0=pyhd8ed1ab_0
+  - terminado=0.18.1=pyh0d859eb_0
+  - tinycss2=1.4.0=pyhd8ed1ab_0
+  - tk=8.6.14=h39e8969_0
+  - toml=0.10.2=pyhd8ed1ab_0
+  - tomli=2.0.2=pyhd8ed1ab_0
+  - torchaudio=2.2.0=py38_cu118
+  - torchtriton=2.2.0=py38
+  - torchvision=0.17.0=py38_cu118
+  - tornado=6.4.1=py38hfb59056_0
+  - tqdm=4.67.1=pyhd8ed1ab_0
+  - traitlets=5.14.3=pyhd8ed1ab_0
+  - types-python-dateutil=2.9.0.20241003=pyhff2d567_0
+  - typing-extensions=4.12.2=hd8ed1ab_0
+  - typing_extensions=4.12.2=pyha770c72_0
+  - typing_utils=0.1.0=pyhd8ed1ab_0
+  - unicodedata2=15.1.0=py38h01eb140_0
+  - uri-template=1.3.0=pyhd8ed1ab_0
+  - urllib3=2.2.3=pyhd8ed1ab_0
+  - wcwidth=0.2.13=pyhd8ed1ab_0
+  - webcolors=24.8.0=pyhd8ed1ab_0
+  - webencodings=0.5.1=pyhd8ed1ab_2
+  - websocket-client=1.8.0=pyhd8ed1ab_0
+  - werkzeug=3.0.6=pyhd8ed1ab_0
+  - wheel=0.44.0=py38h06a4308_0
+  - widgetsnbextension=4.0.13=pyhd8ed1ab_0
+  - xorg-libx11=1.8.11=h4f16b4b_0
+  - xorg-libxau=1.0.12=hb9d3cd8_0
+  - xorg-libxdmcp=1.1.5=hb9d3cd8_0
+  - xorg-libxext=1.3.6=hb9d3cd8_0
+  - xz=5.6.4=h5eee18b_1
+  - yacs=0.1.8=pyhd8ed1ab_0
+  - yaml=0.2.5=h7f98852_2
+  - yarl=1.7.2=py38h0a891b7_2
+  - zeromq=4.3.5=h6a678d5_0
+  - zipp=3.21.0=pyhd8ed1ab_0
+  - zlib=1.2.13=h5eee18b_1
+  - zstandard=0.23.0=py38h2c38b39_0
+  - zstd=1.5.6=hc292b87_0
+  - pip:
+      - aerial-gym==2.0.0
+      - cloudpickle==3.1.1
+      - colorlog==6.9.0
+      - contourpy==1.1.1
+      - cython==3.0.12
+      - decorator==5.2.1
+      - farama-notifications==0.0.4
+      - faster-fifo==1.4.7
+      - fonttools==4.56.0
+      - freetype-py==2.5.1
+      - fsspec==2025.2.0
+      - gitdb==4.0.12
+      - gitpython==3.1.44
+      - gym==0.23.1
+      - gymnasium==0.29.1
+      - huggingface-hub==0.29.1
+      - imageio==2.35.1
+      - kiwisolver==1.4.7
+      - lxml==5.3.1
+      - matplotlib==3.7.5
+      - networkx==2.2
+      - ninja==1.11.1.3
+      - numpy==1.23.0
+      - opencv-python==4.11.0.86
+      - pathtools==0.1.2
+      - promise==2.3
+      - protobuf==3.20.3
+      - psutil==5.9.8
+      - pycollada==0.6
+      - pygame==2.1.0
+      - pyglet==2.1.3
+      - pyopengl==3.1.0
+      - pyparsing==3.1.4
+      - pyrender==0.1.45
+      - python-dateutil==2.9.0.post0
+      - rl-games==1.6.1
+      - sample-factory==2.1.1
+      - scipy==1.10.1
+      - sentry-sdk==2.22.0
+      - setproctitle==1.3.5
+      - shortuuid==1.0.13
+      - signal-slot-mp==1.0.5
+      - smmap==5.0.2
+      - tensorboardx==2.6.2.2
+      - threadpoolctl==3.5.0
+      - trimesh==4.6.3
+      - wandb==0.12.21
+      - warp-lang==1.0.0b5
+prefix: /home/shruti/miniconda3/envs/aerialgym
diff --git a/aerial_gym/rl_training/rl_games/wandb/run-20250305_134439-1fjwhm9a/files/config.yaml b/aerial_gym/rl_training/rl_games/wandb/run-20250305_134439-1fjwhm9a/files/config.yaml
new file mode 100644
index 0000000..45a5119
--- /dev/null
+++ b/aerial_gym/rl_training/rl_games/wandb/run-20250305_134439-1fjwhm9a/files/config.yaml
@@ -0,0 +1,94 @@
+wandb_version: 1
+
+params:
+  desc: null
+  value:
+    seed: 10
+    algo:
+      name: a2c_continuous
+    model:
+      name: continuous_a2c_logstd
+    load_checkpoint: false
+    network:
+      name: actor_critic
+      separate: false
+      space:
+        continuous:
+          mu_activation: None
+          sigma_activation: None
+          mu_init:
+            name: default
+          sigma_init:
+            name: const_initializer
+            val: 0
+          fixed_sigma: true
+      mlp:
+        units:
+        - 256
+        - 128
+        - 64
+        d2rl: false
+        activation: elu
+        initializer:
+          name: default
+          scale: 2
+    config:
+      env_name: navigation_task
+      env_config:
+        num_envs: 16
+        headless: false
+        use_warp: true
+      name: gen_ppo
+      reward_shaper:
+        scale_value: 0.1
+      normalize_advantage: true
+      gamma: 0.98
+      tau: 0.95
+      ppo: true
+      learning_rate: 1e-4
+      lr_schedule: adaptive
+      kl_threshold: 0.016
+      save_best_after: 10
+      score_to_win: 100000
+      grad_norm: 1.0
+      entropy_coef: 0
+      truncate_grads: true
+      e_clip: 0.2
+      clip_value: false
+      num_actors: 16
+      horizon_length: 32
+      minibatch_size: 2048
+      mini_epochs: 4
+      critic_coef: 2
+      normalize_input: true
+      bounds_loss_coef: 0.0001
+      max_epochs: 500
+      normalize_value: true
+      use_diagnostics: true
+      value_bootstrap: true
+      use_smooth_clamp: false
+      player:
+        use_vecenv: true
+_wandb:
+  desc: null
+  value:
+    code_path: code/aerial_gym/rl_training/rl_games/runner.py
+    python_version: 3.8.20
+    cli_version: 0.16.6
+    framework: torch
+    is_jupyter_run: false
+    is_kaggle_kernel: false
+    start_time: 1741200279.0
+    t:
+      1:
+      - 1
+      - 55
+      3:
+      - 16
+      - 23
+      - 35
+      4: 3.8.20
+      5: 0.16.6
+      8:
+      - 5
+      13: linux-x86_64
diff --git a/aerial_gym/rl_training/rl_games/wandb/run-20250305_134439-1fjwhm9a/files/diff.patch b/aerial_gym/rl_training/rl_games/wandb/run-20250305_134439-1fjwhm9a/files/diff.patch
new file mode 100644
index 0000000..a7ff8db
--- /dev/null
+++ b/aerial_gym/rl_training/rl_games/wandb/run-20250305_134439-1fjwhm9a/files/diff.patch
@@ -0,0 +1,38 @@
+diff --git a/aerial_gym/config/task_config/navigation_task_config.py b/aerial_gym/config/task_config/navigation_task_config.py
+index 7ecbda5..2f838d7 100644
+--- a/aerial_gym/config/task_config/navigation_task_config.py
++++ b/aerial_gym/config/task_config/navigation_task_config.py
+@@ -19,7 +19,7 @@ class task_config:
+     episode_len_steps = 100  # real physics time for simulation is this value multiplied by sim.dt
+ 
+     return_state_before_reset = (
+-        False  # False as usually state is returned for next episode after reset
++        True  # False as usually state is returned for next episode after reset
+     )
+     # user can set the above to true if they so desire
+ 
+diff --git a/aerial_gym/rl_training/rl_games/runner.py b/aerial_gym/rl_training/rl_games/runner.py
+index 7e8ffb4..bd45a3c 100644
+--- a/aerial_gym/rl_training/rl_games/runner.py
++++ b/aerial_gym/rl_training/rl_games/runner.py
+@@ -255,7 +255,7 @@ def get_args():
+             "name": "--use_warp",
+             "type": lambda x: bool(distutils.util.strtobool(x)),
+             "default": "True",
+-            "help": "Choose whether to use warp or Isaac Gym rendeing pipeline.",
++            "help": "Choose whether to use warp or Isaac Gym rendering pipeline.",
+         },
+     ]
+ 
+diff --git a/aerial_gym/task/__init__.py b/aerial_gym/task/__init__.py
+index 7dd966d..7975a4d 100644
+--- a/aerial_gym/task/__init__.py
++++ b/aerial_gym/task/__init__.py
+@@ -95,5 +95,5 @@ task_registry.register_task(
+ 
+ ## Uncomment this to use custom tasks
+ 
+-# from aerial_gym.task.custom_task.custom_task import CustomTask
+-# task_registry.register_task("custom_task", CustomTask, custom_task.task_config)
++#from aerial_gym.task.custom_task.custom_task import CustomTask
++#task_registry.register_task("custom_task", CustomTask, custom_task.task_config)
diff --git a/aerial_gym/rl_training/rl_games/wandb/run-20250305_134439-1fjwhm9a/files/output.log b/aerial_gym/rl_training/rl_games/wandb/run-20250305_134439-1fjwhm9a/files/output.log
new file mode 100644
index 0000000..197b631
--- /dev/null
+++ b/aerial_gym/rl_training/rl_games/wandb/run-20250305_134439-1fjwhm9a/files/output.log
@@ -0,0 +1,57 @@
+Started to play
+[BasePlayer] Creating vecenv:  navigation_task
+[isaacgym:gymutil.py] Unknown args:  ['--file=./ppo_aerial_quad_navigation.yaml', '--play', '--checkpoint=./runs/gen_ppo_26-16-11-42/nn/last_gen_ppo_ep_500_rew__377.14606_.pth', '--track', 'wandb-project-name=Trained_RL_Navigation', 'wandb-entity=shrutiroy03']
+[37m[6304 ms][base_task] - INFO : Setting seed: 1754906297 (base_task.py:38)
+[37m[6305 ms][navigation_task] - INFO : Building environment for navigation task. (navigation_task.py:44)
+[37m[6305 ms][navigation_task] - INFO : Sim Name: base_sim, Env Name: env_with_obstacles, Robot Name: lmf2, Controller Name: lmf2_velocity_control (navigation_task.py:45)
+[37m[6305 ms][env_manager] - INFO : Populating environments. (env_manager.py:73)
+[37m[6305 ms][env_manager] - INFO : Creating simulation instance. (env_manager.py:87)
+[37m[6305 ms][env_manager] - INFO : Instantiating IGE object. (env_manager.py:88)
+[37m[6305 ms][IsaacGymEnvManager] - INFO : Creating Isaac Gym Environment (IGE_env_manager.py:41)
+[37m[6305 ms][IsaacGymEnvManager] - INFO : Acquiring gym object (IGE_env_manager.py:73)
+[37m[6306 ms][IsaacGymEnvManager] - INFO : Acquired gym object (IGE_env_manager.py:75)
+[37m[6307 ms][IsaacGymEnvManager] - INFO : Fixing devices (IGE_env_manager.py:89)
+[37m[6307 ms][IsaacGymEnvManager] - INFO : Using GPU pipeline for simulation. (IGE_env_manager.py:102)
+[37m[6307 ms][IsaacGymEnvManager] - INFO : Sim Device type: cuda, Sim Device ID: 0 (IGE_env_manager.py:105)
+[37m[6307 ms][IsaacGymEnvManager] - INFO : Graphics Device ID: 0 (IGE_env_manager.py:119)
+[37m[6307 ms][IsaacGymEnvManager] - INFO : Creating Isaac Gym Simulation Object (IGE_env_manager.py:120)
+[33m[6307 ms][IsaacGymEnvManager] - WARNING : If you have set the CUDA_VISIBLE_DEVICES environment variable, please ensure that you set it
+[33mto a particular one that works for your system to use the viewer or Isaac Gym cameras.
+[33mIf you want to run parallel simulations on multiple GPUs with camera sensors,
+[33mplease disable Isaac Gym and use warp (by setting use_warp=True), set the viewer to headless. (IGE_env_manager.py:127)
+[33m[6307 ms][IsaacGymEnvManager] - WARNING : If you see a segfault in the next lines, it is because of the discrepancy between the CUDA device and the graphics device.
+[33mPlease ensure that the CUDA device and the graphics device are the same. (IGE_env_manager.py:132)
+[37m[7213 ms][IsaacGymEnvManager] - INFO : Created Isaac Gym Simulation Object (IGE_env_manager.py:136)
+[37m[7213 ms][IsaacGymEnvManager] - INFO : Created Isaac Gym Environment (IGE_env_manager.py:43)
+[37m[7332 ms][env_manager] - INFO : IGE object instantiated. (env_manager.py:109)
+[37m[7333 ms][env_manager] - INFO : Creating warp environment. (env_manager.py:112)
+[37m[7333 ms][env_manager] - INFO : Warp environment created. (env_manager.py:114)
+[37m[7333 ms][env_manager] - INFO : Creating robot manager. (env_manager.py:118)
+[37m[7333 ms][BaseRobot] - INFO : [DONE] Initializing controller (base_robot.py:26)
+[37m[7333 ms][BaseRobot] - INFO : Initializing controller lmf2_velocity_control (base_robot.py:29)
+[33m[7333 ms][base_multirotor] - WARNING : Creating 16 multirotors. (base_multirotor.py:32)
+[37m[7333 ms][env_manager] - INFO : [DONE] Creating robot manager. (env_manager.py:123)
+[37m[7333 ms][env_manager] - INFO : [DONE] Creating simulation instance. (env_manager.py:125)
+[37m[7333 ms][asset_loader] - INFO : Loading asset: model.urdf for the first time. Next use of this asset will be via the asset buffer. (asset_loader.py:71)
+[37m[7334 ms][asset_loader] - INFO : Loading asset: panel.urdf for the first time. Next use of this asset will be via the asset buffer. (asset_loader.py:71)
+[37m[7336 ms][asset_loader] - INFO : Loading asset: 0_5_x_0_5_wall.urdf for the first time. Next use of this asset will be via the asset buffer. (asset_loader.py:71)
+[37m[7337 ms][asset_loader] - INFO : Loading asset: 1_x_1_wall.urdf for the first time. Next use of this asset will be via the asset buffer. (asset_loader.py:71)
+[37m[7338 ms][asset_loader] - INFO : Loading asset: cuboidal_rod.urdf for the first time. Next use of this asset will be via the asset buffer. (asset_loader.py:71)
+[37m[7339 ms][asset_loader] - INFO : Loading asset: left_wall.urdf for the first time. Next use of this asset will be via the asset buffer. (asset_loader.py:71)
+[37m[7340 ms][asset_loader] - INFO : Loading asset: right_wall.urdf for the first time. Next use of this asset will be via the asset buffer. (asset_loader.py:71)
+[37m[7341 ms][asset_loader] - INFO : Loading asset: back_wall.urdf for the first time. Next use of this asset will be via the asset buffer. (asset_loader.py:71)
+[37m[7342 ms][asset_loader] - INFO : Loading asset: front_wall.urdf for the first time. Next use of this asset will be via the asset buffer. (asset_loader.py:71)
+[37m[7343 ms][asset_loader] - INFO : Loading asset: bottom_wall.urdf for the first time. Next use of this asset will be via the asset buffer. (asset_loader.py:71)
+[37m[7343 ms][asset_loader] - INFO : Loading asset: top_wall.urdf for the first time. Next use of this asset will be via the asset buffer. (asset_loader.py:71)
+[37m[7344 ms][asset_loader] - INFO : Loading asset: small_cube.urdf for the first time. Next use of this asset will be via the asset buffer. (asset_loader.py:71)
+[37m[7346 ms][env_manager] - INFO : Populating environment 0 (env_manager.py:179)
+[33m[7451 ms][robot_manager] - WARNING : 
+[33mRobot mass: 1.2400000467896461,
+[33mInertia: tensor([[0.0134, 0.0000, 0.0000],
+[33m        [0.0000, 0.0144, 0.0000],
+[33m        [0.0000, 0.0000, 0.0138]], device='cuda:0'),
+[33mRobot COM: tensor([[0., 0., 0., 1.]], device='cuda:0') (robot_manager.py:427)
+[33m[7452 ms][robot_manager] - WARNING : Calculated robot mass and inertia for this robot. This code assumes that your robot is the same across environments. (robot_manager.py:430)
+[31m[7452 ms][robot_manager] - CRITICAL : If your robot differs across environments you need to perform this computation for each different robot here. (robot_manager.py:433)
+[37m[7477 ms][env_manager] - INFO : [DONE] Populating environments. (env_manager.py:75)
+[33m[7488 ms][IsaacGymEnvManager] - WARNING : Headless: False (IGE_env_manager.py:424)
diff --git a/aerial_gym/rl_training/rl_games/wandb/run-20250305_134439-1fjwhm9a/files/requirements.txt b/aerial_gym/rl_training/rl_games/wandb/run-20250305_134439-1fjwhm9a/files/requirements.txt
new file mode 100644
index 0000000..a906a9d
--- /dev/null
+++ b/aerial_gym/rl_training/rl_games/wandb/run-20250305_134439-1fjwhm9a/files/requirements.txt
@@ -0,0 +1,264 @@
+Brotli==1.0.9
+Cython==3.0.12
+Farama-Notifications==0.0.4
+GitPython==3.1.43
+GitPython==3.1.44
+Jinja2==3.1.4
+Markdown==3.6
+MarkupSafe==2.1.1
+Pillow==9.4.0
+PyJWT==2.9.0
+PyOpenGL==3.1.0
+PyQt5-sip==12.9.0
+PyQt5==5.15.4
+PySocks==1.7.1
+PyYAML==6.0
+Pygments==2.18.0
+Send2Trash==1.8.3
+Shapely==1.8.2
+Werkzeug==3.0.6
+absl-py==2.1.0
+aerial_gym==2.0.0
+aiohttp==3.7.4.post0
+antlr4-python3-runtime==4.9.3
+anyio==4.5.0
+appdirs==1.4.4
+argon2-cffi-bindings==21.2.0
+argon2-cffi==23.1.0
+arrow==1.3.0
+asttokens==3.0.0
+async-lru==2.0.4
+async-timeout==3.0.1
+attrs==24.2.0
+autocommand==2.2.2
+babel==2.16.0
+backcall==0.2.0
+backports.tarfile==1.2.0
+beautifulsoup4==4.12.3
+bleach==6.1.0
+blinker==1.8.2
+cached-property==1.5.2
+cachetools==5.5.0
+certifi==2024.8.30
+cffi==1.15.0
+chardet==4.0.0
+charset-normalizer==3.4.0
+click==8.1.7
+cloudpickle==3.1.0
+cloudpickle==3.1.1
+colorama==0.4.6
+colorlog==6.9.0
+comm==0.2.2
+contourpy==1.0.2
+contourpy==1.1.1
+cryptography==43.0.0
+cycler==0.12.1
+debugpy==1.6.7
+decorator==5.1.1
+decorator==5.2.1
+defusedxml==0.7.1
+dill==0.3.9
+docker-pycreds==0.4.0
+entrypoints==0.4
+exceptiongroup==1.2.2
+executing==2.1.0
+fastcache==1.1.0
+faster-fifo==1.4.7
+fastjsonschema==2.20.0
+filelock==3.13.1
+fonttools==4.53.1
+fonttools==4.56.0
+fqdn==1.5.1
+freetype-py==2.5.1
+fsspec==2025.2.0
+fvcore==0.1.5.post20210915
+gitdb==4.0.11
+gitdb==4.0.12
+gmpy2==2.1.2
+google-auth-oauthlib==1.0.0
+google-auth==2.35.0
+grpcio==1.62.2
+gym-notices==0.0.8
+gym==0.23.1
+gym==0.26.1
+gymnasium==0.29.1
+h11==0.14.0
+h2==4.1.0
+hpack==4.0.0
+httpcore==1.0.7
+httpx==0.27.2
+huggingface-hub==0.29.1
+hyperframe==6.0.1
+idna==3.10
+imageio==2.35.1
+importlib_metadata==8.0.0
+importlib_metadata==8.5.0
+importlib_resources==6.4.0
+importlib_resources==6.4.5
+inflect==7.3.1
+iopath==0.1.9
+ipykernel==6.29.5
+ipython==8.12.2
+ipywidgets==8.1.5
+isaacgym==1.0rc4
+isoduration==20.11.0
+jaraco.collections==5.1.0
+jaraco.context==5.3.0
+jaraco.functools==4.0.1
+jaraco.text==3.12.1
+jedi==0.19.1
+json5==0.9.25
+jsonpointer==3.0.0
+jsonschema-specifications==2024.10.1
+jsonschema==4.23.0
+jupyter-console==6.6.3
+jupyter-events==0.10.0
+jupyter-lsp==2.2.5
+jupyter==1.1.1
+jupyter_client==8.6.3
+jupyter_core==5.7.2
+jupyter_server==2.14.2
+jupyter_server_terminals==0.5.3
+jupyterlab==4.2.5
+jupyterlab_pygments==0.3.0
+jupyterlab_server==2.27.3
+jupyterlab_widgets==3.0.13
+kiwisolver==1.4.2
+kiwisolver==1.4.7
+lxml==5.3.1
+matplotlib-inline==0.1.7
+matplotlib==3.7.2
+matplotlib==3.7.5
+mistune==3.0.2
+mkl-fft==1.3.1
+mkl-random==1.2.2
+mkl-service==2.4.0
+more-itertools==10.3.0
+mpmath==1.3.0
+multidict==6.0.2
+munkres==1.1.4
+nbclient==0.10.2
+nbconvert==7.16.4
+nbformat==5.10.4
+nest_asyncio==1.6.0
+networkx==2.2
+networkx==3.1
+ninja==1.11.1.3
+notebook==7.2.2
+notebook_shim==0.2.4
+numpy==1.23.0
+oauthlib==3.2.2
+olefile==0.47
+omegaconf==2.3.0
+opencv-python==4.11.0.86
+overrides==7.7.0
+packaging==24.1
+packaging==24.2
+pandas==1.4.2
+pandocfilters==1.5.0
+parso==0.8.4
+pathtools==0.1.2
+pexpect==4.9.0
+pickleshare==0.7.5
+pip==24.2
+pkgutil_resolve_name==1.3.10
+platformdirs==4.2.2
+platformdirs==4.3.6
+plotly==5.24.1
+portalocker==2.10.1
+prometheus_client==0.21.0
+promise==2.3
+prompt_toolkit==3.0.48
+protobuf==3.20.3
+protobuf==4.25.3
+psutil==5.9.8
+psutil==6.0.0
+ptyprocess==0.7.0
+pure_eval==0.2.3
+pyOpenSSL==24.2.1
+pyasn1==0.6.1
+pyasn1_modules==0.4.1
+pybullet==3.2.0
+pycollada==0.6
+pycparser==2.22
+pygame==2.1.0
+pyglet==2.1.3
+pyparsing==3.0.9
+pyparsing==3.1.4
+pyrender==0.1.45
+python-dateutil==2.9.0
+python-dateutil==2.9.0.post0
+python-json-logger==2.0.7
+pytorch3d==0.7.8
+pytz==2024.2
+pyu2f==0.1.5
+pyzmq==25.1.2
+referencing==0.35.1
+requests-oauthlib==2.0.0
+requests==2.32.3
+rfc3339-validator==0.1.4
+rfc3986-validator==0.1.1
+rl_games==1.6.1
+rpds-py==0.20.0
+rsa==4.9
+sample-factory==2.1.1
+scipy==1.10.1
+sentry-sdk==2.19.2
+sentry-sdk==2.22.0
+setproctitle==1.3.3
+setproctitle==1.3.5
+setuptools==75.1.0
+shortuuid==1.0.13
+signal-slot-mp==1.0.5
+sip==6.5.1
+six==1.16.0
+smmap==5.0.0
+smmap==5.0.2
+sniffio==1.3.1
+soupsieve==2.5
+stack-data==0.6.2
+sympy==1.5.1
+tabulate==0.9.0
+tenacity==9.0.0
+tensorboard==2.13.0
+tensorboardX==2.6.2.2
+tensorboard_data_server==0.7.0
+termcolor==2.4.0
+terminado==0.18.1
+threadpoolctl==3.5.0
+tinycss2==1.4.0
+toml==0.10.2
+tomli==2.0.1
+tomli==2.0.2
+torch==2.2.0
+torchaudio==2.2.0
+torchvision==0.17.0
+tornado==6.4.1
+tqdm==4.67.1
+traitlets==5.14.3
+trimesh==4.6.3
+triton==2.2.0
+typeguard==4.3.0
+types-python-dateutil==2.9.0.20241003
+typing-utils==0.1.0
+typing_extensions==4.12.2
+typing_extensions==4.12.2
+unicodedata2==15.1.0
+urdfpy==0.0.22
+uri-template==1.3.0
+urllib3==2.2.3
+wandb==0.12.21
+wandb==0.16.6
+warp-lang==1.0.0b5
+wcwidth==0.2.13
+webcolors==24.8.0
+webencodings==0.5.1
+websocket-client==1.8.0
+wheel==0.43.0
+wheel==0.44.0
+widgetsnbextension==4.0.13
+yacs==0.1.8
+yarl==1.7.2
+zipp==3.19.2
+zipp==3.21.0
+zstandard==0.23.0
\ No newline at end of file
diff --git a/aerial_gym/rl_training/rl_games/wandb/run-20250305_134439-1fjwhm9a/files/wandb-metadata.json b/aerial_gym/rl_training/rl_games/wandb/run-20250305_134439-1fjwhm9a/files/wandb-metadata.json
new file mode 100644
index 0000000..833d5d1
--- /dev/null
+++ b/aerial_gym/rl_training/rl_games/wandb/run-20250305_134439-1fjwhm9a/files/wandb-metadata.json
@@ -0,0 +1,156 @@
+{
+    "os": "Linux-6.5.0-44-generic-x86_64-with-glibc2.17",
+    "python": "3.8.20",
+    "heartbeatAt": "2025-03-05T18:44:40.064758",
+    "startedAt": "2025-03-05T18:44:39.725016",
+    "docker": null,
+    "cuda": null,
+    "args": [
+        "--file=./ppo_aerial_quad_navigation.yaml",
+        "--num_envs=16",
+        "--play",
+        "--checkpoint=./runs/gen_ppo_26-16-11-42/nn/last_gen_ppo_ep_500_rew__377.14606_.pth",
+        "--track",
+        "wandb-project-name=Trained_RL_Navigation",
+        "wandb-entity=shrutiroy03"
+    ],
+    "state": "running",
+    "program": "runner.py",
+    "codePathLocal": "runner.py",
+    "codePath": "aerial_gym/rl_training/rl_games/runner.py",
+    "git": {
+        "remote": "https://github.com/ntnu-arl/aerial_gym_simulator.git",
+        "commit": "85114e7514ed0f3f8cfecfa23c40dad106c528a1"
+    },
+    "email": null,
+    "root": "/home/shruti/workspaces/aerial_gym_ws/src/aerial_gym_simulator",
+    "host": "saferoboticslab-ASUS-TUF-Gaming-F15-FX507ZM-FX507ZM",
+    "username": "shruti",
+    "executable": "/home/shruti/miniconda3/envs/aerialgym/bin/python3",
+    "cpu_count": 14,
+    "cpu_count_logical": 20,
+    "cpu_freq": {
+        "current": 1365.84055,
+        "min": 400.0,
+        "max": 4180.0
+    },
+    "cpu_freq_per_core": [
+        {
+            "current": 2594.846,
+            "min": 400.0,
+            "max": 4600.0
+        },
+        {
+            "current": 400.0,
+            "min": 400.0,
+            "max": 4600.0
+        },
+        {
+            "current": 2388.962,
+            "min": 400.0,
+            "max": 4600.0
+        },
+        {
+            "current": 400.0,
+            "min": 400.0,
+            "max": 4600.0
+        },
+        {
+            "current": 3884.603,
+            "min": 400.0,
+            "max": 4700.0
+        },
+        {
+            "current": 2869.356,
+            "min": 400.0,
+            "max": 4700.0
+        },
+        {
+            "current": 400.338,
+            "min": 400.0,
+            "max": 4700.0
+        },
+        {
+            "current": 400.0,
+            "min": 400.0,
+            "max": 4700.0
+        },
+        {
+            "current": 2679.777,
+            "min": 400.0,
+            "max": 4600.0
+        },
+        {
+            "current": 2470.393,
+            "min": 400.0,
+            "max": 4600.0
+        },
+        {
+            "current": 1593.754,
+            "min": 400.0,
+            "max": 4600.0
+        },
+        {
+            "current": 1652.652,
+            "min": 400.0,
+            "max": 4600.0
+        },
+        {
+            "current": 400.234,
+            "min": 400.0,
+            "max": 3500.0
+        },
+        {
+            "current": 400.0,
+            "min": 400.0,
+            "max": 3500.0
+        },
+        {
+            "current": 400.0,
+            "min": 400.0,
+            "max": 3500.0
+        },
+        {
+            "current": 400.0,
+            "min": 400.0,
+            "max": 3500.0
+        },
+        {
+            "current": 400.0,
+            "min": 400.0,
+            "max": 3500.0
+        },
+        {
+            "current": 400.0,
+            "min": 400.0,
+            "max": 3500.0
+        },
+        {
+            "current": 400.0,
+            "min": 400.0,
+            "max": 3500.0
+        },
+        {
+            "current": 665.296,
+            "min": 400.0,
+            "max": 3500.0
+        }
+    ],
+    "disk": {
+        "/": {
+            "total": 937.3305015563965,
+            "used": 231.7351951599121
+        }
+    },
+    "gpu": "NVIDIA GeForce RTX 3060 Laptop GPU",
+    "gpu_count": 1,
+    "gpu_devices": [
+        {
+            "name": "NVIDIA GeForce RTX 3060 Laptop GPU",
+            "memory_total": 6442450944
+        }
+    ],
+    "memory": {
+        "total": 15.238018035888672
+    }
+}
diff --git a/aerial_gym/rl_training/rl_games/wandb/run-20250305_134439-1fjwhm9a/logs/debug-internal.log b/aerial_gym/rl_training/rl_games/wandb/run-20250305_134439-1fjwhm9a/logs/debug-internal.log
new file mode 100644
index 0000000..f4ea133
--- /dev/null
+++ b/aerial_gym/rl_training/rl_games/wandb/run-20250305_134439-1fjwhm9a/logs/debug-internal.log
@@ -0,0 +1,65 @@
+2025-03-05 13:44:39,729 INFO    StreamThr :6827 [internal.py:wandb_internal():86] W&B internal server running at pid: 6827, started at: 2025-03-05 13:44:39.729416
+2025-03-05 13:44:39,731 DEBUG   HandlerThread:6827 [handler.py:handle_request():146] handle_request: status
+2025-03-05 13:44:39,732 INFO    WriterThread:6827 [datastore.py:open_for_write():87] open: /home/shruti/workspaces/aerial_gym_ws/src/aerial_gym_simulator/aerial_gym/rl_training/rl_games/wandb/run-20250305_134439-1fjwhm9a/run-1fjwhm9a.wandb
+2025-03-05 13:44:39,732 DEBUG   SenderThread:6827 [sender.py:send():379] send: header
+2025-03-05 13:44:39,744 DEBUG   SenderThread:6827 [sender.py:send():379] send: run
+2025-03-05 13:44:39,969 INFO    SenderThread:6827 [dir_watcher.py:__init__():211] watching files in: /home/shruti/workspaces/aerial_gym_ws/src/aerial_gym_simulator/aerial_gym/rl_training/rl_games/wandb/run-20250305_134439-1fjwhm9a/files
+2025-03-05 13:44:39,970 INFO    SenderThread:6827 [sender.py:_start_run_threads():1124] run started: 1fjwhm9a with start time 1741200279.729067
+2025-03-05 13:44:39,981 DEBUG   HandlerThread:6827 [handler.py:handle_request():146] handle_request: check_version
+2025-03-05 13:44:39,981 DEBUG   SenderThread:6827 [sender.py:send_request():406] send_request: check_version
+2025-03-05 13:44:40,038 DEBUG   HandlerThread:6827 [handler.py:handle_request():146] handle_request: run_start
+2025-03-05 13:44:40,048 DEBUG   HandlerThread:6827 [system_info.py:__init__():26] System info init
+2025-03-05 13:44:40,048 DEBUG   HandlerThread:6827 [system_info.py:__init__():41] System info init done
+2025-03-05 13:44:40,048 INFO    HandlerThread:6827 [system_monitor.py:start():194] Starting system monitor
+2025-03-05 13:44:40,048 INFO    SystemMonitor:6827 [system_monitor.py:_start():158] Starting system asset monitoring threads
+2025-03-05 13:44:40,048 INFO    HandlerThread:6827 [system_monitor.py:probe():214] Collecting system info
+2025-03-05 13:44:40,049 INFO    SystemMonitor:6827 [interfaces.py:start():190] Started cpu monitoring
+2025-03-05 13:44:40,050 INFO    SystemMonitor:6827 [interfaces.py:start():190] Started disk monitoring
+2025-03-05 13:44:40,051 INFO    SystemMonitor:6827 [interfaces.py:start():190] Started gpu monitoring
+2025-03-05 13:44:40,052 INFO    SystemMonitor:6827 [interfaces.py:start():190] Started memory monitoring
+2025-03-05 13:44:40,052 INFO    SystemMonitor:6827 [interfaces.py:start():190] Started network monitoring
+2025-03-05 13:44:40,064 DEBUG   HandlerThread:6827 [system_info.py:probe():150] Probing system
+2025-03-05 13:44:40,069 DEBUG   HandlerThread:6827 [system_info.py:_probe_git():135] Probing git
+2025-03-05 13:44:40,076 DEBUG   HandlerThread:6827 [system_info.py:_probe_git():143] Probing git done
+2025-03-05 13:44:40,077 DEBUG   HandlerThread:6827 [system_info.py:probe():198] Probing system done
+2025-03-05 13:44:40,077 DEBUG   HandlerThread:6827 [system_monitor.py:probe():223] {'os': 'Linux-6.5.0-44-generic-x86_64-with-glibc2.17', 'python': '3.8.20', 'heartbeatAt': '2025-03-05T18:44:40.064758', 'startedAt': '2025-03-05T18:44:39.725016', 'docker': None, 'cuda': None, 'args': ('--file=./ppo_aerial_quad_navigation.yaml', '--num_envs=16', '--play', '--checkpoint=./runs/gen_ppo_26-16-11-42/nn/last_gen_ppo_ep_500_rew__377.14606_.pth', '--track', 'wandb-project-name=Trained_RL_Navigation', 'wandb-entity=shrutiroy03'), 'state': 'running', 'program': 'runner.py', 'codePathLocal': 'runner.py', 'codePath': 'aerial_gym/rl_training/rl_games/runner.py', 'git': {'remote': 'https://github.com/ntnu-arl/aerial_gym_simulator.git', 'commit': '85114e7514ed0f3f8cfecfa23c40dad106c528a1'}, 'email': None, 'root': '/home/shruti/workspaces/aerial_gym_ws/src/aerial_gym_simulator', 'host': 'saferoboticslab-ASUS-TUF-Gaming-F15-FX507ZM-FX507ZM', 'username': 'shruti', 'executable': '/home/shruti/miniconda3/envs/aerialgym/bin/python3', 'cpu_count': 14, 'cpu_count_logical': 20, 'cpu_freq': {'current': 1365.84055, 'min': 400.0, 'max': 4180.0}, 'cpu_freq_per_core': [{'current': 2594.846, 'min': 400.0, 'max': 4600.0}, {'current': 400.0, 'min': 400.0, 'max': 4600.0}, {'current': 2388.962, 'min': 400.0, 'max': 4600.0}, {'current': 400.0, 'min': 400.0, 'max': 4600.0}, {'current': 3884.603, 'min': 400.0, 'max': 4700.0}, {'current': 2869.356, 'min': 400.0, 'max': 4700.0}, {'current': 400.338, 'min': 400.0, 'max': 4700.0}, {'current': 400.0, 'min': 400.0, 'max': 4700.0}, {'current': 2679.777, 'min': 400.0, 'max': 4600.0}, {'current': 2470.393, 'min': 400.0, 'max': 4600.0}, {'current': 1593.754, 'min': 400.0, 'max': 4600.0}, {'current': 1652.652, 'min': 400.0, 'max': 4600.0}, {'current': 400.234, 'min': 400.0, 'max': 3500.0}, {'current': 400.0, 'min': 400.0, 'max': 3500.0}, {'current': 400.0, 'min': 400.0, 'max': 3500.0}, {'current': 400.0, 'min': 400.0, 'max': 3500.0}, {'current': 400.0, 'min': 400.0, 'max': 3500.0}, {'current': 400.0, 'min': 400.0, 'max': 3500.0}, {'current': 400.0, 'min': 400.0, 'max': 3500.0}, {'current': 665.296, 'min': 400.0, 'max': 3500.0}], 'disk': {'/': {'total': 937.3305015563965, 'used': 231.7351951599121}}, 'gpu': 'NVIDIA GeForce RTX 3060 Laptop GPU', 'gpu_count': 1, 'gpu_devices': [{'name': 'NVIDIA GeForce RTX 3060 Laptop GPU', 'memory_total': 6442450944}], 'memory': {'total': 15.238018035888672}}
+2025-03-05 13:44:40,077 INFO    HandlerThread:6827 [system_monitor.py:probe():224] Finished collecting system info
+2025-03-05 13:44:40,077 INFO    HandlerThread:6827 [system_monitor.py:probe():227] Publishing system info
+2025-03-05 13:44:40,077 DEBUG   HandlerThread:6827 [system_info.py:_save_conda():207] Saving list of conda packages installed into the current environment
+2025-03-05 13:44:40,970 INFO    Thread-12 :6827 [dir_watcher.py:_on_file_created():271] file/dir created: /home/shruti/workspaces/aerial_gym_ws/src/aerial_gym_simulator/aerial_gym/rl_training/rl_games/wandb/run-20250305_134439-1fjwhm9a/files/conda-environment.yaml
+2025-03-05 13:44:41,950 DEBUG   HandlerThread:6827 [system_info.py:_save_conda():222] Saving conda packages done
+2025-03-05 13:44:41,950 DEBUG   HandlerThread:6827 [system_info.py:_save_code():44] Saving code
+2025-03-05 13:44:41,960 DEBUG   HandlerThread:6827 [system_info.py:_save_code():65] Saving code done
+2025-03-05 13:44:41,960 DEBUG   HandlerThread:6827 [system_info.py:_save_patches():82] Saving git patches
+2025-03-05 13:44:41,970 INFO    Thread-12 :6827 [dir_watcher.py:_on_file_modified():288] file/dir modified: /home/shruti/workspaces/aerial_gym_ws/src/aerial_gym_simulator/aerial_gym/rl_training/rl_games/wandb/run-20250305_134439-1fjwhm9a/files/conda-environment.yaml
+2025-03-05 13:44:41,971 INFO    Thread-12 :6827 [dir_watcher.py:_on_file_created():271] file/dir created: /home/shruti/workspaces/aerial_gym_ws/src/aerial_gym_simulator/aerial_gym/rl_training/rl_games/wandb/run-20250305_134439-1fjwhm9a/files/code/aerial_gym/rl_training/rl_games/runner.py
+2025-03-05 13:44:41,971 INFO    Thread-12 :6827 [dir_watcher.py:_on_file_created():271] file/dir created: /home/shruti/workspaces/aerial_gym_ws/src/aerial_gym_simulator/aerial_gym/rl_training/rl_games/wandb/run-20250305_134439-1fjwhm9a/files/code
+2025-03-05 13:44:41,971 INFO    Thread-12 :6827 [dir_watcher.py:_on_file_created():271] file/dir created: /home/shruti/workspaces/aerial_gym_ws/src/aerial_gym_simulator/aerial_gym/rl_training/rl_games/wandb/run-20250305_134439-1fjwhm9a/files/code/aerial_gym/rl_training
+2025-03-05 13:44:41,971 INFO    Thread-12 :6827 [dir_watcher.py:_on_file_created():271] file/dir created: /home/shruti/workspaces/aerial_gym_ws/src/aerial_gym_simulator/aerial_gym/rl_training/rl_games/wandb/run-20250305_134439-1fjwhm9a/files/code/aerial_gym/rl_training/rl_games
+2025-03-05 13:44:41,971 INFO    Thread-12 :6827 [dir_watcher.py:_on_file_created():271] file/dir created: /home/shruti/workspaces/aerial_gym_ws/src/aerial_gym_simulator/aerial_gym/rl_training/rl_games/wandb/run-20250305_134439-1fjwhm9a/files/code/aerial_gym
+2025-03-05 13:44:41,991 DEBUG   HandlerThread:6827 [system_info.py:_save_patches():124] Saving git patches done
+2025-03-05 13:44:41,991 INFO    HandlerThread:6827 [system_monitor.py:probe():229] Finished publishing system info
+2025-03-05 13:44:41,994 DEBUG   SenderThread:6827 [sender.py:send():379] send: files
+2025-03-05 13:44:41,994 INFO    SenderThread:6827 [sender.py:_save_file():1390] saving file wandb-metadata.json with policy now
+2025-03-05 13:44:41,995 INFO    SenderThread:6827 [sender.py:_save_file():1390] saving file code/aerial_gym/rl_training/rl_games/runner.py with policy now
+2025-03-05 13:44:41,995 INFO    SenderThread:6827 [sender.py:_save_file():1390] saving file diff.patch with policy now
+2025-03-05 13:44:42,084 DEBUG   HandlerThread:6827 [handler.py:handle_request():146] handle_request: python_packages
+2025-03-05 13:44:42,084 DEBUG   HandlerThread:6827 [handler.py:handle_request():146] handle_request: stop_status
+2025-03-05 13:44:42,085 DEBUG   SenderThread:6827 [sender.py:send_request():406] send_request: python_packages
+2025-03-05 13:44:42,086 DEBUG   SenderThread:6827 [sender.py:send_request():406] send_request: stop_status
+2025-03-05 13:44:42,088 DEBUG   HandlerThread:6827 [handler.py:handle_request():146] handle_request: internal_messages
+2025-03-05 13:44:42,238 DEBUG   SenderThread:6827 [sender.py:send():379] send: telemetry
+2025-03-05 13:44:42,272 INFO    wandb-upload_0:6827 [upload_job.py:push():131] Uploaded file /tmp/tmpq3ueyhhzwandb/jpcnzih2-wandb-metadata.json
+2025-03-05 13:44:42,306 INFO    wandb-upload_1:6827 [upload_job.py:push():131] Uploaded file /tmp/tmpq3ueyhhzwandb/7rcd1ll5-code/aerial_gym/rl_training/rl_games/runner.py
+2025-03-05 13:44:42,317 INFO    wandb-upload_2:6827 [upload_job.py:push():131] Uploaded file /tmp/tmpq3ueyhhzwandb/larvrrub-diff.patch
+2025-03-05 13:44:42,971 INFO    Thread-12 :6827 [dir_watcher.py:_on_file_created():271] file/dir created: /home/shruti/workspaces/aerial_gym_ws/src/aerial_gym_simulator/aerial_gym/rl_training/rl_games/wandb/run-20250305_134439-1fjwhm9a/files/wandb-metadata.json
+2025-03-05 13:44:42,971 INFO    Thread-12 :6827 [dir_watcher.py:_on_file_created():271] file/dir created: /home/shruti/workspaces/aerial_gym_ws/src/aerial_gym_simulator/aerial_gym/rl_training/rl_games/wandb/run-20250305_134439-1fjwhm9a/files/diff.patch
+2025-03-05 13:44:42,971 INFO    Thread-12 :6827 [dir_watcher.py:_on_file_created():271] file/dir created: /home/shruti/workspaces/aerial_gym_ws/src/aerial_gym_simulator/aerial_gym/rl_training/rl_games/wandb/run-20250305_134439-1fjwhm9a/files/requirements.txt
+2025-03-05 13:44:42,971 INFO    Thread-12 :6827 [dir_watcher.py:_on_file_created():271] file/dir created: /home/shruti/workspaces/aerial_gym_ws/src/aerial_gym_simulator/aerial_gym/rl_training/rl_games/wandb/run-20250305_134439-1fjwhm9a/files/output.log
+2025-03-05 13:44:44,054 INFO    cpu       :6827 [interfaces.py:monitor():140] Process cpu has exited.
+2025-03-05 13:44:44,055 DEBUG   SystemMonitor:6827 [system_monitor.py:_start():172] Starting system metrics aggregation loop
+2025-03-05 13:44:44,055 DEBUG   SystemMonitor:6827 [system_monitor.py:_start():179] Finished system metrics aggregation loop
+2025-03-05 13:44:44,056 DEBUG   SystemMonitor:6827 [system_monitor.py:_start():183] Publishing last batch of metrics
+2025-03-05 13:44:44,058 DEBUG   SenderThread:6827 [sender.py:send():379] send: stats
+2025-03-05 13:44:44,973 INFO    Thread-12 :6827 [dir_watcher.py:_on_file_modified():288] file/dir modified: /home/shruti/workspaces/aerial_gym_ws/src/aerial_gym_simulator/aerial_gym/rl_training/rl_games/wandb/run-20250305_134439-1fjwhm9a/files/output.log
+2025-03-05 13:44:45,040 INFO    MainThread:6827 [internal.py:handle_exit():76] Internal process exited
diff --git a/aerial_gym/rl_training/rl_games/wandb/run-20250305_134439-1fjwhm9a/logs/debug.log b/aerial_gym/rl_training/rl_games/wandb/run-20250305_134439-1fjwhm9a/logs/debug.log
new file mode 100644
index 0000000..1210d37
--- /dev/null
+++ b/aerial_gym/rl_training/rl_games/wandb/run-20250305_134439-1fjwhm9a/logs/debug.log
@@ -0,0 +1,28 @@
+2025-03-05 13:44:39,727 INFO    MainThread:6767 [wandb_setup.py:_flush():76] Current SDK version is 0.16.6
+2025-03-05 13:44:39,727 INFO    MainThread:6767 [wandb_setup.py:_flush():76] Configure stats pid to 6767
+2025-03-05 13:44:39,727 INFO    MainThread:6767 [wandb_setup.py:_flush():76] Loading settings from /home/shruti/.config/wandb/settings
+2025-03-05 13:44:39,727 INFO    MainThread:6767 [wandb_setup.py:_flush():76] Loading settings from /home/shruti/workspaces/aerial_gym_ws/src/aerial_gym_simulator/aerial_gym/rl_training/rl_games/wandb/settings
+2025-03-05 13:44:39,727 INFO    MainThread:6767 [wandb_setup.py:_flush():76] Loading settings from environment variables: {}
+2025-03-05 13:44:39,727 INFO    MainThread:6767 [wandb_setup.py:_flush():76] Applying setup settings: {'_disable_service': False}
+2025-03-05 13:44:39,727 INFO    MainThread:6767 [wandb_setup.py:_flush():76] Inferring run settings from compute environment: {'program_relpath': 'aerial_gym/rl_training/rl_games/runner.py', 'program_abspath': '/home/shruti/workspaces/aerial_gym_ws/src/aerial_gym_simulator/aerial_gym/rl_training/rl_games/runner.py', 'program': 'runner.py'}
+2025-03-05 13:44:39,727 INFO    MainThread:6767 [wandb_setup.py:_flush():76] Applying login settings: {}
+2025-03-05 13:44:39,727 INFO    MainThread:6767 [wandb_init.py:_log_setup():521] Logging user logs to /home/shruti/workspaces/aerial_gym_ws/src/aerial_gym_simulator/aerial_gym/rl_training/rl_games/wandb/run-20250305_134439-1fjwhm9a/logs/debug.log
+2025-03-05 13:44:39,727 INFO    MainThread:6767 [wandb_init.py:_log_setup():522] Logging internal logs to /home/shruti/workspaces/aerial_gym_ws/src/aerial_gym_simulator/aerial_gym/rl_training/rl_games/wandb/run-20250305_134439-1fjwhm9a/logs/debug-internal.log
+2025-03-05 13:44:39,727 INFO    MainThread:6767 [wandb_init.py:init():561] calling init triggers
+2025-03-05 13:44:39,727 INFO    MainThread:6767 [wandb_init.py:init():568] wandb.init called with sweep_config: {}
+config: {'params': {'seed': 10, 'algo': {'name': 'a2c_continuous'}, 'model': {'name': 'continuous_a2c_logstd'}, 'load_checkpoint': False, 'network': {'name': 'actor_critic', 'separate': False, 'space': {'continuous': {'mu_activation': 'None', 'sigma_activation': 'None', 'mu_init': {'name': 'default'}, 'sigma_init': {'name': 'const_initializer', 'val': 0}, 'fixed_sigma': True}}, 'mlp': {'units': [256, 128, 64], 'd2rl': False, 'activation': 'elu', 'initializer': {'name': 'default', 'scale': 2}}}, 'config': {'env_name': 'navigation_task', 'env_config': {'num_envs': 16, 'headless': False, 'use_warp': True}, 'name': 'gen_ppo', 'reward_shaper': {'scale_value': 0.1}, 'normalize_advantage': True, 'gamma': 0.98, 'tau': 0.95, 'ppo': True, 'learning_rate': '1e-4', 'lr_schedule': 'adaptive', 'kl_threshold': 0.016, 'save_best_after': 10, 'score_to_win': 100000, 'grad_norm': 1.0, 'entropy_coef': 0, 'truncate_grads': True, 'e_clip': 0.2, 'clip_value': False, 'num_actors': 16, 'horizon_length': 32, 'minibatch_size': 2048, 'mini_epochs': 4, 'critic_coef': 2, 'normalize_input': True, 'bounds_loss_coef': 0.0001, 'max_epochs': 500, 'normalize_value': True, 'use_diagnostics': True, 'value_bootstrap': True, 'use_smooth_clamp': False, 'player': {'use_vecenv': True}}}}
+2025-03-05 13:44:39,727 INFO    MainThread:6767 [wandb_init.py:init():611] starting backend
+2025-03-05 13:44:39,727 INFO    MainThread:6767 [wandb_init.py:init():615] setting up manager
+2025-03-05 13:44:39,728 INFO    MainThread:6767 [backend.py:_multiprocessing_setup():105] multiprocessing start_methods=fork,spawn,forkserver, using: spawn
+2025-03-05 13:44:39,728 INFO    MainThread:6767 [wandb_init.py:init():623] backend started and connected
+2025-03-05 13:44:39,730 INFO    MainThread:6767 [wandb_init.py:init():715] updated telemetry
+2025-03-05 13:44:39,743 INFO    MainThread:6767 [wandb_init.py:init():748] communicating run to backend with 90.0 second timeout
+2025-03-05 13:44:39,980 INFO    MainThread:6767 [wandb_run.py:_on_init():2357] communicating current version
+2025-03-05 13:44:40,033 INFO    MainThread:6767 [wandb_run.py:_on_init():2366] got version response upgrade_message: "wandb version 0.19.8 is available!  To upgrade, please run:\n $ pip install wandb --upgrade"
+
+2025-03-05 13:44:40,033 INFO    MainThread:6767 [wandb_init.py:init():799] starting run threads in backend
+2025-03-05 13:44:42,085 INFO    MainThread:6767 [wandb_run.py:_console_start():2335] atexit reg
+2025-03-05 13:44:42,085 INFO    MainThread:6767 [wandb_run.py:_redirect():2190] redirect: wrap_raw
+2025-03-05 13:44:42,085 INFO    MainThread:6767 [wandb_run.py:_redirect():2255] Wrapping output streams.
+2025-03-05 13:44:42,085 INFO    MainThread:6767 [wandb_run.py:_redirect():2280] Redirects installed.
+2025-03-05 13:44:42,086 INFO    MainThread:6767 [wandb_init.py:init():842] run started, returning control to user process
diff --git a/aerial_gym/rl_training/rl_games/wandb/run-20250305_134439-1fjwhm9a/run-1fjwhm9a.wandb b/aerial_gym/rl_training/rl_games/wandb/run-20250305_134439-1fjwhm9a/run-1fjwhm9a.wandb
new file mode 100644
index 0000000..6dea286
Binary files /dev/null and b/aerial_gym/rl_training/rl_games/wandb/run-20250305_134439-1fjwhm9a/run-1fjwhm9a.wandb differ
diff --git a/aerial_gym/rl_training/rl_games/wandb/run-20250305_141737-34j2vu6i/files/config.yaml b/aerial_gym/rl_training/rl_games/wandb/run-20250305_141737-34j2vu6i/files/config.yaml
new file mode 100644
index 0000000..de95c13
--- /dev/null
+++ b/aerial_gym/rl_training/rl_games/wandb/run-20250305_141737-34j2vu6i/files/config.yaml
@@ -0,0 +1,94 @@
+wandb_version: 1
+
+params:
+  desc: null
+  value:
+    seed: 8
+    algo:
+      name: a2c_continuous
+    model:
+      name: continuous_a2c_logstd
+    load_checkpoint: false
+    network:
+      name: actor_critic
+      separate: false
+      space:
+        continuous:
+          mu_activation: None
+          sigma_activation: None
+          mu_init:
+            name: default
+          sigma_init:
+            name: const_initializer
+            val: 0
+          fixed_sigma: true
+      mlp:
+        units:
+        - 256
+        - 128
+        - 64
+        d2rl: false
+        activation: elu
+        initializer:
+          name: default
+          scale: 2
+    config:
+      env_name: dce_navigation_task
+      env_config:
+        num_envs: 512
+        headless: true
+        use_warp: true
+      name: gen_ppo
+      reward_shaper:
+        scale_value: 0.1
+      normalize_advantage: true
+      gamma: 0.99
+      tau: 0.95
+      ppo: true
+      learning_rate: 1e-4
+      lr_schedule: adaptive
+      kl_threshold: 0.016
+      save_best_after: 10
+      score_to_win: 100000
+      grad_norm: 1.0
+      entropy_coef: 0.0001
+      truncate_grads: true
+      e_clip: 0.2
+      clip_value: false
+      num_actors: 512
+      horizon_length: 32
+      minibatch_size: 8192
+      mini_epochs: 4
+      critic_coef: 2
+      normalize_input: false
+      bounds_loss_coef: 0.0001
+      max_epochs: 400
+      normalize_value: true
+      use_diagnostics: true
+      value_bootstrap: true
+      use_smooth_clamp: false
+      player:
+        use_vecenv: true
+_wandb:
+  desc: null
+  value:
+    code_path: code/aerial_gym/rl_training/rl_games/runner.py
+    python_version: 3.8.20
+    cli_version: 0.16.6
+    framework: torch
+    is_jupyter_run: false
+    is_kaggle_kernel: false
+    start_time: 1741202257.0
+    t:
+      1:
+      - 1
+      - 55
+      3:
+      - 16
+      - 23
+      - 35
+      4: 3.8.20
+      5: 0.16.6
+      8:
+      - 5
+      13: linux-x86_64
diff --git a/aerial_gym/rl_training/rl_games/wandb/run-20250305_141737-34j2vu6i/logs/debug-internal.log b/aerial_gym/rl_training/rl_games/wandb/run-20250305_141737-34j2vu6i/logs/debug-internal.log
new file mode 100644
index 0000000..e280788
--- /dev/null
+++ b/aerial_gym/rl_training/rl_games/wandb/run-20250305_141737-34j2vu6i/logs/debug-internal.log
@@ -0,0 +1,49 @@
+2025-03-05 14:17:37,340 INFO    StreamThr :91057 [internal.py:wandb_internal():86] W&B internal server running at pid: 91057, started at: 2025-03-05 14:17:37.339517
+2025-03-05 14:17:37,342 DEBUG   HandlerThread:91057 [handler.py:handle_request():146] handle_request: status
+2025-03-05 14:17:37,346 INFO    WriterThread:91057 [datastore.py:open_for_write():87] open: /home/shruti/workspaces/aerial_gym_ws/src/aerial_gym_simulator/aerial_gym/rl_training/rl_games/wandb/run-20250305_141737-34j2vu6i/run-34j2vu6i.wandb
+2025-03-05 14:17:37,346 DEBUG   SenderThread:91057 [sender.py:send():379] send: header
+2025-03-05 14:17:37,361 DEBUG   SenderThread:91057 [sender.py:send():379] send: run
+2025-03-05 14:17:37,492 ERROR   SenderThread:91057 [internal_api.py:execute():373] 403 response executing GraphQL.
+2025-03-05 14:17:37,492 ERROR   SenderThread:91057 [internal_api.py:execute():374] {"errors":[{"message":"permission denied","path":["upsertBucket"],"extensions":{"code":"PERMISSION_ERROR"}}],"data":{"upsertBucket":null}}
+2025-03-05 14:17:37,493 ERROR   SenderThread:91057 [sender.py:send_run():971] It appears that you do not have permission to access the requested resource. Please reach out to the project owner to grant you access. If you have the correct permissions, verify that there are no issues with your networking setup.(Error 403: Forbidden)
+Traceback (most recent call last):
+  File "/home/shruti/miniconda3/envs/aerialgym/lib/python3.8/site-packages/wandb/sdk/lib/retry.py", line 131, in __call__
+    result = self._call_fn(*args, **kwargs)
+  File "/home/shruti/miniconda3/envs/aerialgym/lib/python3.8/site-packages/wandb/sdk/internal/internal_api.py", line 369, in execute
+    return self.client.execute(*args, **kwargs)  # type: ignore
+  File "/home/shruti/miniconda3/envs/aerialgym/lib/python3.8/site-packages/wandb/vendor/gql-0.2.0/wandb_gql/client.py", line 52, in execute
+    result = self._get_result(document, *args, **kwargs)
+  File "/home/shruti/miniconda3/envs/aerialgym/lib/python3.8/site-packages/wandb/vendor/gql-0.2.0/wandb_gql/client.py", line 60, in _get_result
+    return self.transport.execute(document, *args, **kwargs)
+  File "/home/shruti/miniconda3/envs/aerialgym/lib/python3.8/site-packages/wandb/sdk/lib/gql_request.py", line 59, in execute
+    request.raise_for_status()
+  File "/home/shruti/miniconda3/envs/aerialgym/lib/python3.8/site-packages/requests/models.py", line 1024, in raise_for_status
+    raise HTTPError(http_error_msg, response=self)
+requests.exceptions.HTTPError: 403 Client Error: Forbidden for url: https://api.wandb.ai/graphql
+
+During handling of the above exception, another exception occurred:
+
+Traceback (most recent call last):
+  File "/home/shruti/miniconda3/envs/aerialgym/lib/python3.8/site-packages/wandb/sdk/internal/sender.py", line 969, in send_run
+    server_run = self._init_run(run, config_value_dict)
+  File "/home/shruti/miniconda3/envs/aerialgym/lib/python3.8/site-packages/wandb/sdk/internal/sender.py", line 1014, in _init_run
+    server_run, inserted, server_messages = self._api.upsert_run(
+  File "/home/shruti/miniconda3/envs/aerialgym/lib/python3.8/site-packages/wandb/apis/normalize.py", line 73, in wrapper
+    raise err
+  File "/home/shruti/miniconda3/envs/aerialgym/lib/python3.8/site-packages/wandb/apis/normalize.py", line 41, in wrapper
+    return func(*args, **kwargs)
+  File "/home/shruti/miniconda3/envs/aerialgym/lib/python3.8/site-packages/wandb/sdk/internal/internal_api.py", line 2217, in upsert_run
+    response = self.gql(
+  File "/home/shruti/miniconda3/envs/aerialgym/lib/python3.8/site-packages/wandb/sdk/internal/internal_api.py", line 341, in gql
+    ret = self._retry_gql(
+  File "/home/shruti/miniconda3/envs/aerialgym/lib/python3.8/site-packages/wandb/sdk/lib/retry.py", line 147, in __call__
+    retry_timedelta_triggered = check_retry_fn(e)
+  File "/home/shruti/miniconda3/envs/aerialgym/lib/python3.8/site-packages/wandb/util.py", line 968, in check_retry_fn
+    return fallback_retry_fn(e)
+  File "/home/shruti/miniconda3/envs/aerialgym/lib/python3.8/site-packages/wandb/util.py", line 910, in no_retry_auth
+    raise CommError(
+wandb.errors.CommError: It appears that you do not have permission to access the requested resource. Please reach out to the project owner to grant you access. If you have the correct permissions, verify that there are no issues with your networking setup.(Error 403: Forbidden)
+2025-03-05 14:17:37,576 DEBUG   HandlerThread:91057 [handler.py:handle_request():146] handle_request: shutdown
+2025-03-05 14:17:37,576 INFO    HandlerThread:91057 [handler.py:finish():866] shutting down handler
+2025-03-05 14:17:38,362 INFO    WriterThread:91057 [datastore.py:close():296] close: /home/shruti/workspaces/aerial_gym_ws/src/aerial_gym_simulator/aerial_gym/rl_training/rl_games/wandb/run-20250305_141737-34j2vu6i/run-34j2vu6i.wandb
+2025-03-05 14:17:38,509 INFO    SenderThread:91057 [sender.py:finish():1546] shutting down sender
diff --git a/aerial_gym/rl_training/rl_games/wandb/run-20250305_141737-34j2vu6i/logs/debug.log b/aerial_gym/rl_training/rl_games/wandb/run-20250305_141737-34j2vu6i/logs/debug.log
new file mode 100644
index 0000000..cffff31
--- /dev/null
+++ b/aerial_gym/rl_training/rl_games/wandb/run-20250305_141737-34j2vu6i/logs/debug.log
@@ -0,0 +1,28 @@
+2025-03-05 14:17:37,332 INFO    MainThread:90995 [wandb_setup.py:_flush():76] Current SDK version is 0.16.6
+2025-03-05 14:17:37,332 INFO    MainThread:90995 [wandb_setup.py:_flush():76] Configure stats pid to 90995
+2025-03-05 14:17:37,332 INFO    MainThread:90995 [wandb_setup.py:_flush():76] Loading settings from /home/shruti/.config/wandb/settings
+2025-03-05 14:17:37,332 INFO    MainThread:90995 [wandb_setup.py:_flush():76] Loading settings from /home/shruti/workspaces/aerial_gym_ws/src/aerial_gym_simulator/aerial_gym/rl_training/rl_games/wandb/settings
+2025-03-05 14:17:37,332 INFO    MainThread:90995 [wandb_setup.py:_flush():76] Loading settings from environment variables: {}
+2025-03-05 14:17:37,332 INFO    MainThread:90995 [wandb_setup.py:_flush():76] Applying setup settings: {'_disable_service': False}
+2025-03-05 14:17:37,332 INFO    MainThread:90995 [wandb_setup.py:_flush():76] Inferring run settings from compute environment: {'program_relpath': 'aerial_gym/rl_training/rl_games/runner.py', 'program_abspath': '/home/shruti/workspaces/aerial_gym_ws/src/aerial_gym_simulator/aerial_gym/rl_training/rl_games/runner.py', 'program': 'runner.py'}
+2025-03-05 14:17:37,332 INFO    MainThread:90995 [wandb_setup.py:_flush():76] Applying login settings: {}
+2025-03-05 14:17:37,333 INFO    MainThread:90995 [wandb_init.py:_log_setup():521] Logging user logs to /home/shruti/workspaces/aerial_gym_ws/src/aerial_gym_simulator/aerial_gym/rl_training/rl_games/wandb/run-20250305_141737-34j2vu6i/logs/debug.log
+2025-03-05 14:17:37,333 INFO    MainThread:90995 [wandb_init.py:_log_setup():522] Logging internal logs to /home/shruti/workspaces/aerial_gym_ws/src/aerial_gym_simulator/aerial_gym/rl_training/rl_games/wandb/run-20250305_141737-34j2vu6i/logs/debug-internal.log
+2025-03-05 14:17:37,333 INFO    MainThread:90995 [wandb_init.py:init():561] calling init triggers
+2025-03-05 14:17:37,333 INFO    MainThread:90995 [wandb_init.py:init():568] wandb.init called with sweep_config: {}
+config: {'params': {'seed': 8, 'algo': {'name': 'a2c_continuous'}, 'model': {'name': 'continuous_a2c_logstd'}, 'load_checkpoint': False, 'network': {'name': 'actor_critic', 'separate': False, 'space': {'continuous': {'mu_activation': 'None', 'sigma_activation': 'None', 'mu_init': {'name': 'default'}, 'sigma_init': {'name': 'const_initializer', 'val': 0}, 'fixed_sigma': True}}, 'mlp': {'units': [256, 128, 64], 'd2rl': False, 'activation': 'elu', 'initializer': {'name': 'default', 'scale': 2}}}, 'config': {'env_name': 'dce_navigation_task', 'env_config': {'num_envs': 512, 'headless': True, 'use_warp': True}, 'name': 'gen_ppo', 'reward_shaper': {'scale_value': 0.1}, 'normalize_advantage': True, 'gamma': 0.99, 'tau': 0.95, 'ppo': True, 'learning_rate': '1e-4', 'lr_schedule': 'adaptive', 'kl_threshold': 0.016, 'save_best_after': 10, 'score_to_win': 100000, 'grad_norm': 1.0, 'entropy_coef': 0.0001, 'truncate_grads': True, 'e_clip': 0.2, 'clip_value': False, 'num_actors': 512, 'horizon_length': 32, 'minibatch_size': 8192, 'mini_epochs': 4, 'critic_coef': 2, 'normalize_input': False, 'bounds_loss_coef': 0.0001, 'max_epochs': 400, 'normalize_value': True, 'use_diagnostics': True, 'value_bootstrap': True, 'use_smooth_clamp': False, 'player': {'use_vecenv': True}}}}
+2025-03-05 14:17:37,333 INFO    MainThread:90995 [wandb_init.py:init():611] starting backend
+2025-03-05 14:17:37,333 INFO    MainThread:90995 [wandb_init.py:init():615] setting up manager
+2025-03-05 14:17:37,337 INFO    MainThread:90995 [backend.py:_multiprocessing_setup():105] multiprocessing start_methods=fork,spawn,forkserver, using: spawn
+2025-03-05 14:17:37,338 INFO    MainThread:90995 [wandb_init.py:init():623] backend started and connected
+2025-03-05 14:17:37,345 INFO    MainThread:90995 [wandb_init.py:init():715] updated telemetry
+2025-03-05 14:17:37,360 INFO    MainThread:90995 [wandb_init.py:init():748] communicating run to backend with 90.0 second timeout
+2025-03-05 14:17:37,510 ERROR   MainThread:90995 [wandb_init.py:init():774] encountered error: It appears that you do not have permission to access the requested resource. Please reach out to the project owner to grant you access. If you have the correct permissions, verify that there are no issues with your networking setup.(Error 403: Forbidden)
+2025-03-05 14:17:37,573 ERROR   MainThread:90995 [wandb_init.py:init():1199] It appears that you do not have permission to access the requested resource. Please reach out to the project owner to grant you access. If you have the correct permissions, verify that there are no issues with your networking setup.(Error 403: Forbidden)
+Traceback (most recent call last):
+  File "/home/shruti/miniconda3/envs/aerialgym/lib/python3.8/site-packages/wandb/sdk/wandb_init.py", line 1181, in init
+    run = wi.init()
+  File "/home/shruti/miniconda3/envs/aerialgym/lib/python3.8/site-packages/wandb/sdk/wandb_init.py", line 780, in init
+    raise error
+wandb.errors.CommError: It appears that you do not have permission to access the requested resource. Please reach out to the project owner to grant you access. If you have the correct permissions, verify that there are no issues with your networking setup.(Error 403: Forbidden)
+2025-03-05 14:17:38,577 WARNING MsgRouterThr:90995 [router.py:message_loop():77] message_loop has been closed
diff --git a/aerial_gym/rl_training/rl_games/wandb/run-20250305_141737-34j2vu6i/run-34j2vu6i.wandb b/aerial_gym/rl_training/rl_games/wandb/run-20250305_141737-34j2vu6i/run-34j2vu6i.wandb
new file mode 100644
index 0000000..fd60c08
Binary files /dev/null and b/aerial_gym/rl_training/rl_games/wandb/run-20250305_141737-34j2vu6i/run-34j2vu6i.wandb differ
diff --git a/aerial_gym/rl_training/rl_games/wandb/run-20250305_142051-swmznkku/files/config.yaml b/aerial_gym/rl_training/rl_games/wandb/run-20250305_142051-swmznkku/files/config.yaml
new file mode 100644
index 0000000..ddd9400
--- /dev/null
+++ b/aerial_gym/rl_training/rl_games/wandb/run-20250305_142051-swmznkku/files/config.yaml
@@ -0,0 +1,94 @@
+wandb_version: 1
+
+params:
+  desc: null
+  value:
+    seed: 8
+    algo:
+      name: a2c_continuous
+    model:
+      name: continuous_a2c_logstd
+    load_checkpoint: false
+    network:
+      name: actor_critic
+      separate: false
+      space:
+        continuous:
+          mu_activation: None
+          sigma_activation: None
+          mu_init:
+            name: default
+          sigma_init:
+            name: const_initializer
+            val: 0
+          fixed_sigma: true
+      mlp:
+        units:
+        - 256
+        - 128
+        - 64
+        d2rl: false
+        activation: elu
+        initializer:
+          name: default
+          scale: 2
+    config:
+      env_name: dce_navigation_task
+      env_config:
+        num_envs: 512
+        headless: true
+        use_warp: true
+      name: gen_ppo
+      reward_shaper:
+        scale_value: 0.1
+      normalize_advantage: true
+      gamma: 0.99
+      tau: 0.95
+      ppo: true
+      learning_rate: 1e-4
+      lr_schedule: adaptive
+      kl_threshold: 0.016
+      save_best_after: 10
+      score_to_win: 100000
+      grad_norm: 1.0
+      entropy_coef: 0.0001
+      truncate_grads: true
+      e_clip: 0.2
+      clip_value: false
+      num_actors: 512
+      horizon_length: 32
+      minibatch_size: 8192
+      mini_epochs: 4
+      critic_coef: 2
+      normalize_input: false
+      bounds_loss_coef: 0.0001
+      max_epochs: 400
+      normalize_value: true
+      use_diagnostics: true
+      value_bootstrap: true
+      use_smooth_clamp: false
+      player:
+        use_vecenv: true
+_wandb:
+  desc: null
+  value:
+    code_path: code/aerial_gym/rl_training/rl_games/runner.py
+    python_version: 3.8.20
+    cli_version: 0.16.6
+    framework: torch
+    is_jupyter_run: false
+    is_kaggle_kernel: false
+    start_time: 1741202451.0
+    t:
+      1:
+      - 1
+      - 55
+      3:
+      - 16
+      - 23
+      - 35
+      4: 3.8.20
+      5: 0.16.6
+      8:
+      - 5
+      13: linux-x86_64
diff --git a/aerial_gym/rl_training/rl_games/wandb/run-20250305_142051-swmznkku/logs/debug-internal.log b/aerial_gym/rl_training/rl_games/wandb/run-20250305_142051-swmznkku/logs/debug-internal.log
new file mode 100644
index 0000000..8ee59d5
--- /dev/null
+++ b/aerial_gym/rl_training/rl_games/wandb/run-20250305_142051-swmznkku/logs/debug-internal.log
@@ -0,0 +1,49 @@
+2025-03-05 14:20:51,800 INFO    StreamThr :91369 [internal.py:wandb_internal():86] W&B internal server running at pid: 91369, started at: 2025-03-05 14:20:51.800073
+2025-03-05 14:20:51,803 DEBUG   HandlerThread:91369 [handler.py:handle_request():146] handle_request: status
+2025-03-05 14:20:51,805 INFO    WriterThread:91369 [datastore.py:open_for_write():87] open: /home/shruti/workspaces/aerial_gym_ws/src/aerial_gym_simulator/aerial_gym/rl_training/rl_games/wandb/run-20250305_142051-swmznkku/run-swmznkku.wandb
+2025-03-05 14:20:51,805 DEBUG   SenderThread:91369 [sender.py:send():379] send: header
+2025-03-05 14:20:51,817 DEBUG   SenderThread:91369 [sender.py:send():379] send: run
+2025-03-05 14:20:51,956 ERROR   SenderThread:91369 [internal_api.py:execute():373] 403 response executing GraphQL.
+2025-03-05 14:20:51,956 ERROR   SenderThread:91369 [internal_api.py:execute():374] {"errors":[{"message":"permission denied","path":["upsertBucket"],"extensions":{"code":"PERMISSION_ERROR"}}],"data":{"upsertBucket":null}}
+2025-03-05 14:20:51,957 ERROR   SenderThread:91369 [sender.py:send_run():971] It appears that you do not have permission to access the requested resource. Please reach out to the project owner to grant you access. If you have the correct permissions, verify that there are no issues with your networking setup.(Error 403: Forbidden)
+Traceback (most recent call last):
+  File "/home/shruti/miniconda3/envs/aerialgym/lib/python3.8/site-packages/wandb/sdk/lib/retry.py", line 131, in __call__
+    result = self._call_fn(*args, **kwargs)
+  File "/home/shruti/miniconda3/envs/aerialgym/lib/python3.8/site-packages/wandb/sdk/internal/internal_api.py", line 369, in execute
+    return self.client.execute(*args, **kwargs)  # type: ignore
+  File "/home/shruti/miniconda3/envs/aerialgym/lib/python3.8/site-packages/wandb/vendor/gql-0.2.0/wandb_gql/client.py", line 52, in execute
+    result = self._get_result(document, *args, **kwargs)
+  File "/home/shruti/miniconda3/envs/aerialgym/lib/python3.8/site-packages/wandb/vendor/gql-0.2.0/wandb_gql/client.py", line 60, in _get_result
+    return self.transport.execute(document, *args, **kwargs)
+  File "/home/shruti/miniconda3/envs/aerialgym/lib/python3.8/site-packages/wandb/sdk/lib/gql_request.py", line 59, in execute
+    request.raise_for_status()
+  File "/home/shruti/miniconda3/envs/aerialgym/lib/python3.8/site-packages/requests/models.py", line 1024, in raise_for_status
+    raise HTTPError(http_error_msg, response=self)
+requests.exceptions.HTTPError: 403 Client Error: Forbidden for url: https://api.wandb.ai/graphql
+
+During handling of the above exception, another exception occurred:
+
+Traceback (most recent call last):
+  File "/home/shruti/miniconda3/envs/aerialgym/lib/python3.8/site-packages/wandb/sdk/internal/sender.py", line 969, in send_run
+    server_run = self._init_run(run, config_value_dict)
+  File "/home/shruti/miniconda3/envs/aerialgym/lib/python3.8/site-packages/wandb/sdk/internal/sender.py", line 1014, in _init_run
+    server_run, inserted, server_messages = self._api.upsert_run(
+  File "/home/shruti/miniconda3/envs/aerialgym/lib/python3.8/site-packages/wandb/apis/normalize.py", line 73, in wrapper
+    raise err
+  File "/home/shruti/miniconda3/envs/aerialgym/lib/python3.8/site-packages/wandb/apis/normalize.py", line 41, in wrapper
+    return func(*args, **kwargs)
+  File "/home/shruti/miniconda3/envs/aerialgym/lib/python3.8/site-packages/wandb/sdk/internal/internal_api.py", line 2217, in upsert_run
+    response = self.gql(
+  File "/home/shruti/miniconda3/envs/aerialgym/lib/python3.8/site-packages/wandb/sdk/internal/internal_api.py", line 341, in gql
+    ret = self._retry_gql(
+  File "/home/shruti/miniconda3/envs/aerialgym/lib/python3.8/site-packages/wandb/sdk/lib/retry.py", line 147, in __call__
+    retry_timedelta_triggered = check_retry_fn(e)
+  File "/home/shruti/miniconda3/envs/aerialgym/lib/python3.8/site-packages/wandb/util.py", line 968, in check_retry_fn
+    return fallback_retry_fn(e)
+  File "/home/shruti/miniconda3/envs/aerialgym/lib/python3.8/site-packages/wandb/util.py", line 910, in no_retry_auth
+    raise CommError(
+wandb.errors.CommError: It appears that you do not have permission to access the requested resource. Please reach out to the project owner to grant you access. If you have the correct permissions, verify that there are no issues with your networking setup.(Error 403: Forbidden)
+2025-03-05 14:20:52,052 DEBUG   HandlerThread:91369 [handler.py:handle_request():146] handle_request: shutdown
+2025-03-05 14:20:52,052 INFO    HandlerThread:91369 [handler.py:finish():866] shutting down handler
+2025-03-05 14:20:52,818 INFO    WriterThread:91369 [datastore.py:close():296] close: /home/shruti/workspaces/aerial_gym_ws/src/aerial_gym_simulator/aerial_gym/rl_training/rl_games/wandb/run-20250305_142051-swmznkku/run-swmznkku.wandb
+2025-03-05 14:20:52,961 INFO    SenderThread:91369 [sender.py:finish():1546] shutting down sender
diff --git a/aerial_gym/rl_training/rl_games/wandb/run-20250305_142051-swmznkku/logs/debug.log b/aerial_gym/rl_training/rl_games/wandb/run-20250305_142051-swmznkku/logs/debug.log
new file mode 100644
index 0000000..a17e0bb
--- /dev/null
+++ b/aerial_gym/rl_training/rl_games/wandb/run-20250305_142051-swmznkku/logs/debug.log
@@ -0,0 +1,28 @@
+2025-03-05 14:20:51,796 INFO    MainThread:91308 [wandb_setup.py:_flush():76] Current SDK version is 0.16.6
+2025-03-05 14:20:51,796 INFO    MainThread:91308 [wandb_setup.py:_flush():76] Configure stats pid to 91308
+2025-03-05 14:20:51,796 INFO    MainThread:91308 [wandb_setup.py:_flush():76] Loading settings from /home/shruti/.config/wandb/settings
+2025-03-05 14:20:51,796 INFO    MainThread:91308 [wandb_setup.py:_flush():76] Loading settings from /home/shruti/workspaces/aerial_gym_ws/src/aerial_gym_simulator/aerial_gym/rl_training/rl_games/wandb/settings
+2025-03-05 14:20:51,796 INFO    MainThread:91308 [wandb_setup.py:_flush():76] Loading settings from environment variables: {}
+2025-03-05 14:20:51,796 INFO    MainThread:91308 [wandb_setup.py:_flush():76] Applying setup settings: {'_disable_service': False}
+2025-03-05 14:20:51,796 INFO    MainThread:91308 [wandb_setup.py:_flush():76] Inferring run settings from compute environment: {'program_relpath': 'aerial_gym/rl_training/rl_games/runner.py', 'program_abspath': '/home/shruti/workspaces/aerial_gym_ws/src/aerial_gym_simulator/aerial_gym/rl_training/rl_games/runner.py', 'program': 'runner.py'}
+2025-03-05 14:20:51,796 INFO    MainThread:91308 [wandb_setup.py:_flush():76] Applying login settings: {}
+2025-03-05 14:20:51,796 INFO    MainThread:91308 [wandb_init.py:_log_setup():521] Logging user logs to /home/shruti/workspaces/aerial_gym_ws/src/aerial_gym_simulator/aerial_gym/rl_training/rl_games/wandb/run-20250305_142051-swmznkku/logs/debug.log
+2025-03-05 14:20:51,796 INFO    MainThread:91308 [wandb_init.py:_log_setup():522] Logging internal logs to /home/shruti/workspaces/aerial_gym_ws/src/aerial_gym_simulator/aerial_gym/rl_training/rl_games/wandb/run-20250305_142051-swmznkku/logs/debug-internal.log
+2025-03-05 14:20:51,796 INFO    MainThread:91308 [wandb_init.py:init():561] calling init triggers
+2025-03-05 14:20:51,796 INFO    MainThread:91308 [wandb_init.py:init():568] wandb.init called with sweep_config: {}
+config: {'params': {'seed': 8, 'algo': {'name': 'a2c_continuous'}, 'model': {'name': 'continuous_a2c_logstd'}, 'load_checkpoint': False, 'network': {'name': 'actor_critic', 'separate': False, 'space': {'continuous': {'mu_activation': 'None', 'sigma_activation': 'None', 'mu_init': {'name': 'default'}, 'sigma_init': {'name': 'const_initializer', 'val': 0}, 'fixed_sigma': True}}, 'mlp': {'units': [256, 128, 64], 'd2rl': False, 'activation': 'elu', 'initializer': {'name': 'default', 'scale': 2}}}, 'config': {'env_name': 'dce_navigation_task', 'env_config': {'num_envs': 512, 'headless': True, 'use_warp': True}, 'name': 'gen_ppo', 'reward_shaper': {'scale_value': 0.1}, 'normalize_advantage': True, 'gamma': 0.99, 'tau': 0.95, 'ppo': True, 'learning_rate': '1e-4', 'lr_schedule': 'adaptive', 'kl_threshold': 0.016, 'save_best_after': 10, 'score_to_win': 100000, 'grad_norm': 1.0, 'entropy_coef': 0.0001, 'truncate_grads': True, 'e_clip': 0.2, 'clip_value': False, 'num_actors': 512, 'horizon_length': 32, 'minibatch_size': 8192, 'mini_epochs': 4, 'critic_coef': 2, 'normalize_input': False, 'bounds_loss_coef': 0.0001, 'max_epochs': 400, 'normalize_value': True, 'use_diagnostics': True, 'value_bootstrap': True, 'use_smooth_clamp': False, 'player': {'use_vecenv': True}}}}
+2025-03-05 14:20:51,796 INFO    MainThread:91308 [wandb_init.py:init():611] starting backend
+2025-03-05 14:20:51,796 INFO    MainThread:91308 [wandb_init.py:init():615] setting up manager
+2025-03-05 14:20:51,798 INFO    MainThread:91308 [backend.py:_multiprocessing_setup():105] multiprocessing start_methods=fork,spawn,forkserver, using: spawn
+2025-03-05 14:20:51,799 INFO    MainThread:91308 [wandb_init.py:init():623] backend started and connected
+2025-03-05 14:20:51,805 INFO    MainThread:91308 [wandb_init.py:init():715] updated telemetry
+2025-03-05 14:20:51,816 INFO    MainThread:91308 [wandb_init.py:init():748] communicating run to backend with 90.0 second timeout
+2025-03-05 14:20:51,963 ERROR   MainThread:91308 [wandb_init.py:init():774] encountered error: It appears that you do not have permission to access the requested resource. Please reach out to the project owner to grant you access. If you have the correct permissions, verify that there are no issues with your networking setup.(Error 403: Forbidden)
+2025-03-05 14:20:52,049 ERROR   MainThread:91308 [wandb_init.py:init():1199] It appears that you do not have permission to access the requested resource. Please reach out to the project owner to grant you access. If you have the correct permissions, verify that there are no issues with your networking setup.(Error 403: Forbidden)
+Traceback (most recent call last):
+  File "/home/shruti/miniconda3/envs/aerialgym/lib/python3.8/site-packages/wandb/sdk/wandb_init.py", line 1181, in init
+    run = wi.init()
+  File "/home/shruti/miniconda3/envs/aerialgym/lib/python3.8/site-packages/wandb/sdk/wandb_init.py", line 780, in init
+    raise error
+wandb.errors.CommError: It appears that you do not have permission to access the requested resource. Please reach out to the project owner to grant you access. If you have the correct permissions, verify that there are no issues with your networking setup.(Error 403: Forbidden)
+2025-03-05 14:20:53,054 WARNING MsgRouterThr:91308 [router.py:message_loop():77] message_loop has been closed
diff --git a/aerial_gym/rl_training/rl_games/wandb/run-20250305_142051-swmznkku/run-swmznkku.wandb b/aerial_gym/rl_training/rl_games/wandb/run-20250305_142051-swmznkku/run-swmznkku.wandb
new file mode 100644
index 0000000..d6d558a
Binary files /dev/null and b/aerial_gym/rl_training/rl_games/wandb/run-20250305_142051-swmznkku/run-swmznkku.wandb differ
diff --git a/aerial_gym/rl_training/rl_games/wandb/run-20250305_142149-xg7bb06f/files/config.yaml b/aerial_gym/rl_training/rl_games/wandb/run-20250305_142149-xg7bb06f/files/config.yaml
new file mode 100644
index 0000000..d9c2b69
--- /dev/null
+++ b/aerial_gym/rl_training/rl_games/wandb/run-20250305_142149-xg7bb06f/files/config.yaml
@@ -0,0 +1,94 @@
+wandb_version: 1
+
+params:
+  desc: null
+  value:
+    seed: 8
+    algo:
+      name: a2c_continuous
+    model:
+      name: continuous_a2c_logstd
+    load_checkpoint: false
+    network:
+      name: actor_critic
+      separate: false
+      space:
+        continuous:
+          mu_activation: None
+          sigma_activation: None
+          mu_init:
+            name: default
+          sigma_init:
+            name: const_initializer
+            val: 0
+          fixed_sigma: true
+      mlp:
+        units:
+        - 256
+        - 128
+        - 64
+        d2rl: false
+        activation: elu
+        initializer:
+          name: default
+          scale: 2
+    config:
+      env_name: dce_navigation_task
+      env_config:
+        num_envs: 512
+        headless: true
+        use_warp: true
+      name: gen_ppo
+      reward_shaper:
+        scale_value: 0.1
+      normalize_advantage: true
+      gamma: 0.99
+      tau: 0.95
+      ppo: true
+      learning_rate: 1e-4
+      lr_schedule: adaptive
+      kl_threshold: 0.016
+      save_best_after: 10
+      score_to_win: 100000
+      grad_norm: 1.0
+      entropy_coef: 0.0001
+      truncate_grads: true
+      e_clip: 0.2
+      clip_value: false
+      num_actors: 512
+      horizon_length: 32
+      minibatch_size: 8192
+      mini_epochs: 4
+      critic_coef: 2
+      normalize_input: false
+      bounds_loss_coef: 0.0001
+      max_epochs: 400
+      normalize_value: true
+      use_diagnostics: true
+      value_bootstrap: true
+      use_smooth_clamp: false
+      player:
+        use_vecenv: true
+_wandb:
+  desc: null
+  value:
+    code_path: code/aerial_gym/rl_training/rl_games/runner.py
+    python_version: 3.8.20
+    cli_version: 0.16.6
+    framework: torch
+    is_jupyter_run: false
+    is_kaggle_kernel: false
+    start_time: 1741202509.0
+    t:
+      1:
+      - 1
+      - 55
+      3:
+      - 16
+      - 23
+      - 35
+      4: 3.8.20
+      5: 0.16.6
+      8:
+      - 5
+      13: linux-x86_64
diff --git a/aerial_gym/rl_training/rl_games/wandb/run-20250305_142149-xg7bb06f/logs/debug-internal.log b/aerial_gym/rl_training/rl_games/wandb/run-20250305_142149-xg7bb06f/logs/debug-internal.log
new file mode 100644
index 0000000..dc09389
--- /dev/null
+++ b/aerial_gym/rl_training/rl_games/wandb/run-20250305_142149-xg7bb06f/logs/debug-internal.log
@@ -0,0 +1,49 @@
+2025-03-05 14:21:49,651 INFO    StreamThr :91591 [internal.py:wandb_internal():86] W&B internal server running at pid: 91591, started at: 2025-03-05 14:21:49.651549
+2025-03-05 14:21:49,654 DEBUG   HandlerThread:91591 [handler.py:handle_request():146] handle_request: status
+2025-03-05 14:21:49,656 INFO    WriterThread:91591 [datastore.py:open_for_write():87] open: /home/shruti/workspaces/aerial_gym_ws/src/aerial_gym_simulator/aerial_gym/rl_training/rl_games/wandb/run-20250305_142149-xg7bb06f/run-xg7bb06f.wandb
+2025-03-05 14:21:49,656 DEBUG   SenderThread:91591 [sender.py:send():379] send: header
+2025-03-05 14:21:49,670 DEBUG   SenderThread:91591 [sender.py:send():379] send: run
+2025-03-05 14:21:49,814 ERROR   SenderThread:91591 [internal_api.py:execute():373] 403 response executing GraphQL.
+2025-03-05 14:21:49,814 ERROR   SenderThread:91591 [internal_api.py:execute():374] {"errors":[{"message":"permission denied","path":["upsertBucket"],"extensions":{"code":"PERMISSION_ERROR"}}],"data":{"upsertBucket":null}}
+2025-03-05 14:21:49,815 ERROR   SenderThread:91591 [sender.py:send_run():971] It appears that you do not have permission to access the requested resource. Please reach out to the project owner to grant you access. If you have the correct permissions, verify that there are no issues with your networking setup.(Error 403: Forbidden)
+Traceback (most recent call last):
+  File "/home/shruti/miniconda3/envs/aerialgym/lib/python3.8/site-packages/wandb/sdk/lib/retry.py", line 131, in __call__
+    result = self._call_fn(*args, **kwargs)
+  File "/home/shruti/miniconda3/envs/aerialgym/lib/python3.8/site-packages/wandb/sdk/internal/internal_api.py", line 369, in execute
+    return self.client.execute(*args, **kwargs)  # type: ignore
+  File "/home/shruti/miniconda3/envs/aerialgym/lib/python3.8/site-packages/wandb/vendor/gql-0.2.0/wandb_gql/client.py", line 52, in execute
+    result = self._get_result(document, *args, **kwargs)
+  File "/home/shruti/miniconda3/envs/aerialgym/lib/python3.8/site-packages/wandb/vendor/gql-0.2.0/wandb_gql/client.py", line 60, in _get_result
+    return self.transport.execute(document, *args, **kwargs)
+  File "/home/shruti/miniconda3/envs/aerialgym/lib/python3.8/site-packages/wandb/sdk/lib/gql_request.py", line 59, in execute
+    request.raise_for_status()
+  File "/home/shruti/miniconda3/envs/aerialgym/lib/python3.8/site-packages/requests/models.py", line 1024, in raise_for_status
+    raise HTTPError(http_error_msg, response=self)
+requests.exceptions.HTTPError: 403 Client Error: Forbidden for url: https://api.wandb.ai/graphql
+
+During handling of the above exception, another exception occurred:
+
+Traceback (most recent call last):
+  File "/home/shruti/miniconda3/envs/aerialgym/lib/python3.8/site-packages/wandb/sdk/internal/sender.py", line 969, in send_run
+    server_run = self._init_run(run, config_value_dict)
+  File "/home/shruti/miniconda3/envs/aerialgym/lib/python3.8/site-packages/wandb/sdk/internal/sender.py", line 1014, in _init_run
+    server_run, inserted, server_messages = self._api.upsert_run(
+  File "/home/shruti/miniconda3/envs/aerialgym/lib/python3.8/site-packages/wandb/apis/normalize.py", line 73, in wrapper
+    raise err
+  File "/home/shruti/miniconda3/envs/aerialgym/lib/python3.8/site-packages/wandb/apis/normalize.py", line 41, in wrapper
+    return func(*args, **kwargs)
+  File "/home/shruti/miniconda3/envs/aerialgym/lib/python3.8/site-packages/wandb/sdk/internal/internal_api.py", line 2217, in upsert_run
+    response = self.gql(
+  File "/home/shruti/miniconda3/envs/aerialgym/lib/python3.8/site-packages/wandb/sdk/internal/internal_api.py", line 341, in gql
+    ret = self._retry_gql(
+  File "/home/shruti/miniconda3/envs/aerialgym/lib/python3.8/site-packages/wandb/sdk/lib/retry.py", line 147, in __call__
+    retry_timedelta_triggered = check_retry_fn(e)
+  File "/home/shruti/miniconda3/envs/aerialgym/lib/python3.8/site-packages/wandb/util.py", line 968, in check_retry_fn
+    return fallback_retry_fn(e)
+  File "/home/shruti/miniconda3/envs/aerialgym/lib/python3.8/site-packages/wandb/util.py", line 910, in no_retry_auth
+    raise CommError(
+wandb.errors.CommError: It appears that you do not have permission to access the requested resource. Please reach out to the project owner to grant you access. If you have the correct permissions, verify that there are no issues with your networking setup.(Error 403: Forbidden)
+2025-03-05 14:21:49,888 DEBUG   HandlerThread:91591 [handler.py:handle_request():146] handle_request: shutdown
+2025-03-05 14:21:49,888 INFO    HandlerThread:91591 [handler.py:finish():866] shutting down handler
+2025-03-05 14:21:50,670 INFO    WriterThread:91591 [datastore.py:close():296] close: /home/shruti/workspaces/aerial_gym_ws/src/aerial_gym_simulator/aerial_gym/rl_training/rl_games/wandb/run-20250305_142149-xg7bb06f/run-xg7bb06f.wandb
+2025-03-05 14:21:50,819 INFO    SenderThread:91591 [sender.py:finish():1546] shutting down sender
diff --git a/aerial_gym/rl_training/rl_games/wandb/run-20250305_142149-xg7bb06f/logs/debug.log b/aerial_gym/rl_training/rl_games/wandb/run-20250305_142149-xg7bb06f/logs/debug.log
new file mode 100644
index 0000000..f430bd0
--- /dev/null
+++ b/aerial_gym/rl_training/rl_games/wandb/run-20250305_142149-xg7bb06f/logs/debug.log
@@ -0,0 +1,28 @@
+2025-03-05 14:21:49,648 INFO    MainThread:91530 [wandb_setup.py:_flush():76] Current SDK version is 0.16.6
+2025-03-05 14:21:49,648 INFO    MainThread:91530 [wandb_setup.py:_flush():76] Configure stats pid to 91530
+2025-03-05 14:21:49,648 INFO    MainThread:91530 [wandb_setup.py:_flush():76] Loading settings from /home/shruti/.config/wandb/settings
+2025-03-05 14:21:49,648 INFO    MainThread:91530 [wandb_setup.py:_flush():76] Loading settings from /home/shruti/workspaces/aerial_gym_ws/src/aerial_gym_simulator/aerial_gym/rl_training/rl_games/wandb/settings
+2025-03-05 14:21:49,648 INFO    MainThread:91530 [wandb_setup.py:_flush():76] Loading settings from environment variables: {}
+2025-03-05 14:21:49,648 INFO    MainThread:91530 [wandb_setup.py:_flush():76] Applying setup settings: {'_disable_service': False}
+2025-03-05 14:21:49,648 INFO    MainThread:91530 [wandb_setup.py:_flush():76] Inferring run settings from compute environment: {'program_relpath': 'aerial_gym/rl_training/rl_games/runner.py', 'program_abspath': '/home/shruti/workspaces/aerial_gym_ws/src/aerial_gym_simulator/aerial_gym/rl_training/rl_games/runner.py', 'program': 'runner.py'}
+2025-03-05 14:21:49,648 INFO    MainThread:91530 [wandb_setup.py:_flush():76] Applying login settings: {}
+2025-03-05 14:21:49,648 INFO    MainThread:91530 [wandb_init.py:_log_setup():521] Logging user logs to /home/shruti/workspaces/aerial_gym_ws/src/aerial_gym_simulator/aerial_gym/rl_training/rl_games/wandb/run-20250305_142149-xg7bb06f/logs/debug.log
+2025-03-05 14:21:49,648 INFO    MainThread:91530 [wandb_init.py:_log_setup():522] Logging internal logs to /home/shruti/workspaces/aerial_gym_ws/src/aerial_gym_simulator/aerial_gym/rl_training/rl_games/wandb/run-20250305_142149-xg7bb06f/logs/debug-internal.log
+2025-03-05 14:21:49,648 INFO    MainThread:91530 [wandb_init.py:init():561] calling init triggers
+2025-03-05 14:21:49,648 INFO    MainThread:91530 [wandb_init.py:init():568] wandb.init called with sweep_config: {}
+config: {'params': {'seed': 8, 'algo': {'name': 'a2c_continuous'}, 'model': {'name': 'continuous_a2c_logstd'}, 'load_checkpoint': False, 'network': {'name': 'actor_critic', 'separate': False, 'space': {'continuous': {'mu_activation': 'None', 'sigma_activation': 'None', 'mu_init': {'name': 'default'}, 'sigma_init': {'name': 'const_initializer', 'val': 0}, 'fixed_sigma': True}}, 'mlp': {'units': [256, 128, 64], 'd2rl': False, 'activation': 'elu', 'initializer': {'name': 'default', 'scale': 2}}}, 'config': {'env_name': 'dce_navigation_task', 'env_config': {'num_envs': 512, 'headless': True, 'use_warp': True}, 'name': 'gen_ppo', 'reward_shaper': {'scale_value': 0.1}, 'normalize_advantage': True, 'gamma': 0.99, 'tau': 0.95, 'ppo': True, 'learning_rate': '1e-4', 'lr_schedule': 'adaptive', 'kl_threshold': 0.016, 'save_best_after': 10, 'score_to_win': 100000, 'grad_norm': 1.0, 'entropy_coef': 0.0001, 'truncate_grads': True, 'e_clip': 0.2, 'clip_value': False, 'num_actors': 512, 'horizon_length': 32, 'minibatch_size': 8192, 'mini_epochs': 4, 'critic_coef': 2, 'normalize_input': False, 'bounds_loss_coef': 0.0001, 'max_epochs': 400, 'normalize_value': True, 'use_diagnostics': True, 'value_bootstrap': True, 'use_smooth_clamp': False, 'player': {'use_vecenv': True}}}}
+2025-03-05 14:21:49,648 INFO    MainThread:91530 [wandb_init.py:init():611] starting backend
+2025-03-05 14:21:49,648 INFO    MainThread:91530 [wandb_init.py:init():615] setting up manager
+2025-03-05 14:21:49,650 INFO    MainThread:91530 [backend.py:_multiprocessing_setup():105] multiprocessing start_methods=fork,spawn,forkserver, using: spawn
+2025-03-05 14:21:49,651 INFO    MainThread:91530 [wandb_init.py:init():623] backend started and connected
+2025-03-05 14:21:49,656 INFO    MainThread:91530 [wandb_init.py:init():715] updated telemetry
+2025-03-05 14:21:49,668 INFO    MainThread:91530 [wandb_init.py:init():748] communicating run to backend with 90.0 second timeout
+2025-03-05 14:21:49,820 ERROR   MainThread:91530 [wandb_init.py:init():774] encountered error: It appears that you do not have permission to access the requested resource. Please reach out to the project owner to grant you access. If you have the correct permissions, verify that there are no issues with your networking setup.(Error 403: Forbidden)
+2025-03-05 14:21:49,884 ERROR   MainThread:91530 [wandb_init.py:init():1199] It appears that you do not have permission to access the requested resource. Please reach out to the project owner to grant you access. If you have the correct permissions, verify that there are no issues with your networking setup.(Error 403: Forbidden)
+Traceback (most recent call last):
+  File "/home/shruti/miniconda3/envs/aerialgym/lib/python3.8/site-packages/wandb/sdk/wandb_init.py", line 1181, in init
+    run = wi.init()
+  File "/home/shruti/miniconda3/envs/aerialgym/lib/python3.8/site-packages/wandb/sdk/wandb_init.py", line 780, in init
+    raise error
+wandb.errors.CommError: It appears that you do not have permission to access the requested resource. Please reach out to the project owner to grant you access. If you have the correct permissions, verify that there are no issues with your networking setup.(Error 403: Forbidden)
+2025-03-05 14:21:50,890 WARNING MsgRouterThr:91530 [router.py:message_loop():77] message_loop has been closed
diff --git a/aerial_gym/rl_training/rl_games/wandb/run-20250305_142149-xg7bb06f/run-xg7bb06f.wandb b/aerial_gym/rl_training/rl_games/wandb/run-20250305_142149-xg7bb06f/run-xg7bb06f.wandb
new file mode 100644
index 0000000..da46fda
Binary files /dev/null and b/aerial_gym/rl_training/rl_games/wandb/run-20250305_142149-xg7bb06f/run-xg7bb06f.wandb differ
diff --git a/aerial_gym/task/__init__.py b/aerial_gym/task/__init__.py
index 7dd966d..2d35ddb 100644
--- a/aerial_gym/task/__init__.py
+++ b/aerial_gym/task/__init__.py
@@ -95,5 +95,16 @@ task_registry.register_task(
 
 ## Uncomment this to use custom tasks
 
-# from aerial_gym.task.custom_task.custom_task import CustomTask
-# task_registry.register_task("custom_task", CustomTask, custom_task.task_config)
+#from aerial_gym.task.custom_task.custom_task import CustomTask
+#task_registry.register_task("custom_task", CustomTask, custom_task.task_config)
+
+from aerial_gym.task.reach_avoid_task.reach_avoid_task import ReachAvoidTask
+from aerial_gym.config.task_config.reach_avoid_task_config import (
+    task_config as reach_avoid_task_config,
+)
+
+task_registry.register_task(
+    "reach_avoid_task", 
+    ReachAvoidTask, 
+    reach_avoid_task_config
+)
\ No newline at end of file
diff --git a/aerial_gym/task/reach_avoid_task/reach_avoid_task.py b/aerial_gym/task/reach_avoid_task/reach_avoid_task.py
new file mode 100644
index 0000000..7ac417c
--- /dev/null
+++ b/aerial_gym/task/reach_avoid_task/reach_avoid_task.py
@@ -0,0 +1,469 @@
+from aerial_gym.task.base_task import BaseTask
+from aerial_gym.sim.sim_builder import SimBuilder
+import torch
+import numpy as np
+
+from aerial_gym.utils.math import *
+
+from aerial_gym.utils.logging import CustomLogger
+
+from aerial_gym.utils.vae.vae_image_encoder import VAEImageEncoder
+
+import gymnasium as gym
+from gym.spaces import Dict, Box
+
+logger = CustomLogger("reach_avoid_task")
+
+
+def dict_to_class(dict):
+    return type("ClassFromDict", (object,), dict)
+
+
+class ReachAvoidTask(BaseTask):
+    def __init__(
+        self, task_config, seed=None, num_envs=None, headless=None, device=None, use_warp=None
+    ):
+        # overwrite the params if user has provided them
+        if seed is not None:
+            task_config.seed = seed
+        if num_envs is not None:
+            task_config.num_envs = num_envs
+        if headless is not None:
+            task_config.headless = headless
+        if device is not None:
+            task_config.device = device
+        if use_warp is not None:
+            task_config.use_warp = use_warp
+        super().__init__(task_config)
+        self.device = self.task_config.device
+        # set the each of the elements of reward parameter to a torch tensor
+        for key in self.task_config.reward_parameters.keys():
+            self.task_config.reward_parameters[key] = torch.tensor(
+                self.task_config.reward_parameters[key], device=self.device
+            )
+        logger.info("Building environment for reach-avoid task.")
+        logger.info(
+            "Sim Name: {}, Env Name: {}, Robot Name: {}, Controller Name: {}".format(
+                self.task_config.sim_name,
+                self.task_config.env_name,
+                self.task_config.robot_name,
+                self.task_config.controller_name,
+            )
+        )
+
+        self.sim_env = SimBuilder().build_env(
+            sim_name=self.task_config.sim_name,
+            env_name=self.task_config.env_name,
+            robot_name=self.task_config.robot_name,
+            controller_name=self.task_config.controller_name,
+            args=self.task_config.args,
+            device=self.device,
+            num_envs=self.task_config.num_envs,
+            use_warp=self.task_config.use_warp,
+            headless=self.task_config.headless,
+        )
+
+        self.target_position = torch.zeros(
+            (self.sim_env.num_envs, 3), device=self.device, requires_grad=False
+        )
+
+        self.target_min_ratio = torch.tensor(
+            self.task_config.target_min_ratio, device=self.device, requires_grad=False
+        ).expand(self.sim_env.num_envs, -1)
+        self.target_max_ratio = torch.tensor(
+            self.task_config.target_max_ratio, device=self.device, requires_grad=False
+        ).expand(self.sim_env.num_envs, -1)
+
+        self.success_aggregate = 0
+        self.crashes_aggregate = 0
+        self.timeouts_aggregate = 0
+
+        self.pos_error_vehicle_frame_prev = torch.zeros_like(self.target_position)
+        self.pos_error_vehicle_frame = torch.zeros_like(self.target_position)
+
+        if self.task_config.vae_config.use_vae:
+            self.vae_model = VAEImageEncoder(config=self.task_config.vae_config, device=self.device)
+            self.image_latents = torch.zeros(
+                (self.sim_env.num_envs, self.task_config.vae_config.latent_dims),
+                device=self.device,
+                requires_grad=False,
+            )
+        else:
+            self.vae_model = lambda x: x
+
+        # Get the dictionary once from the environment and use it to get the observations later.
+        # This is to avoid constant returning of data back and forth across functions as the tensors update and can be read in-place.
+        self.obs_dict = self.sim_env.get_obs()
+        if "curriculum_level" not in self.obs_dict.keys():
+            self.curriculum_level = self.task_config.curriculum.min_level
+            self.obs_dict["curriculum_level"] = self.curriculum_level
+        else:
+            self.curriculum_level = self.obs_dict["curriculum_level"]
+        self.obs_dict["num_obstacles_in_env"] = self.curriculum_level
+        self.curriculum_progress_fraction = (
+            self.curriculum_level - self.task_config.curriculum.min_level
+        ) / (self.task_config.curriculum.max_level - self.task_config.curriculum.min_level)
+
+        self.terminations = self.obs_dict["crashes"]
+        self.truncations = self.obs_dict["truncations"]
+        self.rewards = torch.zeros(self.truncations.shape[0], device=self.device)
+
+        self.observation_space = Dict(
+            {
+                "observations": Box(
+                    low=-1.0,
+                    high=1.0,
+                    shape=(self.task_config.observation_space_dim,),
+                    dtype=np.float32,
+                ),
+                "image_obs": Box(
+                    low=-1.0,
+                    high=1.0,
+                    shape=(1, 135, 240),
+                    dtype=np.float32,
+                ),
+            }
+        )
+        self.action_space = Box(low=-1.0, high=1.0, shape=(4,), dtype=np.float32)
+        self.action_transformation_function = self.task_config.action_transformation_function
+
+        self.num_envs = self.sim_env.num_envs
+
+        # Currently only the "observations" are sent to the actor and critic.
+        # The "priviliged_obs" are not handled so far in sample-factory
+
+        self.task_obs = {
+            "observations": torch.zeros(
+                (self.sim_env.num_envs, self.task_config.observation_space_dim),
+                device=self.device,
+                requires_grad=False,
+            ),
+            "priviliged_obs": torch.zeros(
+                (
+                    self.sim_env.num_envs,
+                    self.task_config.privileged_observation_space_dim,
+                ),
+                device=self.device,
+                requires_grad=False,
+            ),
+            "collisions": torch.zeros(
+                (self.sim_env.num_envs, 1), device=self.device, requires_grad=False
+            ),
+            "rewards": torch.zeros(
+                (self.sim_env.num_envs, 1), device=self.device, requires_grad=False
+            ),
+        }
+
+        self.num_task_steps = 0
+
+    def close(self):
+        self.sim_env.delete_env()
+
+    def reset(self):
+        self.reset_idx(torch.arange(self.sim_env.num_envs))
+        return self.get_return_tuple()
+
+    def reset_idx(self, env_ids):
+        # Sets target --> edit for reach-avoid
+        target_ratio = torch_rand_float_tensor(self.target_min_ratio, self.target_max_ratio)
+        self.target_position[env_ids] = torch_interpolate_ratio(
+            min=self.obs_dict["env_bounds_min"][env_ids],
+            max=self.obs_dict["env_bounds_max"][env_ids],
+            ratio=target_ratio[env_ids],
+        )
+        # logger.warning(f"reset envs: {env_ids}")
+        self.infos = {}
+        return
+
+    def render(self):
+        return self.sim_env.render()
+
+    def logging_sanity_check(self, infos):
+        # Consider editing since there is no task success
+        successes = infos["successes"]
+        crashes = infos["crashes"]
+        timeouts = infos["timeouts"]
+        time_at_crash = torch.where(
+            crashes > 0,
+            self.sim_env.sim_steps,
+            self.task_config.episode_len_steps * torch.ones_like(self.sim_env.sim_steps),
+        )
+        env_list_for_toc = (time_at_crash < 5).nonzero(as_tuple=False).squeeze(-1)
+        crash_envs = crashes.nonzero(as_tuple=False).squeeze(-1)
+        success_envs = successes.nonzero(as_tuple=False).squeeze(-1)
+        timeout_envs = timeouts.nonzero(as_tuple=False).squeeze(-1)
+
+        if len(env_list_for_toc) > 0:
+            logger.critical("Crash is happening too soon.")
+            logger.critical(f"Envs crashing too soon: {env_list_for_toc}")
+            logger.critical(f"Time at crash: {time_at_crash[env_list_for_toc]}")
+
+        if torch.sum(torch.logical_and(successes, crashes)) > 0:
+            logger.critical("Success and crash are occuring at the same time")
+            logger.critical(
+                f"Number of crashes: {torch.count_nonzero(crashes)}, Crashed envs: {crash_envs}"
+            )
+            logger.critical(
+                f"Number of successes: {torch.count_nonzero(successes)}, Success envs: {success_envs}"
+            )
+            logger.critical(
+                f"Number of common instances: {torch.count_nonzero(torch.logical_and(crashes, successes))}"
+            )
+        if torch.sum(torch.logical_and(successes, timeouts)) > 0:
+            logger.critical("Success and timeout are occuring at the same time")
+            logger.critical(
+                f"Number of successes: {torch.count_nonzero(successes)}, Success envs: {success_envs}"
+            )
+            logger.critical(
+                f"Number of timeouts: {torch.count_nonzero(timeouts)}, Timeout envs: {timeout_envs}"
+            )
+            logger.critical(
+                f"Number of common instances: {torch.count_nonzero(torch.logical_and(successes, timeouts))}"
+            )
+        if torch.sum(torch.logical_and(crashes, timeouts)) > 0:
+            logger.critical("Crash and timeout are occuring at the same time")
+            logger.critical(
+                f"Number of crashes: {torch.count_nonzero(crashes)}, Crashed envs: {crash_envs}"
+            )
+            logger.critical(
+                f"Number of timeouts: {torch.count_nonzero(timeouts)}, Timeout envs: {timeout_envs}"
+            )
+            logger.critical(
+                f"Number of common instances: {torch.count_nonzero(torch.logical_and(crashes, timeouts))}"
+            )
+        return
+
+    def check_and_update_curriculum_level(self, successes, crashes, timeouts):
+        self.success_aggregate += torch.sum(successes)
+        self.crashes_aggregate += torch.sum(crashes)
+        self.timeouts_aggregate += torch.sum(timeouts)
+
+        instances = self.success_aggregate + self.crashes_aggregate + self.timeouts_aggregate
+
+        if instances >= self.task_config.curriculum.check_after_log_instances:
+            success_rate = self.success_aggregate / instances
+            crash_rate = self.crashes_aggregate / instances
+            timeout_rate = self.timeouts_aggregate / instances
+
+            if success_rate > self.task_config.curriculum.success_rate_for_increase:
+                self.curriculum_level += self.task_config.curriculum.increase_step
+            elif success_rate < self.task_config.curriculum.success_rate_for_decrease:
+                self.curriculum_level -= self.task_config.curriculum.decrease_step
+
+            # clamp curriculum_level
+            self.curriculum_level = min(
+                max(self.curriculum_level, self.task_config.curriculum.min_level),
+                self.task_config.curriculum.max_level,
+            )
+            self.obs_dict["curriculum_level"] = self.curriculum_level
+            self.obs_dict["num_obstacles_in_env"] = self.curriculum_level
+            self.curriculum_progress_fraction = (
+                self.curriculum_level - self.task_config.curriculum.min_level
+            ) / (self.task_config.curriculum.max_level - self.task_config.curriculum.min_level)
+
+            logger.warning(
+                f"Curriculum Level: {self.curriculum_level}, Curriculum progress fraction: {self.curriculum_progress_fraction}"
+            )
+            logger.warning(
+                f"\nSuccess Rate: {success_rate}\nCrash Rate: {crash_rate}\nTimeout Rate: {timeout_rate}"
+            )
+            logger.warning(
+                f"\nSuccesses: {self.success_aggregate}\nCrashes : {self.crashes_aggregate}\nTimeouts: {self.timeouts_aggregate}"
+            )
+            self.success_aggregate = 0
+            self.crashes_aggregate = 0
+            self.timeouts_aggregate = 0
+
+    def process_image_observation(self):
+        image_obs = self.obs_dict["depth_range_pixels"].squeeze(1)
+        if self.task_config.vae_config.use_vae:
+            self.image_latents[:] = self.vae_model.encode(image_obs)
+        # # comments to make sure the VAE does as expected
+        # decoded_image = self.vae_model.decode(self.image_latents[0].unsqueeze(0))
+        # image0 = image_obs[0].cpu().numpy()
+        # decoded_image0 = decoded_image[0].squeeze(0).cpu().numpy()
+        # # save as .png with timestep
+        # if not hasattr(self, "img_ctr"):
+        #     self.img_ctr = 0
+        # self.img_ctr += 1
+        # import matplotlib.pyplot as plt
+        # plt.imsave(f"image0{self.img_ctr}.png", image0, vmin=0, vmax=1)
+        # plt.imsave(f"decoded_image0{self.img_ctr}.png", decoded_image0, vmin=0, vmax=1)
+
+    def step(self, actions):
+        # this uses the action, gets observations
+        # calculates rewards, returns tuples
+        # In this case, the episodes that are terminated need to be
+        # first reset, and the first obseration of the new episode
+        # needs to be returned.
+
+        transformed_action = self.action_transformation_function(actions)
+        logger.debug(f"raw_action: {actions[0]}, transformed action: {transformed_action[0]}")
+        self.sim_env.step(actions=transformed_action)
+
+        # This step must be done since the reset is done after the reward is calculated.
+        # This enables the robot to send back an updated state, and an updated observation to the RL agent after the reset.
+        # This is important for the RL agent to get the correct state after the reset.
+        self.rewards[:], self.safety_margin[:], self.terminations[:] = self.compute_rewards_and_crashes(self.obs_dict)
+
+        # logger.info(f"Curriculum Level: {self.curriculum_level}")
+
+        if self.task_config.return_state_before_reset == True:
+            return_tuple = self.get_return_tuple()
+
+        self.truncations[:] = torch.where(
+            self.sim_env.sim_steps > self.task_config.episode_len_steps,
+            torch.ones_like(self.truncations),
+            torch.zeros_like(self.truncations),
+        )
+
+        # edit success logic
+        # successes are are the sum of the environments which are to be truncated and have reached the target within a distance threshold
+        successes = self.truncations * (
+            torch.norm(self.target_position - self.obs_dict["robot_position"], dim=1) < 1.0
+        )
+        successes = torch.where(self.terminations > 0, torch.zeros_like(successes), successes)
+        timeouts = torch.where(
+            self.truncations > 0, torch.logical_not(successes), torch.zeros_like(successes)
+        )
+        timeouts = torch.where(
+            self.terminations > 0, torch.zeros_like(timeouts), timeouts
+        )  # timeouts are not counted if there is a crash
+
+        self.infos["successes"] = successes
+        self.infos["timeouts"] = timeouts
+        self.infos["crashes"] = self.terminations
+        self.infos["safety_margin"] = self.safety_margin
+
+        self.logging_sanity_check(self.infos)
+        self.check_and_update_curriculum_level(
+            self.infos["successes"], self.infos["crashes"], self.infos["timeouts"]
+        )
+        # rendering happens at the post-reward calculation step since the newer measurement is required to be
+        # sent to the RL algorithm as an observation and it helps if the camera image is updated then
+        reset_envs = self.sim_env.post_reward_calculation_step()
+        if len(reset_envs) > 0:
+            self.reset_idx(reset_envs)
+        self.num_task_steps += 1
+        # do stuff with the image observations here
+        self.process_image_observation()
+        # self.post_image_reward_addition()
+        if self.task_config.return_state_before_reset == False:
+            return_tuple = self.get_return_tuple()
+        return return_tuple
+
+    def post_image_reward_addition(self):
+        image_obs = 10.0 * self.obs_dict["depth_range_pixels"].squeeze(1)
+        image_obs[image_obs < 0] = 10.0
+        self.min_pixel_dist = torch.amin(image_obs, dim=(1, 2))
+        self.rewards[self.terminations < 0] += -exponential_reward_function(
+            4.0, 1.0, self.min_pixel_dist[self.terminations < 0]
+        )
+
+    def get_return_tuple(self):
+        self.process_obs_for_task()
+        return (
+            self.task_obs,
+            self.rewards,
+            self.terminations,
+            self.truncations,
+            self.infos,
+        )
+
+    def process_obs_for_task(self):
+        vec_to_tgt = quat_rotate_inverse(
+            self.obs_dict["robot_vehicle_orientation"],
+            (self.target_position - self.obs_dict["robot_position"]),
+        )
+        perturbed_vec_to_tgt = vec_to_tgt + 0.1 * 2 * (torch.rand_like(vec_to_tgt - 0.5))
+        dist_to_tgt = torch.norm(vec_to_tgt, dim=-1)
+        perturbed_unit_vec_to_tgt = perturbed_vec_to_tgt / dist_to_tgt.unsqueeze(1)
+        self.task_obs["observations"][:, 0:3] = perturbed_unit_vec_to_tgt
+        self.task_obs["observations"][:, 3] = dist_to_tgt
+        # self.task_obs["observation"][:, 3] = self.infos["successes"]
+        # self.task_obs["observations"][:, 3:7] = self.obs_dict["robot_vehicle_orientation"]
+        euler_angles = ssa(self.obs_dict["robot_euler_angles"])
+        perturbed_euler_angles = euler_angles + 0.1 * (torch.rand_like(euler_angles) - 0.5)
+        self.task_obs["observations"][:, 4] = perturbed_euler_angles[:, 0]
+        self.task_obs["observations"][:, 5] = perturbed_euler_angles[:, 1]
+        self.task_obs["observations"][:, 6] = 0.0
+        self.task_obs["observations"][:, 7:10] = self.obs_dict["robot_body_linvel"]
+        self.task_obs["observations"][:, 10:13] = self.obs_dict["robot_body_angvel"]
+        self.task_obs["observations"][:, 13:17] = self.obs_dict["robot_actions"]
+        if self.task_config.vae_config.use_vae:
+            self.task_obs["observations"][:, 17:] = self.image_latents
+        self.task_obs["rewards"] = self.rewards
+        self.task_obs["terminations"] = self.terminations
+        self.task_obs["truncations"] = self.truncations
+
+        self.task_obs["image_obs"] = self.obs_dict["depth_range_pixels"]
+
+    def compute_rewards_and_crashes(self, obs_dict):
+        # edit reward evaluation
+        robot_position = obs_dict["robot_position"]
+        robot_linvel = obs_dict["robot_body_linvel"]
+        angular_velocity = obs_dict["robot_body_angvel"]
+        euler_angles = obs_dict["robot_euler_angles"]
+        image_obs = obs_dict["depth_range_pixels"]
+        return compute_reward(
+            robot_position,
+            robot_linvel,
+            angular_velocity,
+            euler_angles,
+            image_obs,
+            obs_dict["crashes"],
+            self.curriculum_progress_fraction,
+            self.task_config.reward_parameters,
+        )
+
+
+@torch.jit.script
+def exponential_reward_function(
+    magnitude: float, exponent: float, value: torch.Tensor
+) -> torch.Tensor:
+    """Exponential reward function"""
+    return magnitude * torch.exp(-(value * value) * exponent)
+
+
+@torch.jit.script
+def exponential_penalty_function(
+    magnitude: float, exponent: float, value: torch.Tensor
+) -> torch.Tensor:
+    """Exponential reward function"""
+    return magnitude * (torch.exp(-(value * value) * exponent) - 1.0)
+
+
+@torch.jit.script
+def compute_reward(
+    robot_pos,
+    robot_linvel,
+    angular_velocity,
+    euler_angles,
+    image_obs,
+    crashes,
+    curriculum_progress_fraction,
+    parameter_dict
+):
+    # type: (Tensor, Tensor, Tensor, Tensor, Tensor, Tensor, float, Dict[str, Tensor]) -> Tuple[Tensor, Tensor, Tensor] 
+    # edit reward (l(x)) computation
+    min_wall_dist = torch.min(torch.cat([robot_pos, 1 - robot_pos], 1), 1)[0]
+    reward = torch.min(torch.cat((parameter_dict["velocity_max"] - torch.abs(robot_linvel[:, 0]),
+                                   parameter_dict["velocity_max"] - torch.abs(robot_linvel[:, 1]),
+                                   parameter_dict["velocity_max"] - torch.abs(robot_linvel[:, 2]),
+                                   parameter_dict["angvel_max"] - torch.abs(angular_velocity[:, 0]),
+                                   parameter_dict["angvel_max"] - torch.abs(angular_velocity[:, 1]),
+                                   parameter_dict["angvel_max"] - torch.abs(angular_velocity[:, 2]),
+                                   parameter_dict["angle_max"] - torch.abs(euler_angles[:, 0]),
+                                   parameter_dict["angle_max"] - torch.abs(euler_angles[:, 1]),
+                                   parameter_dict["obs_dist_lmin"] - torch.amin(image_obs, [1,2]),
+                                   parameter_dict["wall_dist_lmin"] - min_wall_dist), 1), 1)[0]
+    
+    g_x = torch.min(torch.cat((parameter_dict["obs_dist_gmin"] - torch.amin(image_obs, [1,2]),
+                                parameter_dict["wall_dist_gmin"] - min_wall_dist), 1), 1)[0]
+
+    reward[:] = torch.where(
+        crashes > 0,
+        parameter_dict["collision_penalty"] * torch.ones_like(reward),
+        reward,
+    )
+    return reward, g_x, crashes
